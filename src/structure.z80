CS_COUNT:   .set 0

CS_10:  .set  0
CS_9:   .set  0
CS_8:   .set  0
CS_7:   .set  0
CS_6:   .set  0
CS_5:   .set  0
CS_4:   .set  0
CS_3:   .set  0
CS_2:   .set  0
CS_TOP: .set  0

.macro CS_PUSH, arg
    CS_COUNT:   .set    CS_COUNT + 1


    CS_10:  .set CS_9
    CS_9:   .set CS_8
    CS_8:   .set CS_7
    CS_7:   .set CS_6
    CS_6:   .set CS_5
    CS_5:   .set CS_4
    CS_4:   .set CS_3
    CS_3:   .set CS_2
    CS_2:   .set CS_TOP
    CS_TOP: .set arg
.endm

.macro CS_POP
    CS_COUNT:   .set    CS_COUNT - 1

    CS_10:  .set 0
    CS_9:   .set CS_10
    CS_8:   .set CS_9
    CS_7:   .set CS_8
    CS_6:   .set CS_7
    CS_5:   .set CS_6
    CS_4:   .set CS_5
    CS_3:   .set CS_4
    CS_2:   .set CS_3
    CS_TOP: .set CS_2
.endm

.macro CS_CHECK
	.if	CS_COUNT != 0
	    db CS_COUNT
		.pstr "Control-flow stack is unbalanced"
	.endif
.endm

; _IF ... _ELSE ... _ENDIF

.macro _IF, cond
    jr cond, IF_%%M
    jr 0
    CS_PUSH $
IF_%%M:

.endm

.macro _ELSE
    jr  0
    CUR_ADR: .set $
    org CS_TOP - 1
    db  CUR_ADR - CS_TOP
    org CUR_ADR
    CS_TOP: .set $
.endm

.macro _ENDIF

    CUR_ADR: .set $
    org CS_TOP - 1
    db CUR_ADR - CS_TOP
    CS_POP
    org  CUR_ADR
.endm

; _DO ...<test> _WHILE ... _WEND

.macro _DO
    CS_PUSH $
.endm

.macro _WHILE, cond
    jr cond, WHILE_%%M
    jr 0
    CS_PUSH $
WHILE_%%M:
.endm

.macro _WEND
    jr CS_2
    CUR_ADR: .set  $
    org CS_TOP - 1
    db CUR_ADR - CS_TOP
    CS_POP
    CS_POP
    org CUR_ADR
.endm

