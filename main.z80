.engine mycomputer

TESTMODE equ 0

.include "constants.z80"
.include "macros.z80"
.include "struct-macros.z80"
.include "dloop-macros.z80"
.include "compiler-macros.z80"

.org START_ROM
RST00:                                      ; Reset
    di                                      ; Disable interrupts
    jp start

.org $0008
RST08:                                      ; Check serial status
    jp enter

.org $0010
RST10:                                      ; TX a character over RS232
    jp putc

.org $0018
RST18:                                      ; RX a character over RS232 Channel A [Console], hold here until char ready.
    jp getc

.org $0020
RST20:                                      ; Check serial status
    jp inputReady

.org $0038
RST38:                                      ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
    jp serialIn

.org $0066                                  ; rst 66 - NON-MASKABLE INTERRUPT
RST66:
    ret                                     ; do nothing

.include "utilities.z80"

.include "basic-words.z80"
.include "dict-words.z80"
.include "extended-words.z80"
.include "interp-words.z80"
.include "primitives.z80"

.include "definitions.z80"                  ; must be included last

start:
    ld SP, RET_STACK                        ; Initialise the return stack.
    call init

.if TESTMODE
    jp TESTS_START

.else
    PRINT_STR TXT_INTRO
    jp QUIT
.endif

org START_RAM

.if TESTMODE

TESTS_START:

    .include "test-macros.z80"
.endif

.if TESTMODE = 1
    .include "tests.z80"
.endif

.if TESTMODE = 2

ppushValue 2
ppushValue 3
ld DE, PLUS
call forth
EXPECT 5, "2 + 3 expect 6"

; rst 08
; dw SPFETCH, dot
; dw EXIT_forth

; rst 08
; dw SPFETCH, dot
; dw EXIT_forth

; TEST_SET_TEXT "16 base !"
; INTERPRET
; TEST_SET_TEXT "100 konstant k1"
; INTERPRET
; nop
; TEST_SET_TEXT "k1"
; INTERPRET
; EXPECT $100, "expect $100"

.endif

.if TESTMODE
    PRINT_STR DONE
    halt

.endif

.include "variables.z80"

START_USER:                                 ; user allocated data starts here
