.engine mycomputer

TESTMODE equ 0

.include "constants.z80"
.include "macros.z80"
.include "struct-macros.z80"
.include "compiler-macros.z80"

.org START_ROM
RST00:                                      ; Reset
    di                                  ; Disable interrupts
    jp START

.org $0008
RST08:                                      ; TX a character over RS232
    jp putc

.org $0010
RST10:                                      ; RX a character over RS232 Channel A [Console], hold here until char ready.
    jp getc

.org $0018
RST18:                                      ; Check serial status
    jp inputReady

.org $0038
RST38:                                      ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
    jp serialIn

.org $0066                       ; rst 66 - NON-MASKABLE INTERRUPT
RST66:
    ret                                ; do nothing

.include "utilities.z80"
.include "primitives.z80"
.include "words.z80"

START:
    ld SP, RET_STACK                    ; Initialise the return stack.
    ld IX, PAR_STACK                    ; Initialise the param stack.
    ld BC, 0                            ; TOS
    ld IY, DO_NEXT_1                    ; fast way to jump to NEXT_1
    ld HL,serBuf
    ld (serInPtr),HL
    ld (serRdPtr),HL
    xor A                               ; 0 to accumulator
    ld (serBufUsed),A
    ld A,RTS_LOW
    out ($80),A                         ; Initialise ACIA
    im 1
    ei

.if TESTMODE
    jp TESTS_START

.else
    PRINT_STR TXT_INTRO
    ld DE, COLD                         ; Initialise interpreter.
    NEXT
.endif

org START_RAM

.if TESTMODE

TESTS_START:

    .include "test-macros.z80"
.endif


.if TESTMODE = 1
    .include "tests.z80"
.endif

.if TESTMODE = 2
    ; ////////////////////////////////////
    TEST_PUSH 2
    TEST_PUSH 2
    TEST_SET_TEXT "ADD"
    TEST_WORD INTERPRET
    TEST_EXPECT 4, "2 2 ADD = 4"
.endif

.if TESTMODE
    PRINT_STR DONE
    halt
.endif

.include "variables.z80"

START_USER:                     ; user allocated data starts here
