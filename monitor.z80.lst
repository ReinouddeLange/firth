0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   0   
0000                             ; 
0000                             ; constant
0000                             ; 
0000                             ; constamts decalred in assembly lanaguage
0000                             ; 
0000                ROM_SIZE:   EQU   $2000   
0000                RAM_SIZE:   EQU   $10000 - ROM_SIZE   
0000                RET_STACK_SIZE:   EQU   $80   ; return stack
0000                DATA_STACK_SIZE:   EQU   $80   ; data stack
0000                PAD_SIZE:   EQU   $80   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                START_ROM:   EQU   0   
0000                START_RAM:   EQU   START_ROM + ROM_SIZE   
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   
0000                RET_STACK:   EQU   END_RAM   ; return stack, grows down
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; 
0000                             ; macros
0000                             ; 
0000                             ; macros used by forth and a few utility routines
0000                             ; 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro DEFWORD,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro DEFVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                defword name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro DEFCONST,name,namelen,flags,label,value
0000                             ; 
0000                defword name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW ZBRANCH, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRANCH, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRANCH, 6
0000                 DW BRANCH, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW ZBRANCH, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, ZBRANCH, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRANCH, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRANCH, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRANCH, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 43 10               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 D4 07               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 90 00               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                             ; serial I/O
0067                INITSERIAL:      
0067   21 00 00               LD   HL,0   
006A   22 43 20               LD   (serbufused),HL   
006D   21 00 20               LD   HL,serbuf   
0070   22 3F 20               LD   (serinptr),HL   
0073   22 41 20               LD   (serrdptr),HL   
0076   21 4D 20               LD   HL,linebuf   
0079   22 45 20               LD   (lineBufStart),HL   
007C   22 49 20               LD   (currkey),HL   
007F   22 4B 20               LD   (linebuftop),HL   
0082   21 80 00               LD   HL,LINE_BUFSIZE   
0085   22 47 20               LD   (lineBufSize),HL   
0088   3E 96                  LD   A,rts_low   
008A   D3 80                  OUT   ($80),A   ; initialise acia
008C   ED 56                  IM   1   
008E   FB                     EI      
008F   C9                     RET      
0090                SERIALIN:      
0090   F5                     PUSH   AF   
0091   E5                     PUSH   HL   
0092   DB 80                  IN   A,($80)   
0094   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
0096                          ;*Macro unroll:  _if nz
0096   C2 9C 00               JP   nz,L_M_625   
0099   C3 99 00               JP   $   
009C                          ;*Macro unroll:  STRUC_PUSH $
009C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
009C                STRUC_12:   .SET   STRUC_11   
009C                STRUC_11:   .SET   STRUC_10   
009C                STRUC_10:   .SET   STRUC_9   
009C                STRUC_9:   .SET   STRUC_8   
009C                STRUC_8:   .SET   STRUC_7   
009C                STRUC_7:   .SET   STRUC_6   
009C                STRUC_6:   .SET   STRUC_5   
009C                STRUC_5:   .SET   STRUC_4   
009C                STRUC_4:   .SET   STRUC_3   
009C                STRUC_3:   .SET   STRUC_2   
009C                STRUC_2:   .SET   STRUC_TOP   
009C                STRUC_TOP:   .SET   $   
009C                L_M_625:      
009C   DB 81                  IN   A,($81)   
009E   F5                     PUSH   AF   
009F   3A 43 20               LD   A,(serBufUsed)   
00A2   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
00A4                          ;*Macro unroll:  _if z
00A4   CA AA 00               JP   z,L_M_630   
00A7   C3 A7 00               JP   $   
00AA                          ;*Macro unroll:  STRUC_PUSH $
00AA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00AA                STRUC_12:   .SET   STRUC_11   
00AA                STRUC_11:   .SET   STRUC_10   
00AA                STRUC_10:   .SET   STRUC_9   
00AA                STRUC_9:   .SET   STRUC_8   
00AA                STRUC_8:   .SET   STRUC_7   
00AA                STRUC_7:   .SET   STRUC_6   
00AA                STRUC_6:   .SET   STRUC_5   
00AA                STRUC_5:   .SET   STRUC_4   
00AA                STRUC_4:   .SET   STRUC_3   
00AA                STRUC_3:   .SET   STRUC_2   
00AA                STRUC_2:   .SET   STRUC_TOP   
00AA                STRUC_TOP:   .SET   $   
00AA                L_M_630:      
00AA   F1                     POP   AF   
00AB                          ;*Macro unroll:  _else
00AB   C3 AB 00               JP   $   
00AE                          ;*Macro unroll:  STRUC_FWD
00AE                CUR_ADR:   .SET   $   
00A8                          .ORG   STRUC_TOP - 2   
00A8   AE 00                  DW   CUR_ADR   
00AE                          .ORG   CUR_ADR   
00AE                STRUC_TOP:   .SET   $   
00AE   2A 3F 20               LD   HL,(serInPtr)   
00B1   23                     INC   HL   
00B2   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
00B3   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
00B5                          ;*Macro unroll:  _if z
00B5   CA BB 00               JP   z,L_M_637   
00B8   C3 B8 00               JP   $   
00BB                          ;*Macro unroll:  STRUC_PUSH $
00BB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00BB                STRUC_12:   .SET   STRUC_11   
00BB                STRUC_11:   .SET   STRUC_10   
00BB                STRUC_10:   .SET   STRUC_9   
00BB                STRUC_9:   .SET   STRUC_8   
00BB                STRUC_8:   .SET   STRUC_7   
00BB                STRUC_7:   .SET   STRUC_6   
00BB                STRUC_6:   .SET   STRUC_5   
00BB                STRUC_5:   .SET   STRUC_4   
00BB                STRUC_4:   .SET   STRUC_3   
00BB                STRUC_3:   .SET   STRUC_2   
00BB                STRUC_2:   .SET   STRUC_TOP   
00BB                STRUC_TOP:   .SET   $   
00BB                L_M_637:      
00BB   21 00 20               LD   HL,serBuf   
00BE                          ;*Macro unroll:  _endif
00BE                          ;*Macro unroll:  STRUC_FWD
00BE                CUR_ADR:   .SET   $   
00B9                          .ORG   STRUC_TOP - 2   
00B9   BE 00                  DW   CUR_ADR   
00BE                          .ORG   CUR_ADR   
00BE                          ;*Macro unroll:  STRUC_POP
00BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00BE                STRUC_TOP:   .SET   STRUC_2   
00BE                STRUC_2:   .SET   STRUC_3   
00BE                STRUC_3:   .SET   STRUC_4   
00BE                STRUC_4:   .SET   STRUC_5   
00BE                STRUC_5:   .SET   STRUC_6   
00BE                STRUC_6:   .SET   STRUC_7   
00BE                STRUC_7:   .SET   STRUC_8   
00BE                STRUC_8:   .SET   STRUC_9   
00BE                STRUC_9:   .SET   STRUC_10   
00BE                STRUC_10:   .SET   STRUC_11   
00BE                STRUC_11:   .SET   STRUC_12   
00BE                STRUC_12:   .SET   0   
00BE   22 3F 20               LD   (serInPtr),HL   
00C1   F1                     POP   AF   
00C2   77                     LD   (HL),A   
00C3   3A 43 20               LD   A,(serBufUsed)   
00C6   3C                     INC   A   
00C7   32 43 20               LD   (serBufUsed),A   
00CA   FE 30                  CP   SER_FULLSIZE   
00CC                          ;*Macro unroll:  _if nc
00CC   D2 D2 00               JP   nc,L_M_647   
00CF   C3 CF 00               JP   $   
00D2                          ;*Macro unroll:  STRUC_PUSH $
00D2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00D2                STRUC_12:   .SET   STRUC_11   
00D2                STRUC_11:   .SET   STRUC_10   
00D2                STRUC_10:   .SET   STRUC_9   
00D2                STRUC_9:   .SET   STRUC_8   
00D2                STRUC_8:   .SET   STRUC_7   
00D2                STRUC_7:   .SET   STRUC_6   
00D2                STRUC_6:   .SET   STRUC_5   
00D2                STRUC_5:   .SET   STRUC_4   
00D2                STRUC_4:   .SET   STRUC_3   
00D2                STRUC_3:   .SET   STRUC_2   
00D2                STRUC_2:   .SET   STRUC_TOP   
00D2                STRUC_TOP:   .SET   $   
00D2                L_M_647:      
00D2   3E D6                  LD   A,RTS_HIGH   
00D4   D3 80                  OUT   ($80),A   
00D6                          ;*Macro unroll:  _endif
00D6                          ;*Macro unroll:  STRUC_FWD
00D6                CUR_ADR:   .SET   $   
00D0                          .ORG   STRUC_TOP - 2   
00D0   D6 00                  DW   CUR_ADR   
00D6                          .ORG   CUR_ADR   
00D6                          ;*Macro unroll:  STRUC_POP
00D6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00D6                STRUC_TOP:   .SET   STRUC_2   
00D6                STRUC_2:   .SET   STRUC_3   
00D6                STRUC_3:   .SET   STRUC_4   
00D6                STRUC_4:   .SET   STRUC_5   
00D6                STRUC_5:   .SET   STRUC_6   
00D6                STRUC_6:   .SET   STRUC_7   
00D6                STRUC_7:   .SET   STRUC_8   
00D6                STRUC_8:   .SET   STRUC_9   
00D6                STRUC_9:   .SET   STRUC_10   
00D6                STRUC_10:   .SET   STRUC_11   
00D6                STRUC_11:   .SET   STRUC_12   
00D6                STRUC_12:   .SET   0   
00D6                          ;*Macro unroll:  _endif
00D6                          ;*Macro unroll:  STRUC_FWD
00D6                CUR_ADR:   .SET   $   
00AC                          .ORG   STRUC_TOP - 2   
00AC   D6 00                  DW   CUR_ADR   
00D6                          .ORG   CUR_ADR   
00D6                          ;*Macro unroll:  STRUC_POP
00D6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00D6                STRUC_TOP:   .SET   STRUC_2   
00D6                STRUC_2:   .SET   STRUC_3   
00D6                STRUC_3:   .SET   STRUC_4   
00D6                STRUC_4:   .SET   STRUC_5   
00D6                STRUC_5:   .SET   STRUC_6   
00D6                STRUC_6:   .SET   STRUC_7   
00D6                STRUC_7:   .SET   STRUC_8   
00D6                STRUC_8:   .SET   STRUC_9   
00D6                STRUC_9:   .SET   STRUC_10   
00D6                STRUC_10:   .SET   STRUC_11   
00D6                STRUC_11:   .SET   STRUC_12   
00D6                STRUC_12:   .SET   0   
00D6                          ;*Macro unroll:  _endif
00D6                          ;*Macro unroll:  STRUC_FWD
00D6                CUR_ADR:   .SET   $   
009A                          .ORG   STRUC_TOP - 2   
009A   D6 00                  DW   CUR_ADR   
00D6                          .ORG   CUR_ADR   
00D6                          ;*Macro unroll:  STRUC_POP
00D6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00D6                STRUC_TOP:   .SET   STRUC_2   
00D6                STRUC_2:   .SET   STRUC_3   
00D6                STRUC_3:   .SET   STRUC_4   
00D6                STRUC_4:   .SET   STRUC_5   
00D6                STRUC_5:   .SET   STRUC_6   
00D6                STRUC_6:   .SET   STRUC_7   
00D6                STRUC_7:   .SET   STRUC_8   
00D6                STRUC_8:   .SET   STRUC_9   
00D6                STRUC_9:   .SET   STRUC_10   
00D6                STRUC_10:   .SET   STRUC_11   
00D6                STRUC_11:   .SET   STRUC_12   
00D6                STRUC_12:   .SET   0   
00D6   E1                     POP   HL   
00D7   F1                     POP   AF   
00D8   FB                     EI      
00D9   C9                     RET      
00DA                             ; 
00DA                             ; getc - input
00DA                             ; returns: A = input char
00DA                             ; 
00DA                GETC:        
00DA                          IF   TESTMODE   
                              PUSH   HL   
                              LD   HL,(char_pointer)   
                              LD   A,(HL)   
                              INC   HL   
                              LD   (char_pointer),HL   
                              POP   HL   
                              RET      
00DA                          ELSE      
00DA                          ;*Macro unroll:  _do
00DA   18 03                  JR   L_M_671   
00DC   C3 DC 00               JP   $   
00DF                          ;*Macro unroll:  DLOOP_PUSH $
00DF                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
00DF                DLOOP_12:   .SET   DLOOP_11   
00DF                DLOOP_11:   .SET   DLOOP_10   
00DF                DLOOP_10:   .SET   DLOOP_9   
00DF                DLOOP_9:   .SET   DLOOP_8   
00DF                DLOOP_8:   .SET   DLOOP_7   
00DF                DLOOP_7:   .SET   DLOOP_6   
00DF                DLOOP_6:   .SET   DLOOP_5   
00DF                DLOOP_5:   .SET   DLOOP_4   
00DF                DLOOP_4:   .SET   DLOOP_3   
00DF                DLOOP_3:   .SET   DLOOP_2   
00DF                DLOOP_2:   .SET   DLOOP_TOP   
00DF                DLOOP_TOP:   .SET   $   
00DF                L_M_671:      
00DF   3A 43 20               LD   A,(serBufUsed)   
00E2   FE 00                  CP   $00   
00E4                          ;*Macro unroll:  _until nz
00E4   C2 DC 00               JP   nz,DLOOP_TOP - 3   
00E7                          ;*Macro unroll:  DLOOP_FWD               ; needed?
00E7                CUR_ADR:   .SET   $   ; needed?
00DD                          .ORG   DLOOP_TOP - 2   
00DD   E7 00                  DW   CUR_ADR   
00E7                          .ORG   CUR_ADR   
00E7                          ;*Macro unroll:  _enddo
00E7   C3 DF 00               JP   DLOOP_TOP   
00EA                          ;*Macro unroll:  DLOOP_FWD
00EA                CUR_ADR:   .SET   $   
00DD                          .ORG   DLOOP_TOP - 2   
00DD   EA 00                  DW   CUR_ADR   
00EA                          .ORG   CUR_ADR   
00EA                          ;*Macro unroll:  DLOOP_POP
00EA                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
00EA                DLOOP_TOP:   .SET   DLOOP_2   
00EA                DLOOP_2:   .SET   DLOOP_3   
00EA                DLOOP_3:   .SET   DLOOP_4   
00EA                DLOOP_4:   .SET   DLOOP_5   
00EA                DLOOP_5:   .SET   DLOOP_6   
00EA                DLOOP_6:   .SET   DLOOP_7   
00EA                DLOOP_7:   .SET   DLOOP_8   
00EA                DLOOP_8:   .SET   DLOOP_9   
00EA                DLOOP_9:   .SET   DLOOP_10   
00EA                DLOOP_10:   .SET   DLOOP_11   
00EA                DLOOP_11:   .SET   DLOOP_12   
00EA                DLOOP_12:   .SET   0   
00EA   E5                     PUSH   HL   
00EB   2A 41 20               LD   HL,(serRdPtr)   
00EE   23                     INC   HL   
00EF   7D                     LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
00F0   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
00F2                          ;*Macro unroll:  _if z
00F2   CA F8 00               JP   z,L_M_681   
00F5   C3 F5 00               JP   $   
00F8                          ;*Macro unroll:  STRUC_PUSH $
00F8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00F8                STRUC_12:   .SET   STRUC_11   
00F8                STRUC_11:   .SET   STRUC_10   
00F8                STRUC_10:   .SET   STRUC_9   
00F8                STRUC_9:   .SET   STRUC_8   
00F8                STRUC_8:   .SET   STRUC_7   
00F8                STRUC_7:   .SET   STRUC_6   
00F8                STRUC_6:   .SET   STRUC_5   
00F8                STRUC_5:   .SET   STRUC_4   
00F8                STRUC_4:   .SET   STRUC_3   
00F8                STRUC_3:   .SET   STRUC_2   
00F8                STRUC_2:   .SET   STRUC_TOP   
00F8                STRUC_TOP:   .SET   $   
00F8                L_M_681:      
00F8   21 00 20               LD   HL,serBuf   
00FB                          ;*Macro unroll:  _endif
00FB                          ;*Macro unroll:  STRUC_FWD
00FB                CUR_ADR:   .SET   $   
00F6                          .ORG   STRUC_TOP - 2   
00F6   FB 00                  DW   CUR_ADR   
00FB                          .ORG   CUR_ADR   
00FB                          ;*Macro unroll:  STRUC_POP
00FB                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00FB                STRUC_TOP:   .SET   STRUC_2   
00FB                STRUC_2:   .SET   STRUC_3   
00FB                STRUC_3:   .SET   STRUC_4   
00FB                STRUC_4:   .SET   STRUC_5   
00FB                STRUC_5:   .SET   STRUC_6   
00FB                STRUC_6:   .SET   STRUC_7   
00FB                STRUC_7:   .SET   STRUC_8   
00FB                STRUC_8:   .SET   STRUC_9   
00FB                STRUC_9:   .SET   STRUC_10   
00FB                STRUC_10:   .SET   STRUC_11   
00FB                STRUC_11:   .SET   STRUC_12   
00FB                STRUC_12:   .SET   0   
00FB   F3                     DI      
00FC   22 41 20               LD   (serRdPtr),HL   
00FF   3A 43 20               LD   A,(serBufUsed)   
0102   3D                     DEC   A   
0103   32 43 20               LD   (serBufUsed),A   
0106   FE 05                  CP   SER_EMPTYSIZE   
0108                          ;*Macro unroll:  _if c
0108   DA 0E 01               JP   c,L_M_690   
010B   C3 0B 01               JP   $   
010E                          ;*Macro unroll:  STRUC_PUSH $
010E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
010E                STRUC_12:   .SET   STRUC_11   
010E                STRUC_11:   .SET   STRUC_10   
010E                STRUC_10:   .SET   STRUC_9   
010E                STRUC_9:   .SET   STRUC_8   
010E                STRUC_8:   .SET   STRUC_7   
010E                STRUC_7:   .SET   STRUC_6   
010E                STRUC_6:   .SET   STRUC_5   
010E                STRUC_5:   .SET   STRUC_4   
010E                STRUC_4:   .SET   STRUC_3   
010E                STRUC_3:   .SET   STRUC_2   
010E                STRUC_2:   .SET   STRUC_TOP   
010E                STRUC_TOP:   .SET   $   
010E                L_M_690:      
010E   3E 96                  LD   A,RTS_LOW   
0110   D3 80                  OUT   ($80),A   
0112                          ;*Macro unroll:  _endif
0112                          ;*Macro unroll:  STRUC_FWD
0112                CUR_ADR:   .SET   $   
010C                          .ORG   STRUC_TOP - 2   
010C   12 01                  DW   CUR_ADR   
0112                          .ORG   CUR_ADR   
0112                          ;*Macro unroll:  STRUC_POP
0112                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0112                STRUC_TOP:   .SET   STRUC_2   
0112                STRUC_2:   .SET   STRUC_3   
0112                STRUC_3:   .SET   STRUC_4   
0112                STRUC_4:   .SET   STRUC_5   
0112                STRUC_5:   .SET   STRUC_6   
0112                STRUC_6:   .SET   STRUC_7   
0112                STRUC_7:   .SET   STRUC_8   
0112                STRUC_8:   .SET   STRUC_9   
0112                STRUC_9:   .SET   STRUC_10   
0112                STRUC_10:   .SET   STRUC_11   
0112                STRUC_11:   .SET   STRUC_12   
0112                STRUC_12:   .SET   0   
0112   7E                     LD   A,(HL)   
0113   FB                     EI      
0114   E1                     POP   HL   
0115   C9                     RET      ; Char ready in A
0116                          ENDIF      
0116                             ; 
0116                             ; putc - output a character
0116                             ; params: A = char to output
0116                             ; 
0116                PUTC:        
0116   F5                     PUSH   AF   ; Store character
0117                          ;*Macro unroll:  _do
0117   18 03                  JR   L_M_705   
0119   C3 19 01               JP   $   
011C                          ;*Macro unroll:  DLOOP_PUSH $
011C                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
011C                DLOOP_12:   .SET   DLOOP_11   
011C                DLOOP_11:   .SET   DLOOP_10   
011C                DLOOP_10:   .SET   DLOOP_9   
011C                DLOOP_9:   .SET   DLOOP_8   
011C                DLOOP_8:   .SET   DLOOP_7   
011C                DLOOP_7:   .SET   DLOOP_6   
011C                DLOOP_6:   .SET   DLOOP_5   
011C                DLOOP_5:   .SET   DLOOP_4   
011C                DLOOP_4:   .SET   DLOOP_3   
011C                DLOOP_3:   .SET   DLOOP_2   
011C                DLOOP_2:   .SET   DLOOP_TOP   
011C                DLOOP_TOP:   .SET   $   
011C                L_M_705:      
011C   DB 80                  IN   A,($80)   ; Status byte
011E   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
0120                          ;*Macro unroll:  _until nz
0120   C2 19 01               JP   nz,DLOOP_TOP - 3   
0123                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0123                CUR_ADR:   .SET   $   ; needed?
011A                          .ORG   DLOOP_TOP - 2   
011A   23 01                  DW   CUR_ADR   
0123                          .ORG   CUR_ADR   
0123                          ;*Macro unroll:  _enddo
0123   C3 1C 01               JP   DLOOP_TOP   
0126                          ;*Macro unroll:  DLOOP_FWD
0126                CUR_ADR:   .SET   $   
011A                          .ORG   DLOOP_TOP - 2   
011A   26 01                  DW   CUR_ADR   
0126                          .ORG   CUR_ADR   
0126                          ;*Macro unroll:  DLOOP_POP
0126                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0126                DLOOP_TOP:   .SET   DLOOP_2   
0126                DLOOP_2:   .SET   DLOOP_3   
0126                DLOOP_3:   .SET   DLOOP_4   
0126                DLOOP_4:   .SET   DLOOP_5   
0126                DLOOP_5:   .SET   DLOOP_6   
0126                DLOOP_6:   .SET   DLOOP_7   
0126                DLOOP_7:   .SET   DLOOP_8   
0126                DLOOP_8:   .SET   DLOOP_9   
0126                DLOOP_9:   .SET   DLOOP_10   
0126                DLOOP_10:   .SET   DLOOP_11   
0126                DLOOP_11:   .SET   DLOOP_12   
0126                DLOOP_12:   .SET   0   
0126   F1                     POP   AF   ; Retrieve character
0127   D3 81                  OUT   ($81),A   ; Output the character
0129   C9                     RET      
012A                INPUTREADY:      
012A   3A 43 20               LD   A,(serBufUsed)   
012D   FE 00                  CP   $0   
012F   C9                     RET      
0130                             ; 
0130                             ; getline - input line of text ***
0130                             ; params: HL = addr, DE = max (currently up to 255)
0130                             ; returns: BC = length - up to 255
0130                             ; 
0130                GETLINE:      
0130   F5                     PUSH   AF   
0131   E5                     PUSH   HL   
0132                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
0132                          ;*Macro unroll:  ppush0 D,E
0132   DD 73 00               LD   (IX+0),E   
0135   DD 23                  INC   IX   
0137   DD 72 00               LD   (IX+0),D   
013A   DD 23                  INC   IX   
013C   11 22 02               LD   DE,TXT_PROMPT   
013F   CD F5 01               CALL   printPStr   
0142                          ;*Macro unroll:  ppop0 D,E
0142   DD 2B                  DEC   IX   
0144   DD 56 00               LD   D,(IX+0)   
0147   DD 2B                  DEC   IX   
0149   DD 5E 00               LD   E,(IX+0)   
014C   E1                     POP   HL   
014D   E5                     PUSH   HL   
014E   01 00 00               LD   BC,0   
0151                          ;*Macro unroll:  _do
0151   18 03                  JR   L_M_729   
0153   C3 53 01               JP   $   
0156                          ;*Macro unroll:  DLOOP_PUSH $
0156                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0156                DLOOP_12:   .SET   DLOOP_11   
0156                DLOOP_11:   .SET   DLOOP_10   
0156                DLOOP_10:   .SET   DLOOP_9   
0156                DLOOP_9:   .SET   DLOOP_8   
0156                DLOOP_8:   .SET   DLOOP_7   
0156                DLOOP_7:   .SET   DLOOP_6   
0156                DLOOP_6:   .SET   DLOOP_5   
0156                DLOOP_5:   .SET   DLOOP_4   
0156                DLOOP_4:   .SET   DLOOP_3   
0156                DLOOP_3:   .SET   DLOOP_2   
0156                DLOOP_2:   .SET   DLOOP_TOP   
0156                DLOOP_TOP:   .SET   $   
0156                L_M_729:      
0156                          ;*Macro unroll:  _do
0156   18 03                  JR   L_M_730   
0158   C3 58 01               JP   $   
015B                          ;*Macro unroll:  DLOOP_PUSH $
015B                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
015B                DLOOP_12:   .SET   DLOOP_11   
015B                DLOOP_11:   .SET   DLOOP_10   
015B                DLOOP_10:   .SET   DLOOP_9   
015B                DLOOP_9:   .SET   DLOOP_8   
015B                DLOOP_8:   .SET   DLOOP_7   
015B                DLOOP_7:   .SET   DLOOP_6   
015B                DLOOP_6:   .SET   DLOOP_5   
015B                DLOOP_5:   .SET   DLOOP_4   
015B                DLOOP_4:   .SET   DLOOP_3   
015B                DLOOP_3:   .SET   DLOOP_2   
015B                DLOOP_2:   .SET   DLOOP_TOP   
015B                DLOOP_TOP:   .SET   $   
015B                L_M_730:      
015B   CD DA 00               CALL   getc   
015E   FE 08                  CP   $08   
0160                          ;*Macro unroll:  _if z
0160   CA 66 01               JP   z,L_M_733   
0163   C3 63 01               JP   $   
0166                          ;*Macro unroll:  STRUC_PUSH $
0166                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0166                STRUC_12:   .SET   STRUC_11   
0166                STRUC_11:   .SET   STRUC_10   
0166                STRUC_10:   .SET   STRUC_9   
0166                STRUC_9:   .SET   STRUC_8   
0166                STRUC_8:   .SET   STRUC_7   
0166                STRUC_7:   .SET   STRUC_6   
0166                STRUC_6:   .SET   STRUC_5   
0166                STRUC_5:   .SET   STRUC_4   
0166                STRUC_4:   .SET   STRUC_3   
0166                STRUC_3:   .SET   STRUC_2   
0166                STRUC_2:   .SET   STRUC_TOP   
0166                STRUC_TOP:   .SET   $   
0166                L_M_733:      
0166                          ;*Macro unroll:  checkZeroWord B,C
0166   79                     LD   A,C   
0167   B0                     OR   B   
0168                          ;*Macro unroll:  _if nz
0168   C2 6E 01               JP   nz,L_M_735   
016B   C3 6B 01               JP   $   
016E                          ;*Macro unroll:  STRUC_PUSH $
016E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
016E                STRUC_12:   .SET   STRUC_11   
016E                STRUC_11:   .SET   STRUC_10   
016E                STRUC_10:   .SET   STRUC_9   
016E                STRUC_9:   .SET   STRUC_8   
016E                STRUC_8:   .SET   STRUC_7   
016E                STRUC_7:   .SET   STRUC_6   
016E                STRUC_6:   .SET   STRUC_5   
016E                STRUC_5:   .SET   STRUC_4   
016E                STRUC_4:   .SET   STRUC_3   
016E                STRUC_3:   .SET   STRUC_2   
016E                STRUC_2:   .SET   STRUC_TOP   
016E                STRUC_TOP:   .SET   $   
016E                L_M_735:      
016E   2B                     DEC   HL   
016F   0B                     DEC   BC   
0170   3E 08                  LD   a,$08   
0172   CD 16 01               CALL   putc   
0175   CD 17 02               CALL   printSpace   
0178   3E 08                  LD   A,$08   
017A   CD 16 01               CALL   putc   
017D                          ;*Macro unroll:  _endif
017D                          ;*Macro unroll:  STRUC_FWD
017D                CUR_ADR:   .SET   $   
016C                          .ORG   STRUC_TOP - 2   
016C   7D 01                  DW   CUR_ADR   
017D                          .ORG   CUR_ADR   
017D                          ;*Macro unroll:  STRUC_POP
017D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
017D                STRUC_TOP:   .SET   STRUC_2   
017D                STRUC_2:   .SET   STRUC_3   
017D                STRUC_3:   .SET   STRUC_4   
017D                STRUC_4:   .SET   STRUC_5   
017D                STRUC_5:   .SET   STRUC_6   
017D                STRUC_6:   .SET   STRUC_7   
017D                STRUC_7:   .SET   STRUC_8   
017D                STRUC_8:   .SET   STRUC_9   
017D                STRUC_9:   .SET   STRUC_10   
017D                STRUC_10:   .SET   STRUC_11   
017D                STRUC_11:   .SET   STRUC_12   
017D                STRUC_12:   .SET   0   
017D                          ;*Macro unroll:  _else
017D   C3 7D 01               JP   $   
0180                          ;*Macro unroll:  STRUC_FWD
0180                CUR_ADR:   .SET   $   
0164                          .ORG   STRUC_TOP - 2   
0164   80 01                  DW   CUR_ADR   
0180                          .ORG   CUR_ADR   
0180                STRUC_TOP:   .SET   $   
0180   77                     LD   (HL),A   
0181   23                     INC   HL   
0182   03                     INC   BC   
0183   CB 7F                  BIT   7,a   
0185                          ;*Macro unroll:  _if z
0185   CA 8B 01               JP   z,L_M_749   
0188   C3 88 01               JP   $   
018B                          ;*Macro unroll:  STRUC_PUSH $
018B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
018B                STRUC_12:   .SET   STRUC_11   
018B                STRUC_11:   .SET   STRUC_10   
018B                STRUC_10:   .SET   STRUC_9   
018B                STRUC_9:   .SET   STRUC_8   
018B                STRUC_8:   .SET   STRUC_7   
018B                STRUC_7:   .SET   STRUC_6   
018B                STRUC_6:   .SET   STRUC_5   
018B                STRUC_5:   .SET   STRUC_4   
018B                STRUC_4:   .SET   STRUC_3   
018B                STRUC_3:   .SET   STRUC_2   
018B                STRUC_2:   .SET   STRUC_TOP   
018B                STRUC_TOP:   .SET   $   
018B                L_M_749:      
018B   CD 16 01               CALL   putc   
018E                          ;*Macro unroll:  _endif
018E                          ;*Macro unroll:  STRUC_FWD
018E                CUR_ADR:   .SET   $   
0189                          .ORG   STRUC_TOP - 2   
0189   8E 01                  DW   CUR_ADR   
018E                          .ORG   CUR_ADR   
018E                          ;*Macro unroll:  STRUC_POP
018E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
018E                STRUC_TOP:   .SET   STRUC_2   
018E                STRUC_2:   .SET   STRUC_3   
018E                STRUC_3:   .SET   STRUC_4   
018E                STRUC_4:   .SET   STRUC_5   
018E                STRUC_5:   .SET   STRUC_6   
018E                STRUC_6:   .SET   STRUC_7   
018E                STRUC_7:   .SET   STRUC_8   
018E                STRUC_8:   .SET   STRUC_9   
018E                STRUC_9:   .SET   STRUC_10   
018E                STRUC_10:   .SET   STRUC_11   
018E                STRUC_11:   .SET   STRUC_12   
018E                STRUC_12:   .SET   0   
018E   FE 0D                  CP   "\r"   
0190   28 0B                  JR   z,getLineCheck   
0192   FE 0A                  CP   "\n"   
0194   28 07                  JR   z,getLineCheck   
0196   7B                     LD   A,E   
0197   B9                     CP   C   
0198   38 03                  JR   c,getLineCheck   
019A                          ;*Macro unroll:  _endif
019A                          ;*Macro unroll:  STRUC_FWD
019A                CUR_ADR:   .SET   $   
017E                          .ORG   STRUC_TOP - 2   
017E   9A 01                  DW   CUR_ADR   
019A                          .ORG   CUR_ADR   
019A                          ;*Macro unroll:  STRUC_POP
019A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
019A                STRUC_TOP:   .SET   STRUC_2   
019A                STRUC_2:   .SET   STRUC_3   
019A                STRUC_3:   .SET   STRUC_4   
019A                STRUC_4:   .SET   STRUC_5   
019A                STRUC_5:   .SET   STRUC_6   
019A                STRUC_6:   .SET   STRUC_7   
019A                STRUC_7:   .SET   STRUC_8   
019A                STRUC_8:   .SET   STRUC_9   
019A                STRUC_9:   .SET   STRUC_10   
019A                STRUC_10:   .SET   STRUC_11   
019A                STRUC_11:   .SET   STRUC_12   
019A                STRUC_12:   .SET   0   
019A                          ;*Macro unroll:  _enddo
019A   C3 5B 01               JP   DLOOP_TOP   
019D                          ;*Macro unroll:  DLOOP_FWD
019D                CUR_ADR:   .SET   $   
0159                          .ORG   DLOOP_TOP - 2   
0159   9D 01                  DW   CUR_ADR   
019D                          .ORG   CUR_ADR   
019D                          ;*Macro unroll:  DLOOP_POP
019D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
019D                DLOOP_TOP:   .SET   DLOOP_2   
019D                DLOOP_2:   .SET   DLOOP_3   
019D                DLOOP_3:   .SET   DLOOP_4   
019D                DLOOP_4:   .SET   DLOOP_5   
019D                DLOOP_5:   .SET   DLOOP_6   
019D                DLOOP_6:   .SET   DLOOP_7   
019D                DLOOP_7:   .SET   DLOOP_8   
019D                DLOOP_8:   .SET   DLOOP_9   
019D                DLOOP_9:   .SET   DLOOP_10   
019D                DLOOP_10:   .SET   DLOOP_11   
019D                DLOOP_11:   .SET   DLOOP_12   
019D                DLOOP_12:   .SET   0   
019D                GETLINECHECK:      
019D   3E 00                  LD   a,0   
019F   B9                     CP   c   
01A0                          ;*Macro unroll:  _until nz
01A0   C2 53 01               JP   nz,DLOOP_TOP - 3   
01A3                          ;*Macro unroll:  DLOOP_FWD               ; needed?
01A3                CUR_ADR:   .SET   $   ; needed?
0154                          .ORG   DLOOP_TOP - 2   
0154   A3 01                  DW   CUR_ADR   
01A3                          .ORG   CUR_ADR   
01A3                          ;*Macro unroll:  _enddo
01A3   C3 56 01               JP   DLOOP_TOP   
01A6                          ;*Macro unroll:  DLOOP_FWD
01A6                CUR_ADR:   .SET   $   
0154                          .ORG   DLOOP_TOP - 2   
0154   A6 01                  DW   CUR_ADR   
01A6                          .ORG   CUR_ADR   
01A6                          ;*Macro unroll:  DLOOP_POP
01A6                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
01A6                DLOOP_TOP:   .SET   DLOOP_2   
01A6                DLOOP_2:   .SET   DLOOP_3   
01A6                DLOOP_3:   .SET   DLOOP_4   
01A6                DLOOP_4:   .SET   DLOOP_5   
01A6                DLOOP_5:   .SET   DLOOP_6   
01A6                DLOOP_6:   .SET   DLOOP_7   
01A6                DLOOP_7:   .SET   DLOOP_8   
01A6                DLOOP_8:   .SET   DLOOP_9   
01A6                DLOOP_9:   .SET   DLOOP_10   
01A6                DLOOP_10:   .SET   DLOOP_11   
01A6                DLOOP_11:   .SET   DLOOP_12   
01A6                DLOOP_12:   .SET   0   
01A6   F1                     POP   AF   
01A7   E1                     POP   HL   
01A8   CD 0E 02               CALL   printCR   
01AB   C9                     RET      
01AC                PRINTROUTINE:      
01AC                          ;*Macro unroll:  _do
01AC   18 03                  JR   L_M_771   
01AE   C3 AE 01               JP   $   
01B1                          ;*Macro unroll:  DLOOP_PUSH $
01B1                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
01B1                DLOOP_12:   .SET   DLOOP_11   
01B1                DLOOP_11:   .SET   DLOOP_10   
01B1                DLOOP_10:   .SET   DLOOP_9   
01B1                DLOOP_9:   .SET   DLOOP_8   
01B1                DLOOP_8:   .SET   DLOOP_7   
01B1                DLOOP_7:   .SET   DLOOP_6   
01B1                DLOOP_6:   .SET   DLOOP_5   
01B1                DLOOP_5:   .SET   DLOOP_4   
01B1                DLOOP_4:   .SET   DLOOP_3   
01B1                DLOOP_3:   .SET   DLOOP_2   
01B1                DLOOP_2:   .SET   DLOOP_TOP   
01B1                DLOOP_TOP:   .SET   $   
01B1                L_M_771:      
01B1   1A                     LD   A,(DE)   
01B2   CD 16 01               CALL   putc   
01B5   13                     INC   DE   
01B6   0B                     DEC   BC   
01B7                          ;*Macro unroll:  checkZeroWord B,C
01B7   79                     LD   A,C   
01B8   B0                     OR   B   
01B9                          ;*Macro unroll:  _until z
01B9   CA AE 01               JP   z,DLOOP_TOP - 3   
01BC                          ;*Macro unroll:  DLOOP_FWD               ; needed?
01BC                CUR_ADR:   .SET   $   ; needed?
01AF                          .ORG   DLOOP_TOP - 2   
01AF   BC 01                  DW   CUR_ADR   
01BC                          .ORG   CUR_ADR   
01BC                          ;*Macro unroll:  _enddo
01BC   C3 B1 01               JP   DLOOP_TOP   
01BF                          ;*Macro unroll:  DLOOP_FWD
01BF                CUR_ADR:   .SET   $   
01AF                          .ORG   DLOOP_TOP - 2   
01AF   BF 01                  DW   CUR_ADR   
01BF                          .ORG   CUR_ADR   
01BF                          ;*Macro unroll:  DLOOP_POP
01BF                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
01BF                DLOOP_TOP:   .SET   DLOOP_2   
01BF                DLOOP_2:   .SET   DLOOP_3   
01BF                DLOOP_3:   .SET   DLOOP_4   
01BF                DLOOP_4:   .SET   DLOOP_5   
01BF                DLOOP_5:   .SET   DLOOP_6   
01BF                DLOOP_6:   .SET   DLOOP_7   
01BF                DLOOP_7:   .SET   DLOOP_8   
01BF                DLOOP_8:   .SET   DLOOP_9   
01BF                DLOOP_9:   .SET   DLOOP_10   
01BF                DLOOP_10:   .SET   DLOOP_11   
01BF                DLOOP_11:   .SET   DLOOP_12   
01BF                DLOOP_12:   .SET   0   
01BF   C9                     RET      
01C0                             ; 
01C0                             ; getKey -  inputs a line buffered character
01C0                             ; params: none
01C0                             ; returns: A = character,
01C0                             ; 
01C0                GETKEY:      
01C0   E5                     PUSH   HL   
01C1   D5                     PUSH   DE   
01C2   C5                     PUSH   BC   
01C3   2A 49 20               LD   HL,(currkey)   
01C6   ED 5B 4B 20            LD   DE,(lineBufTop)   
01CA   B7                     OR   A   
01CB   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
01CD                          ;*Macro unroll:  _if nc
01CD   D2 D3 01               JP   nc,L_M_793   
01D0   C3 D0 01               JP   $   
01D3                          ;*Macro unroll:  STRUC_PUSH $
01D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01D3                STRUC_12:   .SET   STRUC_11   
01D3                STRUC_11:   .SET   STRUC_10   
01D3                STRUC_10:   .SET   STRUC_9   
01D3                STRUC_9:   .SET   STRUC_8   
01D3                STRUC_8:   .SET   STRUC_7   
01D3                STRUC_7:   .SET   STRUC_6   
01D3                STRUC_6:   .SET   STRUC_5   
01D3                STRUC_5:   .SET   STRUC_4   
01D3                STRUC_4:   .SET   STRUC_3   
01D3                STRUC_3:   .SET   STRUC_2   
01D3                STRUC_2:   .SET   STRUC_TOP   
01D3                STRUC_TOP:   .SET   $   
01D3                L_M_793:      
01D3   2A 45 20               LD   HL,(lineBufStart)   ; lineBuf
01D6   ED 5B 47 20            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
01DA   CD 30 01               CALL   getline   
01DD   21 4D 20               LD   HL,lineBuf   
01E0   22 49 20               LD   (currkey),HL   
01E3   B7                     OR   A   
01E4   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
01E6   22 4B 20               LD   (lineBufTop),HL   
01E9                          ;*Macro unroll:  _endif
01E9                          ;*Macro unroll:  STRUC_FWD
01E9                CUR_ADR:   .SET   $   
01D1                          .ORG   STRUC_TOP - 2   
01D1   E9 01                  DW   CUR_ADR   
01E9                          .ORG   CUR_ADR   
01E9                          ;*Macro unroll:  STRUC_POP
01E9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01E9                STRUC_TOP:   .SET   STRUC_2   
01E9                STRUC_2:   .SET   STRUC_3   
01E9                STRUC_3:   .SET   STRUC_4   
01E9                STRUC_4:   .SET   STRUC_5   
01E9                STRUC_5:   .SET   STRUC_6   
01E9                STRUC_6:   .SET   STRUC_7   
01E9                STRUC_7:   .SET   STRUC_8   
01E9                STRUC_8:   .SET   STRUC_9   
01E9                STRUC_9:   .SET   STRUC_10   
01E9                STRUC_10:   .SET   STRUC_11   
01E9                STRUC_11:   .SET   STRUC_12   
01E9                STRUC_12:   .SET   0   
01E9   2A 49 20               LD   HL,(currkey)   
01EC   7E                     LD   A,(HL)   ; get next key from input lineBuf
01ED   23                     INC   HL   
01EE   22 49 20               LD   (currkey),HL   ; increment currkey
01F1   C1                     POP   BC   
01F2   D1                     POP   DE   
01F3   E1                     POP   HL   
01F4   C9                     RET      
01F5                             ; 
01F5                             ; Output pascal string ***
01F5                             ; params: DE = addr
01F5                             ; 
01F5                PRINTPSTR:      
01F5   F5                     PUSH   AF   
01F6   C5                     PUSH   BC   
01F7   D5                     PUSH   DE   
01F8   1A                     LD   A,(DE)   
01F9   4F                     LD   C,A   
01FA   06 00                  LD   B,0   
01FC   13                     INC   DE   
01FD   CD AC 01               CALL   printRoutine   
0200   D1                     POP   DE   
0201   C1                     POP   BC   
0202   F1                     POP   AF   
0203   C9                     RET      
0204                             ; 
0204                             ; Output string
0204                             ; params: DE = addr, BC = length
0204                             ; 
0204                PRINTSTR:      
0204   F5                     PUSH   AF   
0205   C5                     PUSH   BC   
0206   D5                     PUSH   DE   
0207   CD AC 01               CALL   printRoutine   
020A   D1                     POP   DE   
020B   C1                     POP   BC   
020C   F1                     POP   AF   
020D   C9                     RET      
020E                PRINTCR:      
020E   D5                     PUSH   DE   
020F   11 1F 02               LD   DE,TXT_NEWLINE   
0212   CD F5 01               CALL   printPStr   
0215   D1                     POP   DE   
0216   C9                     RET      
0217                PRINTSPACE:      
0217   F5                     PUSH   AF   
0218   3E 20                  LD   A," "   
021A   CD 16 01               CALL   putc   
021D   F1                     POP   AF   
021E   C9                     RET      
021F   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
0222   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
0227   03 3D 3E 20  STACKPROMPT:   .PSTR   "=> "   
022B   23 54 45 43 2D 31 20 4D 6F 6E 69 74 6F 72 20 33 2E 30 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_MONITOR_INTRO:   .PSTR   "TEC-1 Monitor 3.0 by John Hardy\r\n\r\n"   
024F                             ; ; words must preserve: BC, DE, SP, IX
024F                             ; ; words may destroy: HL, IY, AF, AF", BC", DE" HL"
024F                          ;*Macro unroll: defword "quit",4,0,quit
024F                HEADER_QUIT:      
024F   00 00                  DW   link   
0251                LINK:     .SET   HEADER_quit   
0251   04                     DB   0 + 4   
0252   71 75 69 74            DB   "quit"   
0256                QUIT:        
0256   31 00 00               LD   sp,ret_stack   
0259   CD 69 0B               CALL   interpret   ; interpret the next word
025C                          ;*Macro unroll:  NEXT
025C   C3 D4 07               JP   enter   
025F                          ;*Macro unroll: defword "xword",6,0,xword               ; delim limit addr -- c-addr
025F                HEADER_XWORD:      ; delim limit addr -- c-addr
025F   4F 02                  DW   link   
0261                LINK:     .SET   HEADER_xword   
0261   06                     DB   0 + 6   
0262   78 77 6F 72 64         DB   "xword"   
0267                XWORD:       
0267   CD E7 09               CALL   xwordSkip   
026A   CD 7B 0A               CALL   xwordRead   
026D                          ;*Macro unroll:  NEXT
026D   C3 D4 07               JP   enter   
0270                          ;*Macro unroll: defword "find",4,0,FIND
0270                HEADER_FIND:      
0270   5F 02                  DW   link   
0272                LINK:     .SET   HEADER_FIND   
0272   04                     DB   0 + 4   
0273   66 69 6E 64            DB   "find"   
0277                FIND:        
0277                          ;*Macro unroll:  ppop0 H,L
0277   DD 2B                  DEC   IX   
0279   DD 66 00               LD   H,(IX+0)   
027C   DD 2B                  DEC   IX   
027E   DD 6E 00               LD   L,(IX+0)   
0281   CD 86 09               CALL   lookup   ; params: HL = string address, BC = string length
0284                             ; returns: DE = found header ptr or 0
0284                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
0284   4B                     LD   C,E   ; move to TOS
0285   42                     LD   B,D   
0286                          ;*Macro unroll:  NEXT
0286   C3 D4 07               JP   enter   
0289                          ;*Macro unroll: defword "execute",7,0,EXECUTE
0289                HEADER_EXECUTE:      
0289   70 02                  DW   link   
028B                LINK:     .SET   HEADER_EXECUTE   
028B   07                     DB   0 + 7   
028C   65 78 65 63 75 74 65   DB   "execute"   
0293                EXECUTE:      
0293                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0293   60                     LD   H,B   ; POP TOS into HL
0294   69                     LD   L,C   
0295                          ;*Macro unroll:  ppop0 B,C
0295   DD 2B                  DEC   IX   
0297   DD 46 00               LD   B,(IX+0)   
029A   DD 2B                  DEC   IX   
029C   DD 4E 00               LD   C,(IX+0)   
029F   E9                     JP   (hl)   ; go do Forth word
02A0                          ;*Macro unroll: defword "number",6,0,NUMBER         ; ( ptr len -- num err )
02A0                HEADER_NUMBER:      ; ( ptr len -- num err )
02A0   89 02                  DW   link   
02A2                LINK:     .SET   HEADER_NUMBER   
02A2   06                     DB   0 + 6   
02A3   6E 75 6D 62 65 72      DB   "number"   
02A9                NUMBER:      
02A9                          ;*Macro unroll:  ppop0 H,L
02A9   DD 2B                  DEC   IX   
02AB   DD 66 00               LD   H,(IX+0)   
02AE   DD 2B                  DEC   IX   
02B0   DD 6E 00               LD   L,(IX+0)   
02B3   CD A6 08               CALL   toNumber   ; params: HL = string address, BC = string length
02B6                             ; Returns the parsed number in DE,
02B6                             ; BC = 0, success
02B6                          ;*Macro unroll:  ppush0 D,E
02B6   DD 73 00               LD   (IX+0),E   
02B9   DD 23                  INC   IX   
02BB   DD 72 00               LD   (IX+0),D   
02BE   DD 23                  INC   IX   
02C0                          ;*Macro unroll:  NEXT
02C0   C3 D4 07               JP   enter   
02C3                          ;*Macro unroll: defword "+!",2,0,ADDSTORE               ; (n addr -- )
02C3                HEADER_ADDSTORE:      ; (n addr -- )
02C3   A0 02                  DW   link   
02C5                LINK:     .SET   HEADER_ADDSTORE   
02C5   02                     DB   0 + 2   
02C6   2B 21                  DB   "+!"   
02C8                ADDSTORE:      
02C8                          ;*Macro unroll: 	ppop H, L		            ; HL = address, TOS = amount to add
02C8   60                     LD   H,B   ; HL = address, TOS = amount to add
02C9   69                     LD   L,C   
02CA                          ;*Macro unroll:  ppop0 B,C
02CA   DD 2B                  DEC   IX   
02CC   DD 46 00               LD   B,(IX+0)   
02CF   DD 2B                  DEC   IX   
02D1   DD 4E 00               LD   C,(IX+0)   
02D4   7E                     LD   A,(HL)   
02D5   81                     ADD   A,C   ; add TOS at (HL),
02D6   77                     LD   (HL),A   
02D7   23                     INC   HL   
02D8   7E                     LD   A,(HL)   
02D9   88                     ADC   A,B   
02DA   77                     LD   (HL),A   
02DB                          ;*Macro unroll: 	ppop0 B,C                      ; clear param stack
02DB   DD 2B                  DEC   IX   ; clear param stack
02DD   DD 46 00               LD   B,(IX+0)   
02E0   DD 2B                  DEC   IX   
02E2   DD 4E 00               LD   C,(IX+0)   
02E5                          ;*Macro unroll:  NEXT
02E5   C3 D4 07               JP   enter   
02E8                          ;*Macro unroll: defword "hidden",6,0,HIDDEN
02E8                HEADER_HIDDEN:      
02E8   C3 02                  DW   link   
02EA                LINK:     .SET   HEADER_HIDDEN   
02EA   06                     DB   0 + 6   
02EB   68 69 64 64 65 6E      DB   "hidden"   
02F1                HIDDEN:      
02F1                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
02F1   60                     LD   H,B   ; HL = Dictionary entry.
02F2   69                     LD   L,C   
02F3                          ;*Macro unroll:  ppop0 B,C
02F3   DD 2B                  DEC   IX   
02F5   DD 46 00               LD   B,(IX+0)   
02F8   DD 2B                  DEC   IX   
02FA   DD 4E 00               LD   C,(IX+0)   
02FD   23                     INC   HL   
02FE   23                     INC   HL   ; Point to name/flags byte.
02FF   7E                     LD   A,(HL)   
0300   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
0302   77                     LD   (HL),A   
0303                          ;*Macro unroll:  NEXT
0303   C3 D4 07               JP   enter   
0306                             ; 1+      n1/u1 -- n2/u2            add 1 to TOS
0306                          ;*Macro unroll: defword "1+",2,0,onePlus
0306                HEADER_ONEPLUS:      
0306   E8 02                  DW   link   
0308                LINK:     .SET   HEADER_onePlus   
0308   02                     DB   0 + 2   
0309   31 2B                  DB   "1+"   
030B                ONEPLUS:      
030B   03                     INC   BC   
030C                          ;*Macro unroll:  NEXT
030C   C3 D4 07               JP   enter   
030F                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
030F                          ;*Macro unroll: defword "2+",2,0,twoPlus
030F                HEADER_TWOPLUS:      
030F   06 03                  DW   link   
0311                LINK:     .SET   HEADER_twoPlus   
0311   02                     DB   0 + 2   
0312   32 2B                  DB   "2+"   
0314                TWOPLUS:      
0314   03                     INC   BC   
0315   03                     INC   BC   
0316                          ;*Macro unroll:  NEXT
0316   C3 D4 07               JP   enter   
0319                             ; ?branch   x --              branch if TOS zero
0319                          ;*Macro unroll: defword "0branch",7,0,ZBRANCH
0319                HEADER_ZBRANCH:      
0319   0F 03                  DW   link   
031B                LINK:     .SET   HEADER_ZBRANCH   
031B   07                     DB   0 + 7   
031C   30 62 72 61 6E 63 68   DB   "0branch"   
0323                ZBRANCH:      
0323                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
0323   79                     LD   A,C   ; test old TOS
0324   B0                     OR   B   
0325                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
0325   DD 2B                  DEC   IX   ; POP new TOS
0327   DD 46 00               LD   B,(IX+0)   
032A   DD 2B                  DEC   IX   
032C   DD 4E 00               LD   C,(IX+0)   
032F   28 0F                  JR   z,BRANCH   ; if old TOS=0, branch
0331   E1                     POP   HL   
0332   23                     INC   HL   ; else skip inline value
0333   23                     INC   HL   
0334                          ;*Macro unroll:  NEXT1
0334   C3 D5 07               JP   enter1   
0337                          ;*Macro unroll: defword "branch",6,0,BRANCH         ; relative branching
0337                HEADER_BRANCH:      ; relative branching
0337   19 03                  DW   link   
0339                LINK:     .SET   HEADER_BRANCH   
0339   06                     DB   0 + 6   
033A   62 72 61 6E 63 68      DB   "branch"   
0340                BRANCH:      
0340   E1                     POP   HL   ; add the offset to the instruction pointer
0341   5E                     LD   E,(HL)   
0342   23                     INC   HL   
0343   56                     LD   D,(HL)   
0344   2B                     DEC   HL   
0345   19                     ADD   HL,DE   
0346                          ;*Macro unroll:  NEXT1
0346   C3 D5 07               JP   enter1   
0349                          ;*Macro unroll: defword "lit",3,0,LIT
0349                HEADER_LIT:      
0349   37 03                  DW   link   
034B                LINK:     .SET   HEADER_LIT   
034B   03                     DB   0 + 3   
034C   6C 69 74               DB   "lit"   
034F                LIT:         
034F                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
034F   DD 71 00               LD   (IX+0),C   ; pushTOS
0352   DD 23                  INC   IX   
0354   DD 70 00               LD   (IX+0),B   
0357   DD 23                  INC   IX   
0359   E1                     POP   HL   ; pop address of next Forth word in HL
035A                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
035A   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
035B   23                     INC   HL   
035C   46                     LD   B,(HL)   
035D   23                     INC   HL   
035E                          ;*Macro unroll:  NEXT1
035E   C3 D5 07               JP   enter1   
0361                             ; 0<     n -- flag                  true if TOS negative
0361                          ;*Macro unroll: defword "0<",2,0,ZEROLESS
0361                HEADER_ZEROLESS:      
0361   49 03                  DW   link   
0363                LINK:     .SET   HEADER_ZEROLESS   
0363   02                     DB   0 + 2   
0364   30 3C                  DB   "0<"   
0366                ZEROLESS:      
0366   CB 20                  SLA   b   ; sign bit -> cy flag
0368   9F                     SBC   a,a   
0369   E6 01                  AND   1   ; <0 = -1, >0 = 0
036B   06 00                  LD   b,0   
036D   4F                     LD   c,a   
036E                          ;*Macro unroll:  NEXT
036E   C3 D4 07               JP   enter   
0371                             ; INVERT x1 -- x2               ; bitwise complement
0371                          ;*Macro unroll: defword "invert",6,0,INVERT
0371                HEADER_INVERT:      
0371   61 03                  DW   link   
0373                LINK:     .SET   HEADER_INVERT   
0373   06                     DB   0 + 6   
0374   69 6E 76 65 72 74      DB   "invert"   
037A                INVERT:      
037A   78                     LD   A,B   
037B   2F                     CPL      
037C   47                     LD   B,A   
037D   79                     LD   A,C   
037E   2F                     CPL      
037F   4F                     LD   C,A   
0380                          ;*Macro unroll:  NEXT
0380   C3 D4 07               JP   enter   
0383                             ; 
0383                             ; 
0383                             ; logic
0383                             ; 
0383                             ; 
0383                             ; TRUE
0383                          ;*Macro unroll: defword "true",4,0,TRUE
0383                HEADER_TRUE:      
0383   71 03                  DW   link   
0385                LINK:     .SET   HEADER_TRUE   
0385   04                     DB   0 + 4   
0386   74 72 75 65            DB   "true"   
038A                TRUE:        
038A                          ;*Macro unroll:  ppush0 B,C
038A   DD 71 00               LD   (IX+0),C   
038D   DD 23                  INC   IX   
038F   DD 70 00               LD   (IX+0),B   
0392   DD 23                  INC   IX   
0394   01 01 00               LD   BC,1   
0397                          ;*Macro unroll:  NEXT
0397   C3 D4 07               JP   enter   
039A                             ; FALSE
039A                          ;*Macro unroll: defword "false",5,0,FALSE
039A                HEADER_FALSE:      
039A   83 03                  DW   link   
039C                LINK:     .SET   HEADER_FALSE   
039C   05                     DB   0 + 5   
039D   66 61 6C 73 65         DB   "false"   
03A2                FALSE:       
03A2                          ;*Macro unroll:  ppush0 B,C
03A2   DD 71 00               LD   (IX+0),C   
03A5   DD 23                  INC   IX   
03A7   DD 70 00               LD   (IX+0),B   
03AA   DD 23                  INC   IX   
03AC   01 00 00               LD   BC,0   
03AF                          ;*Macro unroll:  NEXT
03AF   C3 D4 07               JP   enter   
03B2                             ; =      x1 x2 -- flag         test x1=x2
03B2                          ;*Macro unroll: defword "=",1,0,equal
03B2                HEADER_EQUAL:      
03B2   9A 03                  DW   link   
03B4                LINK:     .SET   HEADER_equal   
03B4   01                     DB   0 + 1   
03B5   3D                     DB   "="   
03B6                EQUAL:       
03B6                          ;*Macro unroll:  ppop0 H,L
03B6   DD 2B                  DEC   IX   
03B8   DD 66 00               LD   H,(IX+0)   
03BB   DD 2B                  DEC   IX   
03BD   DD 6E 00               LD   L,(IX+0)   
03C0   B7                     OR   A   
03C1   ED 42                  SBC   HL,BC   ; x1-x2 in HL, SZVC valid
03C3                          ;*Macro unroll:  _if nz
03C3   C2 C9 03               JP   nz,L_M_970   
03C6   C3 C6 03               JP   $   
03C9                          ;*Macro unroll:  STRUC_PUSH $
03C9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03C9                STRUC_12:   .SET   STRUC_11   
03C9                STRUC_11:   .SET   STRUC_10   
03C9                STRUC_10:   .SET   STRUC_9   
03C9                STRUC_9:   .SET   STRUC_8   
03C9                STRUC_8:   .SET   STRUC_7   
03C9                STRUC_7:   .SET   STRUC_6   
03C9                STRUC_6:   .SET   STRUC_5   
03C9                STRUC_5:   .SET   STRUC_4   
03C9                STRUC_4:   .SET   STRUC_3   
03C9                STRUC_3:   .SET   STRUC_2   
03C9                STRUC_2:   .SET   STRUC_TOP   
03C9                STRUC_TOP:   .SET   $   
03C9                L_M_970:      
03C9   01 01 00               LD   BC,1   ;   if -ve, result true
03CC                          ;*Macro unroll:  _endif
03CC                          ;*Macro unroll:  STRUC_FWD
03CC                CUR_ADR:   .SET   $   
03C7                          .ORG   STRUC_TOP - 2   
03C7   CC 03                  DW   CUR_ADR   
03CC                          .ORG   CUR_ADR   
03CC                          ;*Macro unroll:  STRUC_POP
03CC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03CC                STRUC_TOP:   .SET   STRUC_2   
03CC                STRUC_2:   .SET   STRUC_3   
03CC                STRUC_3:   .SET   STRUC_4   
03CC                STRUC_4:   .SET   STRUC_5   
03CC                STRUC_5:   .SET   STRUC_6   
03CC                STRUC_6:   .SET   STRUC_7   
03CC                STRUC_7:   .SET   STRUC_8   
03CC                STRUC_8:   .SET   STRUC_9   
03CC                STRUC_9:   .SET   STRUC_10   
03CC                STRUC_10:   .SET   STRUC_11   
03CC                STRUC_11:   .SET   STRUC_12   
03CC                STRUC_12:   .SET   0   
03CC   03                     INC   BC   
03CD                          ;*Macro unroll:  NEXT
03CD   C3 D4 07               JP   enter   
03D0                             ; <      n1 n2 -- flag          test n1<n2
03D0                          ;*Macro unroll: defword "<",1,0,LESSTHAN	        ; less than
03D0                HEADER_LESSTHAN:      ; less than
03D0   B2 03                  DW   link   
03D2                LINK:     .SET   HEADER_LESSTHAN   
03D2   01                     DB   0 + 1   
03D3   3C                     DB   "<"   
03D4                LESSTHAN:      
03D4                          ;*Macro unroll:  ppop0 H,L
03D4   DD 2B                  DEC   IX   
03D6   DD 66 00               LD   H,(IX+0)   
03D9   DD 2B                  DEC   IX   
03DB   DD 6E 00               LD   L,(IX+0)   
03DE   B7                     OR   A   
03DF   ED 42                  SBC   HL,BC   ; n1-n2 in HL, SZVC valid
03E1                          ;*Macro unroll:  _if pe
03E1   EA E7 03               JP   pe,L_M_980   
03E4   C3 E4 03               JP   $   
03E7                          ;*Macro unroll:  STRUC_PUSH $
03E7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03E7                STRUC_12:   .SET   STRUC_11   
03E7                STRUC_11:   .SET   STRUC_10   
03E7                STRUC_10:   .SET   STRUC_9   
03E7                STRUC_9:   .SET   STRUC_8   
03E7                STRUC_8:   .SET   STRUC_7   
03E7                STRUC_7:   .SET   STRUC_6   
03E7                STRUC_6:   .SET   STRUC_5   
03E7                STRUC_5:   .SET   STRUC_4   
03E7                STRUC_4:   .SET   STRUC_3   
03E7                STRUC_3:   .SET   STRUC_2   
03E7                STRUC_2:   .SET   STRUC_TOP   
03E7                STRUC_TOP:   .SET   $   
03E7                L_M_980:      
03E7                          ;*Macro unroll:  _if m
03E7   FA ED 03               JP   m,L_M_981   
03EA   C3 EA 03               JP   $   
03ED                          ;*Macro unroll:  STRUC_PUSH $
03ED                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03ED                STRUC_12:   .SET   STRUC_11   
03ED                STRUC_11:   .SET   STRUC_10   
03ED                STRUC_10:   .SET   STRUC_9   
03ED                STRUC_9:   .SET   STRUC_8   
03ED                STRUC_8:   .SET   STRUC_7   
03ED                STRUC_7:   .SET   STRUC_6   
03ED                STRUC_6:   .SET   STRUC_5   
03ED                STRUC_5:   .SET   STRUC_4   
03ED                STRUC_4:   .SET   STRUC_3   
03ED                STRUC_3:   .SET   STRUC_2   
03ED                STRUC_2:   .SET   STRUC_TOP   
03ED                STRUC_TOP:   .SET   $   
03ED                L_M_981:      
03ED   01 00 00               LD   bc,0   
03F0                          ;*Macro unroll:  _else
03F0   C3 F0 03               JP   $   
03F3                          ;*Macro unroll:  STRUC_FWD
03F3                CUR_ADR:   .SET   $   
03EB                          .ORG   STRUC_TOP - 2   
03EB   F3 03                  DW   CUR_ADR   
03F3                          .ORG   CUR_ADR   
03F3                STRUC_TOP:   .SET   $   
03F3   01 01 00               LD   bc,1   ;   if -ve, result true
03F6                          ;*Macro unroll:  _endif
03F6                          ;*Macro unroll:  STRUC_FWD
03F6                CUR_ADR:   .SET   $   
03F1                          .ORG   STRUC_TOP - 2   
03F1   F6 03                  DW   CUR_ADR   
03F6                          .ORG   CUR_ADR   
03F6                          ;*Macro unroll:  STRUC_POP
03F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03F6                STRUC_TOP:   .SET   STRUC_2   
03F6                STRUC_2:   .SET   STRUC_3   
03F6                STRUC_3:   .SET   STRUC_4   
03F6                STRUC_4:   .SET   STRUC_5   
03F6                STRUC_5:   .SET   STRUC_6   
03F6                STRUC_6:   .SET   STRUC_7   
03F6                STRUC_7:   .SET   STRUC_8   
03F6                STRUC_8:   .SET   STRUC_9   
03F6                STRUC_9:   .SET   STRUC_10   
03F6                STRUC_10:   .SET   STRUC_11   
03F6                STRUC_11:   .SET   STRUC_12   
03F6                STRUC_12:   .SET   0   
03F6                          ;*Macro unroll:  _else
03F6   C3 F6 03               JP   $   
03F9                          ;*Macro unroll:  STRUC_FWD
03F9                CUR_ADR:   .SET   $   
03E5                          .ORG   STRUC_TOP - 2   
03E5   F9 03                  DW   CUR_ADR   
03F9                          .ORG   CUR_ADR   
03F9                STRUC_TOP:   .SET   $   
03F9                          ;*Macro unroll:  _if p
03F9   F2 FF 03               JP   p,L_M_987   
03FC   C3 FC 03               JP   $   
03FF                          ;*Macro unroll:  STRUC_PUSH $
03FF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03FF                STRUC_12:   .SET   STRUC_11   
03FF                STRUC_11:   .SET   STRUC_10   
03FF                STRUC_10:   .SET   STRUC_9   
03FF                STRUC_9:   .SET   STRUC_8   
03FF                STRUC_8:   .SET   STRUC_7   
03FF                STRUC_7:   .SET   STRUC_6   
03FF                STRUC_6:   .SET   STRUC_5   
03FF                STRUC_5:   .SET   STRUC_4   
03FF                STRUC_4:   .SET   STRUC_3   
03FF                STRUC_3:   .SET   STRUC_2   
03FF                STRUC_2:   .SET   STRUC_TOP   
03FF                STRUC_TOP:   .SET   $   
03FF                L_M_987:      
03FF   01 00 00               LD   bc,0   
0402                          ;*Macro unroll:  _else
0402   C3 02 04               JP   $   
0405                          ;*Macro unroll:  STRUC_FWD
0405                CUR_ADR:   .SET   $   
03FD                          .ORG   STRUC_TOP - 2   
03FD   05 04                  DW   CUR_ADR   
0405                          .ORG   CUR_ADR   
0405                STRUC_TOP:   .SET   $   
0405   01 01 00               LD   bc,1   ;   if -ve, result true
0408                          ;*Macro unroll:  _endif
0408                          ;*Macro unroll:  STRUC_FWD
0408                CUR_ADR:   .SET   $   
0403                          .ORG   STRUC_TOP - 2   
0403   08 04                  DW   CUR_ADR   
0408                          .ORG   CUR_ADR   
0408                          ;*Macro unroll:  STRUC_POP
0408                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0408                STRUC_TOP:   .SET   STRUC_2   
0408                STRUC_2:   .SET   STRUC_3   
0408                STRUC_3:   .SET   STRUC_4   
0408                STRUC_4:   .SET   STRUC_5   
0408                STRUC_5:   .SET   STRUC_6   
0408                STRUC_6:   .SET   STRUC_7   
0408                STRUC_7:   .SET   STRUC_8   
0408                STRUC_8:   .SET   STRUC_9   
0408                STRUC_9:   .SET   STRUC_10   
0408                STRUC_10:   .SET   STRUC_11   
0408                STRUC_11:   .SET   STRUC_12   
0408                STRUC_12:   .SET   0   
0408                          ;*Macro unroll:  _endif
0408                          ;*Macro unroll:  STRUC_FWD
0408                CUR_ADR:   .SET   $   
03F7                          .ORG   STRUC_TOP - 2   
03F7   08 04                  DW   CUR_ADR   
0408                          .ORG   CUR_ADR   
0408                          ;*Macro unroll:  STRUC_POP
0408                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0408                STRUC_TOP:   .SET   STRUC_2   
0408                STRUC_2:   .SET   STRUC_3   
0408                STRUC_3:   .SET   STRUC_4   
0408                STRUC_4:   .SET   STRUC_5   
0408                STRUC_5:   .SET   STRUC_6   
0408                STRUC_6:   .SET   STRUC_7   
0408                STRUC_7:   .SET   STRUC_8   
0408                STRUC_8:   .SET   STRUC_9   
0408                STRUC_9:   .SET   STRUC_10   
0408                STRUC_10:   .SET   STRUC_11   
0408                STRUC_11:   .SET   STRUC_12   
0408                STRUC_12:   .SET   0   
0408                          ;*Macro unroll:  NEXT
0408   C3 D4 07               JP   enter   
040B                             ; >      n1 n2 -- flag          test n1 > n2
040B                          ;*Macro unroll: defword ">",1,0,GREATERTHAN	        ; less than
040B                HEADER_GREATERTHAN:      ; less than
040B   D0 03                  DW   link   
040D                LINK:     .SET   HEADER_GREATERTHAN   
040D   01                     DB   0 + 1   
040E   3E                     DB   ">"   
040F                GREATERTHAN:      
040F                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
040F   DD 2B                  DEC   IX   ; swap operands
0411   DD 66 00               LD   H,(IX+0)   
0414   DD 2B                  DEC   IX   
0416   DD 6E 00               LD   L,(IX+0)   
0419                          ;*Macro unroll:  ppush H,L
0419                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0419   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
041C   DD 23                  INC   IX   
041E   DD 70 00               LD   (IX+0),B   
0421   DD 23                  INC   IX   
0423   44                     LD   B,H   
0424   4D                     LD   C,L   
0425   18 AD                  JR   LESSTHAN   
0427                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0427                             ; ;;
0427                             ; ;; memory access
0427                             ; ;;
0427                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0427                             ; !        x a-addr --   store cell in memory
0427                          ;*Macro unroll: defword "!",1,0,STORE
0427                HEADER_STORE:      
0427   0B 04                  DW   link   
0429                LINK:     .SET   HEADER_STORE   
0429   01                     DB   0 + 1   
042A   21                     DB   "!"   
042B                STORE:       
042B                          ;*Macro unroll:  ppop H,L
042B   60                     LD   H,B   
042C   69                     LD   L,C   
042D                          ;*Macro unroll:  ppop0 B,C
042D   DD 2B                  DEC   IX   
042F   DD 46 00               LD   B,(IX+0)   
0432   DD 2B                  DEC   IX   
0434   DD 4E 00               LD   C,(IX+0)   
0437                          ;*Macro unroll:  writeWord HL, B,C
0437                          ;*Macro unroll:  writeByte HL, C
0437   71                     LD   (HL),C   
0438   23                     INC   HL   
0439                          ;*Macro unroll:  writeByte HL, B
0439   70                     LD   (HL),B   
043A   23                     INC   HL   
043B                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
043B   DD 2B                  DEC   IX   ; POP new TOS
043D   DD 46 00               LD   B,(IX+0)   
0440   DD 2B                  DEC   IX   
0442   DD 4E 00               LD   C,(IX+0)   
0445                          ;*Macro unroll:  NEXT
0445   C3 D4 07               JP   enter   
0448                          ;*Macro unroll: defword ",",1,0,COMMA
0448                HEADER_COMMA:      
0448   27 04                  DW   link   
044A                LINK:     .SET   HEADER_COMMA   
044A   01                     DB   0 + 1   
044B   2C                     DB   ","   
044C                COMMA:       
044C   2A 53 22               LD   HL,(VAR_HERE)   ; HERE
044F                          ;*Macro unroll: 	writeWord HL, B,C
044F                          ;*Macro unroll:  writeByte HL, C
044F   71                     LD   (HL),C   
0450   23                     INC   HL   
0451                          ;*Macro unroll:  writeByte HL, B
0451   70                     LD   (HL),B   
0452   23                     INC   HL   
0453   22 53 22               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0456                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0456   DD 2B                  DEC   IX   ; cleanup TOS
0458   DD 46 00               LD   B,(IX+0)   
045B   DD 2B                  DEC   IX   
045D   DD 4E 00               LD   C,(IX+0)   
0460                          ;*Macro unroll:  NEXT
0460   C3 D4 07               JP   enter   
0463                          ;*Macro unroll: defword "@",1,0,FETCH
0463                HEADER_FETCH:      
0463   48 04                  DW   link   
0465                LINK:     .SET   HEADER_FETCH   
0465   01                     DB   0 + 1   
0466   40                     DB   "@"   
0467                FETCH:       
0467                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0467   69                     LD   L,C   ; HL = TOS
0468   60                     LD   H,B   
0469                          ;*Macro unroll:  readWord HL, B,C
0469   4E                     LD   C,(HL)   
046A   23                     INC   HL   
046B   46                     LD   B,(HL)   
046C   23                     INC   HL   
046D                          ;*Macro unroll:  NEXT
046D   C3 D4 07               JP   enter   
0470                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
0470                          ;*Macro unroll: defword "cells",5,0,CELLS
0470                HEADER_CELLS:      
0470   63 04                  DW   link   
0472                LINK:     .SET   HEADER_CELLS   
0472   05                     DB   0 + 5   
0473   63 65 6C 6C 73         DB   "cells"   
0478                CELLS:       
0478   C3 ED 04               JP   twostar   
047B                             ; C!      char c-addr --    store char in memory
047B                          ;*Macro unroll: defword "c!",2,0,CSTORE
047B                HEADER_CSTORE:      
047B   70 04                  DW   link   
047D                LINK:     .SET   HEADER_CSTORE   
047D   02                     DB   0 + 2   
047E   63 21                  DB   "c!"   
0480                CSTORE:      
0480                          ;*Macro unroll:  ppop H,L
0480   60                     LD   H,B   
0481   69                     LD   L,C   
0482                          ;*Macro unroll:  ppop0 B,C
0482   DD 2B                  DEC   IX   
0484   DD 46 00               LD   B,(IX+0)   
0487   DD 2B                  DEC   IX   
0489   DD 4E 00               LD   C,(IX+0)   
048C   71                     LD   (HL),C   
048D                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
048D   DD 2B                  DEC   IX   ; POP new TOS
048F   DD 46 00               LD   B,(IX+0)   
0492   DD 2B                  DEC   IX   
0494   DD 4E 00               LD   C,(IX+0)   
0497                          ;*Macro unroll:  NEXT
0497   C3 D4 07               JP   enter   
049A                          ;*Macro unroll: defword "c,",1,0,CCOMMA
049A                HEADER_CCOMMA:      
049A   7B 04                  DW   link   
049C                LINK:     .SET   HEADER_CCOMMA   
049C   01                     DB   0 + 1   
049D   63 2C                  DB   "c,"   
049F                CCOMMA:      
049F                          ;*Macro unroll:  ppush0 H,L
049F   DD 75 00               LD   (IX+0),L   
04A2   DD 23                  INC   IX   
04A4   DD 74 00               LD   (IX+0),H   
04A7   DD 23                  INC   IX   
04A9   2A 53 22               LD   HL,(VAR_HERE)   ; HERE
04AC   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
04AD   23                     INC   HL   
04AE   22 53 22               LD   (VAR_HERE),HL   ; Update HERE (incremented)
04B1                          ;*Macro unroll:  ppop0 H,L
04B1   DD 2B                  DEC   IX   
04B3   DD 66 00               LD   H,(IX+0)   
04B6   DD 2B                  DEC   IX   
04B8   DD 6E 00               LD   L,(IX+0)   
04BB                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
04BB   DD 2B                  DEC   IX   ; cleanup TOS
04BD   DD 46 00               LD   B,(IX+0)   
04C0   DD 2B                  DEC   IX   
04C2   DD 4E 00               LD   C,(IX+0)   
04C5                          ;*Macro unroll:  NEXT
04C5   C3 D4 07               JP   enter   
04C8                             ; C@     c-addr -- char   fetch char from memory
04C8                          ;*Macro unroll: defword "c@",2,0,CFETCH
04C8                HEADER_CFETCH:      
04C8   9A 04                  DW   link   
04CA                LINK:     .SET   HEADER_CFETCH   
04CA   02                     DB   0 + 2   
04CB   63 40                  DB   "c@"   
04CD                CFETCH:      
04CD   0A                     LD   A,(BC)   
04CE   4F                     LD   C,A   
04CF   06 00                  LD   B,0   
04D1                          ;*Macro unroll:  NEXT
04D1   C3 D4 07               JP   enter   
04D4                             ; 
04D4                             ; 
04D4                             ; arithmetic
04D4                             ; 
04D4                             ; 
04D4                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
04D4                          ;*Macro unroll: defword "+",1,0,PLUS
04D4                HEADER_PLUS:      
04D4   C8 04                  DW   link   
04D6                LINK:     .SET   HEADER_PLUS   
04D6   01                     DB   0 + 1   
04D7   2B                     DB   "+"   
04D8                PLUS:        
04D8                          ;*Macro unroll:  ppop0 H,L
04D8   DD 2B                  DEC   IX   
04DA   DD 66 00               LD   H,(IX+0)   
04DD   DD 2B                  DEC   IX   
04DF   DD 6E 00               LD   L,(IX+0)   
04E2   09                     ADD   HL,BC   
04E3                          ;*Macro unroll:  loadWord B,C, H,L
04E3   4D                     LD   C,L   
04E4   44                     LD   B,H   
04E5                          ;*Macro unroll:  NEXT
04E5   C3 D4 07               JP   enter   
04E8                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
04E8                          ;*Macro unroll: defword "2*",2,0,TWOSTAR
04E8                HEADER_TWOSTAR:      
04E8   D4 04                  DW   link   
04EA                LINK:     .SET   HEADER_TWOSTAR   
04EA   02                     DB   0 + 2   
04EB   32 2A                  DB   "2*"   
04ED                TWOSTAR:      
04ED   CB 21                  SLA   C   
04EF   CB 10                  RL   B   
04F1                          ;*Macro unroll:  NEXT
04F1   C3 D4 07               JP   enter   
04F4                          ;*Macro unroll: defword "-",1,0,MINUS
04F4                HEADER_MINUS:      
04F4   E8 04                  DW   link   
04F6                LINK:     .SET   HEADER_MINUS   
04F6   01                     DB   0 + 1   
04F7   2D                     DB   "-"   
04F8                MINUS:       
04F8                          ;*Macro unroll:  ppop0 H,L
04F8   DD 2B                  DEC   IX   
04FA   DD 66 00               LD   H,(IX+0)   
04FD   DD 2B                  DEC   IX   
04FF   DD 6E 00               LD   L,(IX+0)   
0502   B7                     OR   A   
0503   ED 42                  SBC   HL,BC   
0505                          ;*Macro unroll:  loadWord B,C, H,L
0505   4D                     LD   C,L   
0506   44                     LD   B,H   
0507                          ;*Macro unroll:  NEXT
0507   C3 D4 07               JP   enter   
050A                             ; U*   u1 u2 -- ud   unsigned mutliply
050A                          ;*Macro unroll: defword "u*",2,0,USTAR              ; u1 u2 -- ud
050A                HEADER_USTAR:      ; u1 u2 -- ud
050A   F4 04                  DW   link   
050C                LINK:     .SET   HEADER_USTAR   
050C   02                     DB   0 + 2   
050D   75 2A                  DB   "u*"   
050F                USTAR:       
050F                             ; u2 in BC
050F                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
050F   DD 2B                  DEC   IX   ; u1 in DE
0511   DD 56 00               LD   D,(IX+0)   
0514   DD 2B                  DEC   IX   
0516   DD 5E 00               LD   E,(IX+0)   
0519   CD 3E 09               CALL   unsignedMultiply   
051C                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
051C   DD 73 00               LD   (IX+0),E   ; udlo result
051F   DD 23                  INC   IX   
0521   DD 72 00               LD   (IX+0),D   
0524   DD 23                  INC   IX   
0526                             ; udhi result
0526                          ;*Macro unroll:  NEXT
0526   C3 D4 07               JP   enter   
0529                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
0529                          ;*Macro unroll: defword "u/mod",5,0,USLASHMOD
0529                HEADER_USLASHMOD:      
0529   0A 05                  DW   link   
052B                LINK:     .SET   HEADER_USLASHMOD   
052B   05                     DB   0 + 5   
052C   75 2F 6D 6F 64         DB   "u/mod"   
0531                USLASHMOD:      
0531                          ;*Macro unroll:  ppop D,E                ; DE = divisor
0531   50                     LD   D,B   ; DE = divisor
0532   59                     LD   E,C   
0533                          ;*Macro unroll:  ppop0 B,C
0533   DD 2B                  DEC   IX   
0535   DD 46 00               LD   B,(IX+0)   
0538   DD 2B                  DEC   IX   
053A   DD 4E 00               LD   C,(IX+0)   
053D                             ; BC = dividend
053D   CD 6C 08               CALL   divideWordByWord   
0540                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
0540   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
0543   DD 23                  INC   IX   
0545   DD 74 00               LD   (IX+0),H   
0548   DD 23                  INC   IX   
054A                          ;*Macro unroll:  NEXT
054A   C3 D4 07               JP   enter   
054D                             ; 
054D                             ; 
054D                             ; logic
054D                             ; 
054D                             ; 
054D                          ;*Macro unroll: defword "[",1,MSK_IMMED,LBRAC
054D                HEADER_LBRAC:      
054D   29 05                  DW   link   
054F                LINK:     .SET   HEADER_LBRAC   
054F   81                     DB   MSK_IMMED + 1   
0550   5B                     DB   "["   
0551                LBRAC:       
0551   21 00 00               LD   HL,0   
0554   22 57 22               LD   (VAR_STATE),HL   ; Set STATE to 0.
0557                          ;*Macro unroll:  NEXT
0557   C3 D4 07               JP   enter   
055A                          ;*Macro unroll: defword "]",1,0,RBRAC
055A                HEADER_RBRAC:      
055A   4D 05                  DW   link   
055C                LINK:     .SET   HEADER_RBRAC   
055C   01                     DB   0 + 1   
055D   5D                     DB   "]"   
055E                RBRAC:       
055E   21 01 00               LD   HL,1   
0561   22 57 22               LD   (VAR_STATE),HL   ; Set STATE to 1.
0564                          ;*Macro unroll:  NEXT
0564   C3 D4 07               JP   enter   
0567                             ; 0= zero-equal
0567                          ;*Macro unroll: defword "0=",2,0,zEqual
0567                HEADER_ZEQUAL:      
0567   5A 05                  DW   link   
0569                LINK:     .SET   HEADER_zEqual   
0569   02                     DB   0 + 2   
056A   30 3D                  DB   "0="   
056C                ZEQUAL:      
056C                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
056C   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
056D   B0                     OR   B   
056E                          ;*Macro unroll:  _if nz
056E   C2 74 05               JP   nz,L_M_1097   
0571   C3 71 05               JP   $   
0574                          ;*Macro unroll:  STRUC_PUSH $
0574                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0574                STRUC_12:   .SET   STRUC_11   
0574                STRUC_11:   .SET   STRUC_10   
0574                STRUC_10:   .SET   STRUC_9   
0574                STRUC_9:   .SET   STRUC_8   
0574                STRUC_8:   .SET   STRUC_7   
0574                STRUC_7:   .SET   STRUC_6   
0574                STRUC_6:   .SET   STRUC_5   
0574                STRUC_5:   .SET   STRUC_4   
0574                STRUC_4:   .SET   STRUC_3   
0574                STRUC_3:   .SET   STRUC_2   
0574                STRUC_2:   .SET   STRUC_TOP   
0574                STRUC_TOP:   .SET   $   
0574                L_M_1097:      
0574   01 FF FF               LD   BC,-1   
0577                          ;*Macro unroll:  _endif
0577                          ;*Macro unroll:  STRUC_FWD
0577                CUR_ADR:   .SET   $   
0572                          .ORG   STRUC_TOP - 2   
0572   77 05                  DW   CUR_ADR   
0577                          .ORG   CUR_ADR   
0577                          ;*Macro unroll:  STRUC_POP
0577                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0577                STRUC_TOP:   .SET   STRUC_2   
0577                STRUC_2:   .SET   STRUC_3   
0577                STRUC_3:   .SET   STRUC_4   
0577                STRUC_4:   .SET   STRUC_5   
0577                STRUC_5:   .SET   STRUC_6   
0577                STRUC_6:   .SET   STRUC_7   
0577                STRUC_7:   .SET   STRUC_8   
0577                STRUC_8:   .SET   STRUC_9   
0577                STRUC_9:   .SET   STRUC_10   
0577                STRUC_10:   .SET   STRUC_11   
0577                STRUC_11:   .SET   STRUC_12   
0577                STRUC_12:   .SET   0   
0577   03                     INC   BC   
0578                          ;*Macro unroll:  NEXT
0578   C3 D4 07               JP   enter   
057B                          ;*Macro unroll: defword "0<>",3,0,zNotEqual
057B                HEADER_ZNOTEQUAL:      
057B   67 05                  DW   link   
057D                LINK:     .SET   HEADER_zNotEqual   
057D   03                     DB   0 + 3   
057E   30 3C 3E               DB   "0<>"   
0581                ZNOTEQUAL:      
0581                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0581   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0582   B0                     OR   B   
0583                          ;*Macro unroll:  _if nz
0583   C2 89 05               JP   nz,L_M_1104   
0586   C3 86 05               JP   $   
0589                          ;*Macro unroll:  STRUC_PUSH $
0589                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0589                STRUC_12:   .SET   STRUC_11   
0589                STRUC_11:   .SET   STRUC_10   
0589                STRUC_10:   .SET   STRUC_9   
0589                STRUC_9:   .SET   STRUC_8   
0589                STRUC_8:   .SET   STRUC_7   
0589                STRUC_7:   .SET   STRUC_6   
0589                STRUC_6:   .SET   STRUC_5   
0589                STRUC_5:   .SET   STRUC_4   
0589                STRUC_4:   .SET   STRUC_3   
0589                STRUC_3:   .SET   STRUC_2   
0589                STRUC_2:   .SET   STRUC_TOP   
0589                STRUC_TOP:   .SET   $   
0589                L_M_1104:      
0589   01 01 00               LD   BC,1   
058C                          ;*Macro unroll:  _endif
058C                          ;*Macro unroll:  STRUC_FWD
058C                CUR_ADR:   .SET   $   
0587                          .ORG   STRUC_TOP - 2   
0587   8C 05                  DW   CUR_ADR   
058C                          .ORG   CUR_ADR   
058C                          ;*Macro unroll:  STRUC_POP
058C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
058C                STRUC_TOP:   .SET   STRUC_2   
058C                STRUC_2:   .SET   STRUC_3   
058C                STRUC_3:   .SET   STRUC_4   
058C                STRUC_4:   .SET   STRUC_5   
058C                STRUC_5:   .SET   STRUC_6   
058C                STRUC_6:   .SET   STRUC_7   
058C                STRUC_7:   .SET   STRUC_8   
058C                STRUC_8:   .SET   STRUC_9   
058C                STRUC_9:   .SET   STRUC_10   
058C                STRUC_10:   .SET   STRUC_11   
058C                STRUC_11:   .SET   STRUC_12   
058C                STRUC_12:   .SET   0   
058C                          ;*Macro unroll:  NEXT
058C   C3 D4 07               JP   enter   
058F                             ; and    x1 x2 -- x3            logical and
058F                          ;*Macro unroll: defword "and",3,0,and	        ; bitwise and
058F                HEADER_AND:      ; bitwise and
058F   7B 05                  DW   link   
0591                LINK:     .SET   HEADER_and   
0591   03                     DB   0 + 3   
0592   61 6E 64               DB   "and"   
0595                AND:         
0595                          ;*Macro unroll:  ppop0 H,L
0595   DD 2B                  DEC   IX   
0597   DD 66 00               LD   H,(IX+0)   
059A   DD 2B                  DEC   IX   
059C   DD 6E 00               LD   L,(IX+0)   
059F   78                     LD   A,b   
05A0   A4                     AND   H   
05A1   47                     LD   B,A   
05A2   79                     LD   A,C   
05A3   A5                     AND   L   
05A4   4F                     LD   C,A   
05A5                          ;*Macro unroll:  NEXT
05A5   C3 D4 07               JP   enter   
05A8                             ; OR    x1 x2 -- x3             logical OR
05A8                          ;*Macro unroll: defword "or",2,0,OR	            ; bitwise OR
05A8                HEADER_OR:      ; bitwise OR
05A8   8F 05                  DW   link   
05AA                LINK:     .SET   HEADER_OR   
05AA   02                     DB   0 + 2   
05AB   6F 72                  DB   "or"   
05AD                OR:          
05AD                          ;*Macro unroll:  ppop0 H,L
05AD   DD 2B                  DEC   IX   
05AF   DD 66 00               LD   H,(IX+0)   
05B2   DD 2B                  DEC   IX   
05B4   DD 6E 00               LD   L,(IX+0)   
05B7   78                     LD   A,B   
05B8   B4                     OR   H   
05B9   47                     LD   B,A   
05BA   79                     LD   A,C   
05BB   B5                     OR   L   
05BC   4F                     LD   C,A   
05BD                          ;*Macro unroll:  NEXT
05BD   C3 D4 07               JP   enter   
05C0                             ; xor    x1 x2 -- x3            logical xor
05C0                          ;*Macro unroll: defword "xor",3,0,xor	        ; bitwise xor
05C0                HEADER_XOR:      ; bitwise xor
05C0   A8 05                  DW   link   
05C2                LINK:     .SET   HEADER_xor   
05C2   03                     DB   0 + 3   
05C3   78 6F 72               DB   "xor"   
05C6                XOR:         
05C6                          ;*Macro unroll:  ppop0 H,L
05C6   DD 2B                  DEC   IX   
05C8   DD 66 00               LD   H,(IX+0)   
05CB   DD 2B                  DEC   IX   
05CD   DD 6E 00               LD   L,(IX+0)   
05D0   78                     LD   A,B   
05D1   AC                     XOR   H   
05D2   47                     LD   B,A   
05D3   79                     LD   A,C   
05D4   AD                     XOR   L   
05D5   4F                     LD   C,A   
05D6                          ;*Macro unroll:  NEXT
05D6   C3 D4 07               JP   enter   
05D9                             ; 
05D9                             ; 
05D9                             ; stack
05D9                             ; 
05D9                             ; 
05D9                          ;*Macro unroll: defword "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
05D9                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
05D9   C0 05                  DW   link   
05DB                LINK:     .SET   HEADER_ROT   
05DB   03                     DB   0 + 3   
05DC   72 6F 74               DB   "rot"   
05DF                ROT:         
05DF                             ; x3 in BC
05DF                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
05DF   DD 2B                  DEC   IX   ; x2 in DE
05E1   DD 56 00               LD   D,(IX+0)   
05E4   DD 2B                  DEC   IX   
05E6   DD 5E 00               LD   E,(IX+0)   
05E9                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
05E9   DD 2B                  DEC   IX   ; x1 in HL
05EB   DD 66 00               LD   H,(IX+0)   
05EE   DD 2B                  DEC   IX   
05F0   DD 6E 00               LD   L,(IX+0)   
05F3                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
05F3   DD 73 00               LD   (IX+0),E   ; x2 on stack
05F6   DD 23                  INC   IX   
05F8   DD 72 00               LD   (IX+0),D   
05FB   DD 23                  INC   IX   
05FD                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
05FD                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
05FD   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0600   DD 23                  INC   IX   
0602   DD 70 00               LD   (IX+0),B   
0605   DD 23                  INC   IX   
0607   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
0608   4D                     LD   C,L   
0609                             ; x1 in BC
0609                          ;*Macro unroll:  NEXT
0609   C3 D4 07               JP   enter   
060C                          ;*Macro unroll: defword "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
060C                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
060C   D9 05                  DW   link   
060E                LINK:     .SET   HEADER_NROT   
060E   04                     DB   0 + 4   
060F   2D 72 6F 74            DB   "-rot"   
0613                NROT:        
0613                             ; x3 in BC
0613                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
0613   DD 2B                  DEC   IX   ; x2 in DE
0615   DD 56 00               LD   D,(IX+0)   
0618   DD 2B                  DEC   IX   
061A   DD 5E 00               LD   E,(IX+0)   
061D                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
061D   DD 2B                  DEC   IX   ; x1 in HL
061F   DD 66 00               LD   H,(IX+0)   
0622   DD 2B                  DEC   IX   
0624   DD 6E 00               LD   L,(IX+0)   
0627                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
0627                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0627   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
062A   DD 23                  INC   IX   
062C   DD 70 00               LD   (IX+0),B   
062F   DD 23                  INC   IX   
0631   44                     LD   B,H   ; PUSH x1 - x3 x1
0632   4D                     LD   C,L   
0633                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
0633                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0633   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0636   DD 23                  INC   IX   
0638   DD 70 00               LD   (IX+0),B   
063B   DD 23                  INC   IX   
063D   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
063E   4B                     LD   C,E   
063F                             ; x2 in BC
063F                          ;*Macro unroll:  NEXT
063F   C3 D4 07               JP   enter   
0642                          ;*Macro unroll: defword "dup",3,0,DUP        ; x -- x x
0642                HEADER_DUP:      ; x -- x x
0642   0C 06                  DW   link   
0644                LINK:     .SET   HEADER_DUP   
0644   03                     DB   0 + 3   
0645   64 75 70               DB   "dup"   
0648                DUP:         
0648                          ;*Macro unroll:  ppush0 B,C
0648   DD 71 00               LD   (IX+0),C   
064B   DD 23                  INC   IX   
064D   DD 70 00               LD   (IX+0),B   
0650   DD 23                  INC   IX   
0652                          ;*Macro unroll:  NEXT
0652   C3 D4 07               JP   enter   
0655                             ; SWAP     x1 x2 -- x2 x1    swap top two items
0655                          ;*Macro unroll: defword "swap",4,0,SWAP      ; x1 x2 -- x2 x1
0655                HEADER_SWAP:      ; x1 x2 -- x2 x1
0655   42 06                  DW   link   
0657                LINK:     .SET   HEADER_SWAP   
0657   04                     DB   0 + 4   
0658   73 77 61 70            DB   "swap"   
065C                SWAP:        
065C                          ;*Macro unroll:  ppop0 D,E
065C   DD 2B                  DEC   IX   
065E   DD 56 00               LD   D,(IX+0)   
0661   DD 2B                  DEC   IX   
0663   DD 5E 00               LD   E,(IX+0)   
0666                          ;*Macro unroll:  ppush D,E
0666                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0666   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0669   DD 23                  INC   IX   
066B   DD 70 00               LD   (IX+0),B   
066E   DD 23                  INC   IX   
0670   42                     LD   B,D   
0671   4B                     LD   C,E   
0672                          ;*Macro unroll:  NEXT
0672   C3 D4 07               JP   enter   
0675                          ;*Macro unroll: defword "drop",4,0,DROP      ; x --
0675                HEADER_DROP:      ; x --
0675   55 06                  DW   link   
0677                LINK:     .SET   HEADER_DROP   
0677   04                     DB   0 + 4   
0678   64 72 6F 70            DB   "drop"   
067C                DROP:        
067C                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
067C   DD 2B                  DEC   IX   ; drop top of stack
067E   DD 46 00               LD   B,(IX+0)   
0681   DD 2B                  DEC   IX   
0683   DD 4E 00               LD   C,(IX+0)   
0686                          ;*Macro unroll:  NEXT
0686   C3 D4 07               JP   enter   
0689                             ; OVER    x1 x2 -- x1 x2 x1
0689                          ;*Macro unroll: defword "over",4,0,OVER
0689                HEADER_OVER:      
0689   75 06                  DW   link   
068B                LINK:     .SET   HEADER_OVER   
068B   04                     DB   0 + 4   
068C   6F 76 65 72            DB   "over"   
0690                OVER:        
0690                          ;*Macro unroll:  ppop0 H,L
0690   DD 2B                  DEC   IX   
0692   DD 66 00               LD   H,(IX+0)   
0695   DD 2B                  DEC   IX   
0697   DD 6E 00               LD   L,(IX+0)   
069A                          ;*Macro unroll:  ppush0 H,L
069A   DD 75 00               LD   (IX+0),L   
069D   DD 23                  INC   IX   
069F   DD 74 00               LD   (IX+0),H   
06A2   DD 23                  INC   IX   
06A4                          ;*Macro unroll:  ppush H,L
06A4                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
06A4   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
06A7   DD 23                  INC   IX   
06A9   DD 70 00               LD   (IX+0),B   
06AC   DD 23                  INC   IX   
06AE   44                     LD   B,H   
06AF   4D                     LD   C,L   
06B0                          ;*Macro unroll:  NEXT
06B0   C3 D4 07               JP   enter   
06B3                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
06B3                          ;*Macro unroll: defword ">r",2,0,TOR
06B3                HEADER_TOR:      
06B3   89 06                  DW   link   
06B5                LINK:     .SET   HEADER_TOR   
06B5   02                     DB   0 + 2   
06B6   3E 72                  DB   ">r"   
06B8                TOR:         
06B8   E1                     POP   HL   
06B9   C5                     PUSH   BC   
06BA   E5                     PUSH   HL   
06BB                          ;*Macro unroll:  ppop0 B,C
06BB   DD 2B                  DEC   IX   
06BD   DD 46 00               LD   B,(IX+0)   
06C0   DD 2B                  DEC   IX   
06C2   DD 4E 00               LD   C,(IX+0)   
06C5                          ;*Macro unroll:  NEXT
06C5   C3 D4 07               JP   enter   
06C8                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
06C8                          ;*Macro unroll: defword "r>",2,0,RFROM
06C8                HEADER_RFROM:      
06C8   B3 06                  DW   link   
06CA                LINK:     .SET   HEADER_RFROM   
06CA   02                     DB   0 + 2   
06CB   72 3E                  DB   "r>"   
06CD                RFROM:       
06CD                          ;*Macro unroll:  ppush0 B,C
06CD   DD 71 00               LD   (IX+0),C   
06D0   DD 23                  INC   IX   
06D2   DD 70 00               LD   (IX+0),B   
06D5   DD 23                  INC   IX   
06D7   E1                     POP   HL   
06D8   C1                     POP   BC   
06D9   E5                     PUSH   HL   
06DA                          ;*Macro unroll:  NEXT
06DA   C3 D4 07               JP   enter   
06DD                             ; 
06DD                             ; 
06DD                             ; output
06DD                             ; 
06DD                             ; 
06DD                          ;*Macro unroll: defword ".",1,0,DOT                 ; print top of stack in BASE
06DD                HEADER_DOT:      ; print top of stack in BASE
06DD   C8 06                  DW   link   
06DF                LINK:     .SET   HEADER_DOT   
06DF   01                     DB   0 + 1   
06E0   2E                     DB   "."   
06E1                DOT:         
06E1   CD E5 07               CALL   printNum   
06E4                          ;*Macro unroll:  ppop0 B,C
06E4   DD 2B                  DEC   IX   
06E6   DD 46 00               LD   B,(IX+0)   
06E9   DD 2B                  DEC   IX   
06EB   DD 4E 00               LD   C,(IX+0)   
06EE                          ;*Macro unroll:  NEXT
06EE   C3 D4 07               JP   enter   
06F1                          ;*Macro unroll: defword "type",4,0,TYPE             ; ( str len -- )
06F1                HEADER_TYPE:      ; ( str len -- )
06F1   DD 06                  DW   link   
06F3                LINK:     .SET   HEADER_TYPE   
06F3   04                     DB   0 + 4   
06F4   74 79 70 65            DB   "type"   
06F8                TYPE:        
06F8                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
06F8   DD 2B                  DEC   IX   ; DE = str BC = length
06FA   DD 56 00               LD   D,(IX+0)   
06FD   DD 2B                  DEC   IX   
06FF   DD 5E 00               LD   E,(IX+0)   
0702   CD 04 02               CALL   printStr   
0705                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0705   DD 2B                  DEC   IX   ; clear TOS
0707   DD 46 00               LD   B,(IX+0)   
070A   DD 2B                  DEC   IX   
070C   DD 4E 00               LD   C,(IX+0)   
070F                          ;*Macro unroll:  NEXT
070F   C3 D4 07               JP   enter   
0712                          ;*Macro unroll: defword "cr",2,0,cr                     ; ( -- )
0712                HEADER_CR:      ; ( -- )
0712   F1 06                  DW   link   
0714                LINK:     .SET   HEADER_cr   
0714   02                     DB   0 + 2   
0715   63 72                  DB   "cr"   
0717                CR:          
0717   CD 0E 02               CALL   printcr   
071A                          ;*Macro unroll:  NEXT
071A   C3 D4 07               JP   enter   
071D                             ; utilities
071D                             ; low-level machine code routines
071D   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
0743                TXT_STACK_UNDERFLOW:      
0743   18 45 72 72 6F 72 3A 20 53 74 61 63 6B 20 75 6E 64 65 72 66 6C 6F 77 0D 0A .PSTR   "Error: Stack underflow\r\n"   
075C   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
0767   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
0772   23 45 72 72 6F 72 3A 20 44 65 66 69 6E 69 74 69 6F 6E 73 20 63 61 6E 6E 6F 74 20 62 65 20 6E 65 73 74 65 64 NESTINGERR:   .PSTR   "Error: Definitions cannot be nested"   
0796                INITFORTH:      
0796   DD 21 4F 21            LD   IX,data_stack   ; initialise the param stack.
079A   FD 21 D4 07            LD   IY,enter   
079E   DD 22 5B 22            LD   (var_sp0),IX   
07A2   01 00 00               LD   BC,0   ; tos
07A5   21 00 00               LD   HL,0   
07A8   22 D1 21               LD   (var_framePtr),HL   
07AB   22 55 22               LD   (var_intp_stop),HL   
07AE   22 CF 21               LD   (is_literal),HL   
07B1   22 59 22               LD   (var_nesting),HL   
07B4   22 57 22               LD   (var_state),HL   
07B7   21 0A 00               LD   HL,10   
07BA   22 5D 22               LD   (var_base),HL   
07BD   21 63 22               LD   HL,start_user   
07C0   22 53 22               LD   (var_here),HL   
07C3   21 2A 10               LD   HL,header_latest   
07C6   22 61 22               LD   (var_latest),HL   
07C9   22 5F 22               LD   (var_latest_str),HL   
07CC   3E 96                  LD   A,rts_low   
07CE   D3 80                  OUT   ($80),A   ; initialise acia
07D0   ED 56                  IM   1   
07D2   FB                     EI      
07D3   C9                     RET      
07D4                ENTER:       
07D4   E1                     POP   HL   
07D5                ENTER1:      
07D5   5E                     LD   E,(HL)   
07D6   23                     INC   HL   
07D7   56                     LD   D,(HL)   
07D8   23                     INC   HL   
07D9   E5                     PUSH   HL   
07DA   EB                     EX   DE,HL   
07DB   E9                     JP   (HL)   
07DC                FORTH:       ; for calling forth words from assembly
07DC   21 CD 20               LD   HL,exitAddr   
07DF   E3                     EX   (SP),HL   
07E0   22 CD 20               LD   (exitAddr),HL   
07E3   EB                     EX   DE,HL   
07E4   E9                     JP   (HL)   
07E5                PRINTNUM:      
07E5   E5                     PUSH   HL   
07E6   D5                     PUSH   DE   
07E7   C5                     PUSH   BC   
07E8                          ;*Macro unroll:  loadWord H,L, B,C
07E8   69                     LD   L,C   
07E9   60                     LD   H,B   
07EA   3A 5D 22               LD   A,(VAR_BASE)   
07ED   4F                     LD   C,A   
07EE   11 CF 20               LD   DE,wordBuf   
07F1   CD FE 07               CALL   formatNum   
07F4   CD 04 02               CALL   printStr   
07F7   CD 17 02               CALL   printSpace   
07FA   C1                     POP   BC   
07FB   D1                     POP   DE   
07FC   E1                     POP   HL   
07FD   C9                     RET      
07FE                             ; 
07FE                             ; HL = data, DE = ptr to lineBuf, C = base ***
07FE                             ; DE = ptr to string, BC = length
07FE                             ; 
07FE                FORMATNUM:      
07FE                             ; Detect sign of HL.
07FE   CB 7C                  BIT   7,H   
0800                          ;*Macro unroll:  _if nz
0800   C2 06 08               JP   nz,L_M_1276   
0803   C3 03 08               JP   $   
0806                          ;*Macro unroll:  STRUC_PUSH $
0806                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0806                STRUC_12:   .SET   STRUC_11   
0806                STRUC_11:   .SET   STRUC_10   
0806                STRUC_10:   .SET   STRUC_9   
0806                STRUC_9:   .SET   STRUC_8   
0806                STRUC_8:   .SET   STRUC_7   
0806                STRUC_7:   .SET   STRUC_6   
0806                STRUC_6:   .SET   STRUC_5   
0806                STRUC_5:   .SET   STRUC_4   
0806                STRUC_4:   .SET   STRUC_3   
0806                STRUC_3:   .SET   STRUC_2   
0806                STRUC_2:   .SET   STRUC_TOP   
0806                STRUC_TOP:   .SET   $   
0806                L_M_1276:      
0806                             ; HL is negative. Output "-" to string and negate HL.
0806   3E 2D                  LD   A,"-"   
0808   12                     LD   (DE),A   
0809   13                     INC   DE   
080A   CD 43 08               CALL   negateNum   
080D                          ;*Macro unroll:  _endif
080D                          ;*Macro unroll:  STRUC_FWD
080D                CUR_ADR:   .SET   $   
0804                          .ORG   STRUC_TOP - 2   
0804   0D 08                  DW   CUR_ADR   
080D                          .ORG   CUR_ADR   
080D                          ;*Macro unroll:  STRUC_POP
080D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
080D                STRUC_TOP:   .SET   STRUC_2   
080D                STRUC_2:   .SET   STRUC_3   
080D                STRUC_3:   .SET   STRUC_4   
080D                STRUC_4:   .SET   STRUC_5   
080D                STRUC_5:   .SET   STRUC_6   
080D                STRUC_6:   .SET   STRUC_7   
080D                STRUC_7:   .SET   STRUC_8   
080D                STRUC_8:   .SET   STRUC_9   
080D                STRUC_9:   .SET   STRUC_10   
080D                STRUC_10:   .SET   STRUC_11   
080D                STRUC_11:   .SET   STRUC_12   
080D                STRUC_12:   .SET   0   
080D   06 00                  LD   B,0   ; B will count character length of number
080F                          ;*Macro unroll:  _do
080F   18 03                  JR   L_M_1284   
0811   C3 11 08               JP   $   
0814                          ;*Macro unroll:  DLOOP_PUSH $
0814                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0814                DLOOP_12:   .SET   DLOOP_11   
0814                DLOOP_11:   .SET   DLOOP_10   
0814                DLOOP_10:   .SET   DLOOP_9   
0814                DLOOP_9:   .SET   DLOOP_8   
0814                DLOOP_8:   .SET   DLOOP_7   
0814                DLOOP_7:   .SET   DLOOP_6   
0814                DLOOP_6:   .SET   DLOOP_5   
0814                DLOOP_5:   .SET   DLOOP_4   
0814                DLOOP_4:   .SET   DLOOP_3   
0814                DLOOP_3:   .SET   DLOOP_2   
0814                DLOOP_2:   .SET   DLOOP_TOP   
0814                DLOOP_TOP:   .SET   $   
0814                L_M_1284:      
0814   C5                     PUSH   BC   
0815   CD 4B 08               CALL   divideWordByByte   ; HL = HL / A, A = remainder
0818   C1                     POP   BC   
0819   F5                     PUSH   AF   
081A   04                     INC   B   
081B                          ;*Macro unroll:  checkZeroWord H,L
081B   7D                     LD   A,L   
081C   B4                     OR   H   
081D                          ;*Macro unroll:  _until z
081D   CA 11 08               JP   z,DLOOP_TOP - 3   
0820                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0820                CUR_ADR:   .SET   $   ; needed?
0812                          .ORG   DLOOP_TOP - 2   
0812   20 08                  DW   CUR_ADR   
0820                          .ORG   CUR_ADR   
0820                          ;*Macro unroll:  _enddo
0820   C3 14 08               JP   DLOOP_TOP   
0823                          ;*Macro unroll:  DLOOP_FWD
0823                CUR_ADR:   .SET   $   
0812                          .ORG   DLOOP_TOP - 2   
0812   23 08                  DW   CUR_ADR   
0823                          .ORG   CUR_ADR   
0823                          ;*Macro unroll:  DLOOP_POP
0823                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0823                DLOOP_TOP:   .SET   DLOOP_2   
0823                DLOOP_2:   .SET   DLOOP_3   
0823                DLOOP_3:   .SET   DLOOP_4   
0823                DLOOP_4:   .SET   DLOOP_5   
0823                DLOOP_5:   .SET   DLOOP_6   
0823                DLOOP_6:   .SET   DLOOP_7   
0823                DLOOP_7:   .SET   DLOOP_8   
0823                DLOOP_8:   .SET   DLOOP_9   
0823                DLOOP_9:   .SET   DLOOP_10   
0823                DLOOP_10:   .SET   DLOOP_11   
0823                DLOOP_11:   .SET   DLOOP_12   
0823                DLOOP_12:   .SET   0   
0823                          ;*Macro unroll:  _do
0823   18 03                  JR   L_M_1293   
0825   C3 25 08               JP   $   
0828                          ;*Macro unroll:  DLOOP_PUSH $
0828                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0828                DLOOP_12:   .SET   DLOOP_11   
0828                DLOOP_11:   .SET   DLOOP_10   
0828                DLOOP_10:   .SET   DLOOP_9   
0828                DLOOP_9:   .SET   DLOOP_8   
0828                DLOOP_8:   .SET   DLOOP_7   
0828                DLOOP_7:   .SET   DLOOP_6   
0828                DLOOP_6:   .SET   DLOOP_5   
0828                DLOOP_5:   .SET   DLOOP_4   
0828                DLOOP_4:   .SET   DLOOP_3   
0828                DLOOP_3:   .SET   DLOOP_2   
0828                DLOOP_2:   .SET   DLOOP_TOP   
0828                DLOOP_TOP:   .SET   $   
0828                L_M_1293:      
0828   F1                     POP   AF   
0829   C6 30                  ADD   A,$30   ; convert digit to ASCII
082B   FE 3A                  CP   $3A   
082D                          ;*Macro unroll:  _if nc
082D   D2 33 08               JP   nc,L_M_1297   
0830   C3 30 08               JP   $   
0833                          ;*Macro unroll:  STRUC_PUSH $
0833                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0833                STRUC_12:   .SET   STRUC_11   
0833                STRUC_11:   .SET   STRUC_10   
0833                STRUC_10:   .SET   STRUC_9   
0833                STRUC_9:   .SET   STRUC_8   
0833                STRUC_8:   .SET   STRUC_7   
0833                STRUC_7:   .SET   STRUC_6   
0833                STRUC_6:   .SET   STRUC_5   
0833                STRUC_5:   .SET   STRUC_4   
0833                STRUC_4:   .SET   STRUC_3   
0833                STRUC_3:   .SET   STRUC_2   
0833                STRUC_2:   .SET   STRUC_TOP   
0833                STRUC_TOP:   .SET   $   
0833                L_M_1297:      
0833   C6 07                  ADD   A,7   
0835                          ;*Macro unroll:  _endif
0835                          ;*Macro unroll:  STRUC_FWD
0835                CUR_ADR:   .SET   $   
0831                          .ORG   STRUC_TOP - 2   
0831   35 08                  DW   CUR_ADR   
0835                          .ORG   CUR_ADR   
0835                          ;*Macro unroll:  STRUC_POP
0835                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0835                STRUC_TOP:   .SET   STRUC_2   
0835                STRUC_2:   .SET   STRUC_3   
0835                STRUC_3:   .SET   STRUC_4   
0835                STRUC_4:   .SET   STRUC_5   
0835                STRUC_5:   .SET   STRUC_6   
0835                STRUC_6:   .SET   STRUC_7   
0835                STRUC_7:   .SET   STRUC_8   
0835                STRUC_8:   .SET   STRUC_9   
0835                STRUC_9:   .SET   STRUC_10   
0835                STRUC_10:   .SET   STRUC_11   
0835                STRUC_11:   .SET   STRUC_12   
0835                STRUC_12:   .SET   0   
0835   12                     LD   (DE),A   
0836   13                     INC   DE   
0837                          ;*Macro unroll:  _djnz
0837   10 EF                  DJNZ   DLOOP_TOP   
0839                          ;*Macro unroll:  DLOOP_FWD
0839                CUR_ADR:   .SET   $   
0826                          .ORG   DLOOP_TOP - 2   
0826   39 08                  DW   CUR_ADR   
0839                          .ORG   CUR_ADR   
0839                          ;*Macro unroll:  DLOOP_POP
0839                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0839                DLOOP_TOP:   .SET   DLOOP_2   
0839                DLOOP_2:   .SET   DLOOP_3   
0839                DLOOP_3:   .SET   DLOOP_4   
0839                DLOOP_4:   .SET   DLOOP_5   
0839                DLOOP_5:   .SET   DLOOP_6   
0839                DLOOP_6:   .SET   DLOOP_7   
0839                DLOOP_7:   .SET   DLOOP_8   
0839                DLOOP_8:   .SET   DLOOP_9   
0839                DLOOP_9:   .SET   DLOOP_10   
0839                DLOOP_10:   .SET   DLOOP_11   
0839                DLOOP_11:   .SET   DLOOP_12   
0839                DLOOP_12:   .SET   0   
0839   21 CF 20               LD   HL,wordBuf   ;calc length
083C   EB                     EX   DE,HL   
083D   B7                     OR   A   
083E   ED 52                  SBC   HL,DE   
0840                          ;*Macro unroll:  loadWord B,C, H,L
0840   4D                     LD   C,L   
0841   44                     LD   B,H   
0842   C9                     RET      
0843                             ; 
0843                             ; negate ***
0843                             ; params: HL = number
0843                             ; 
0843                NEGATENUM:      
0843                             ; Negate HL (using two's complement)
0843   AF                     XOR   A   
0844   95                     SUB   L   
0845   6F                     LD   L,A   
0846   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
0848   9C                     SBC   A,H   
0849   67                     LD   H,A   
084A   C9                     RET      
084B                             ; 
084B                             ; divide word by byte ***
084B                             ; params: HL = dividend, C = divisor
084B                             ; returns: HL = result, A = remainder
084B                             ; destroys: ?
084B                             ; 
084B                DIVIDEWORDBYBYTE:      
084B   06 10                  LD   B,16   
084D   AF                     XOR   A   
084E                          ;*Macro unroll:  _do
084E   18 03                  JR   L_M_1331   
0850   C3 50 08               JP   $   
0853                          ;*Macro unroll:  DLOOP_PUSH $
0853                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0853                DLOOP_12:   .SET   DLOOP_11   
0853                DLOOP_11:   .SET   DLOOP_10   
0853                DLOOP_10:   .SET   DLOOP_9   
0853                DLOOP_9:   .SET   DLOOP_8   
0853                DLOOP_8:   .SET   DLOOP_7   
0853                DLOOP_7:   .SET   DLOOP_6   
0853                DLOOP_6:   .SET   DLOOP_5   
0853                DLOOP_5:   .SET   DLOOP_4   
0853                DLOOP_4:   .SET   DLOOP_3   
0853                DLOOP_3:   .SET   DLOOP_2   
0853                DLOOP_2:   .SET   DLOOP_TOP   
0853                DLOOP_TOP:   .SET   $   
0853                L_M_1331:      
0853   29                     ADD   HL,HL   
0854   17                     RLA      
0855                          ;*Macro unroll:  _if c
0855   DA 5B 08               JP   c,L_M_1334   
0858   C3 58 08               JP   $   
085B                          ;*Macro unroll:  STRUC_PUSH $
085B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
085B                STRUC_12:   .SET   STRUC_11   
085B                STRUC_11:   .SET   STRUC_10   
085B                STRUC_10:   .SET   STRUC_9   
085B                STRUC_9:   .SET   STRUC_8   
085B                STRUC_8:   .SET   STRUC_7   
085B                STRUC_7:   .SET   STRUC_6   
085B                STRUC_6:   .SET   STRUC_5   
085B                STRUC_5:   .SET   STRUC_4   
085B                STRUC_4:   .SET   STRUC_3   
085B                STRUC_3:   .SET   STRUC_2   
085B                STRUC_2:   .SET   STRUC_TOP   
085B                STRUC_TOP:   .SET   $   
085B                L_M_1334:      
085B   91                     SUB   C   
085C   2C                     INC   L   
085D                          ;*Macro unroll:  _else
085D   C3 5D 08               JP   $   
0860                          ;*Macro unroll:  STRUC_FWD
0860                CUR_ADR:   .SET   $   
0859                          .ORG   STRUC_TOP - 2   
0859   60 08                  DW   CUR_ADR   
0860                          .ORG   CUR_ADR   
0860                STRUC_TOP:   .SET   $   
0860   B9                     CP   C   
0861                          ;*Macro unroll:  _if nc
0861   D2 67 08               JP   nc,L_M_1339   
0864   C3 64 08               JP   $   
0867                          ;*Macro unroll:  STRUC_PUSH $
0867                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0867                STRUC_12:   .SET   STRUC_11   
0867                STRUC_11:   .SET   STRUC_10   
0867                STRUC_10:   .SET   STRUC_9   
0867                STRUC_9:   .SET   STRUC_8   
0867                STRUC_8:   .SET   STRUC_7   
0867                STRUC_7:   .SET   STRUC_6   
0867                STRUC_6:   .SET   STRUC_5   
0867                STRUC_5:   .SET   STRUC_4   
0867                STRUC_4:   .SET   STRUC_3   
0867                STRUC_3:   .SET   STRUC_2   
0867                STRUC_2:   .SET   STRUC_TOP   
0867                STRUC_TOP:   .SET   $   
0867                L_M_1339:      
0867   91                     SUB   C   
0868   2C                     INC   L   
0869                          ;*Macro unroll:  _endif
0869                          ;*Macro unroll:  STRUC_FWD
0869                CUR_ADR:   .SET   $   
0865                          .ORG   STRUC_TOP - 2   
0865   69 08                  DW   CUR_ADR   
0869                          .ORG   CUR_ADR   
0869                          ;*Macro unroll:  STRUC_POP
0869                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0869                STRUC_TOP:   .SET   STRUC_2   
0869                STRUC_2:   .SET   STRUC_3   
0869                STRUC_3:   .SET   STRUC_4   
0869                STRUC_4:   .SET   STRUC_5   
0869                STRUC_5:   .SET   STRUC_6   
0869                STRUC_6:   .SET   STRUC_7   
0869                STRUC_7:   .SET   STRUC_8   
0869                STRUC_8:   .SET   STRUC_9   
0869                STRUC_9:   .SET   STRUC_10   
0869                STRUC_10:   .SET   STRUC_11   
0869                STRUC_11:   .SET   STRUC_12   
0869                STRUC_12:   .SET   0   
0869                          ;*Macro unroll:  _endif
0869                          ;*Macro unroll:  STRUC_FWD
0869                CUR_ADR:   .SET   $   
085E                          .ORG   STRUC_TOP - 2   
085E   69 08                  DW   CUR_ADR   
0869                          .ORG   CUR_ADR   
0869                          ;*Macro unroll:  STRUC_POP
0869                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0869                STRUC_TOP:   .SET   STRUC_2   
0869                STRUC_2:   .SET   STRUC_3   
0869                STRUC_3:   .SET   STRUC_4   
0869                STRUC_4:   .SET   STRUC_5   
0869                STRUC_5:   .SET   STRUC_6   
0869                STRUC_6:   .SET   STRUC_7   
0869                STRUC_7:   .SET   STRUC_8   
0869                STRUC_8:   .SET   STRUC_9   
0869                STRUC_9:   .SET   STRUC_10   
0869                STRUC_10:   .SET   STRUC_11   
0869                STRUC_11:   .SET   STRUC_12   
0869                STRUC_12:   .SET   0   
0869                          ;*Macro unroll:  _djnz
0869   10 E8                  DJNZ   DLOOP_TOP   
086B                          ;*Macro unroll:  DLOOP_FWD
086B                CUR_ADR:   .SET   $   
0851                          .ORG   DLOOP_TOP - 2   
0851   6B 08                  DW   CUR_ADR   
086B                          .ORG   CUR_ADR   
086B                          ;*Macro unroll:  DLOOP_POP
086B                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
086B                DLOOP_TOP:   .SET   DLOOP_2   
086B                DLOOP_2:   .SET   DLOOP_3   
086B                DLOOP_3:   .SET   DLOOP_4   
086B                DLOOP_4:   .SET   DLOOP_5   
086B                DLOOP_5:   .SET   DLOOP_6   
086B                DLOOP_6:   .SET   DLOOP_7   
086B                DLOOP_7:   .SET   DLOOP_8   
086B                DLOOP_8:   .SET   DLOOP_9   
086B                DLOOP_9:   .SET   DLOOP_10   
086B                DLOOP_10:   .SET   DLOOP_11   
086B                DLOOP_11:   .SET   DLOOP_12   
086B                DLOOP_12:   .SET   0   
086B   C9                     RET      
086C                             ; 
086C                             ; Divide word by word ***
086C                             ; params: BC = dividend, DE = divisor
086C                             ; returns: BC = result, HL = remainder
086C                             ; destroys: ?
086C                             ; 
086C                DIVIDEWORDBYWORD:      
086C   D5                     PUSH   DE   
086D   21 00 00               LD   HL,0   
0870   78                     LD   A,B   
0871   06 08                  LD   B,8   
0873                          ;*Macro unroll:  _do
0873   18 03                  JR   L_M_1357   
0875   C3 75 08               JP   $   
0878                          ;*Macro unroll:  DLOOP_PUSH $
0878                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0878                DLOOP_12:   .SET   DLOOP_11   
0878                DLOOP_11:   .SET   DLOOP_10   
0878                DLOOP_10:   .SET   DLOOP_9   
0878                DLOOP_9:   .SET   DLOOP_8   
0878                DLOOP_8:   .SET   DLOOP_7   
0878                DLOOP_7:   .SET   DLOOP_6   
0878                DLOOP_6:   .SET   DLOOP_5   
0878                DLOOP_5:   .SET   DLOOP_4   
0878                DLOOP_4:   .SET   DLOOP_3   
0878                DLOOP_3:   .SET   DLOOP_2   
0878                DLOOP_2:   .SET   DLOOP_TOP   
0878                DLOOP_TOP:   .SET   $   
0878                L_M_1357:      
0878   17                     RLA      
0879   ED 6A                  ADC   HL,HL   
087B   ED 52                  SBC   HL,DE   
087D                          ;*Macro unroll:  _if c
087D   DA 83 08               JP   c,L_M_1361   
0880   C3 80 08               JP   $   
0883                          ;*Macro unroll:  STRUC_PUSH $
0883                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0883                STRUC_12:   .SET   STRUC_11   
0883                STRUC_11:   .SET   STRUC_10   
0883                STRUC_10:   .SET   STRUC_9   
0883                STRUC_9:   .SET   STRUC_8   
0883                STRUC_8:   .SET   STRUC_7   
0883                STRUC_7:   .SET   STRUC_6   
0883                STRUC_6:   .SET   STRUC_5   
0883                STRUC_5:   .SET   STRUC_4   
0883                STRUC_4:   .SET   STRUC_3   
0883                STRUC_3:   .SET   STRUC_2   
0883                STRUC_2:   .SET   STRUC_TOP   
0883                STRUC_TOP:   .SET   $   
0883                L_M_1361:      
0883   19                     ADD   HL,DE   
0884                          ;*Macro unroll:  _endif
0884                          ;*Macro unroll:  STRUC_FWD
0884                CUR_ADR:   .SET   $   
0881                          .ORG   STRUC_TOP - 2   
0881   84 08                  DW   CUR_ADR   
0884                          .ORG   CUR_ADR   
0884                          ;*Macro unroll:  STRUC_POP
0884                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0884                STRUC_TOP:   .SET   STRUC_2   
0884                STRUC_2:   .SET   STRUC_3   
0884                STRUC_3:   .SET   STRUC_4   
0884                STRUC_4:   .SET   STRUC_5   
0884                STRUC_5:   .SET   STRUC_6   
0884                STRUC_6:   .SET   STRUC_7   
0884                STRUC_7:   .SET   STRUC_8   
0884                STRUC_8:   .SET   STRUC_9   
0884                STRUC_9:   .SET   STRUC_10   
0884                STRUC_10:   .SET   STRUC_11   
0884                STRUC_11:   .SET   STRUC_12   
0884                STRUC_12:   .SET   0   
0884                          ;*Macro unroll:  _djnz
0884   10 F2                  DJNZ   DLOOP_TOP   
0886                          ;*Macro unroll:  DLOOP_FWD
0886                CUR_ADR:   .SET   $   
0876                          .ORG   DLOOP_TOP - 2   
0876   86 08                  DW   CUR_ADR   
0886                          .ORG   CUR_ADR   
0886                          ;*Macro unroll:  DLOOP_POP
0886                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0886                DLOOP_TOP:   .SET   DLOOP_2   
0886                DLOOP_2:   .SET   DLOOP_3   
0886                DLOOP_3:   .SET   DLOOP_4   
0886                DLOOP_4:   .SET   DLOOP_5   
0886                DLOOP_5:   .SET   DLOOP_6   
0886                DLOOP_6:   .SET   DLOOP_7   
0886                DLOOP_7:   .SET   DLOOP_8   
0886                DLOOP_8:   .SET   DLOOP_9   
0886                DLOOP_9:   .SET   DLOOP_10   
0886                DLOOP_10:   .SET   DLOOP_11   
0886                DLOOP_11:   .SET   DLOOP_12   
0886                DLOOP_12:   .SET   0   
0886   17                     RLA      
0887   2F                     CPL      
0888   47                     LD   B,A   
0889   79                     LD   A,C   
088A   48                     LD   C,B   
088B   06 08                  LD   B,8   
088D                          ;*Macro unroll:  _do
088D   18 03                  JR   L_M_1371   
088F   C3 8F 08               JP   $   
0892                          ;*Macro unroll:  DLOOP_PUSH $
0892                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0892                DLOOP_12:   .SET   DLOOP_11   
0892                DLOOP_11:   .SET   DLOOP_10   
0892                DLOOP_10:   .SET   DLOOP_9   
0892                DLOOP_9:   .SET   DLOOP_8   
0892                DLOOP_8:   .SET   DLOOP_7   
0892                DLOOP_7:   .SET   DLOOP_6   
0892                DLOOP_6:   .SET   DLOOP_5   
0892                DLOOP_5:   .SET   DLOOP_4   
0892                DLOOP_4:   .SET   DLOOP_3   
0892                DLOOP_3:   .SET   DLOOP_2   
0892                DLOOP_2:   .SET   DLOOP_TOP   
0892                DLOOP_TOP:   .SET   $   
0892                L_M_1371:      
0892   17                     RLA      
0893   ED 6A                  ADC   HL,HL   
0895   ED 52                  SBC   HL,DE   
0897                          ;*Macro unroll:  _if c
0897   DA 9D 08               JP   c,L_M_1375   
089A   C3 9A 08               JP   $   
089D                          ;*Macro unroll:  STRUC_PUSH $
089D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
089D                STRUC_12:   .SET   STRUC_11   
089D                STRUC_11:   .SET   STRUC_10   
089D                STRUC_10:   .SET   STRUC_9   
089D                STRUC_9:   .SET   STRUC_8   
089D                STRUC_8:   .SET   STRUC_7   
089D                STRUC_7:   .SET   STRUC_6   
089D                STRUC_6:   .SET   STRUC_5   
089D                STRUC_5:   .SET   STRUC_4   
089D                STRUC_4:   .SET   STRUC_3   
089D                STRUC_3:   .SET   STRUC_2   
089D                STRUC_2:   .SET   STRUC_TOP   
089D                STRUC_TOP:   .SET   $   
089D                L_M_1375:      
089D   19                     ADD   HL,DE   
089E                          ;*Macro unroll:  _endif
089E                          ;*Macro unroll:  STRUC_FWD
089E                CUR_ADR:   .SET   $   
089B                          .ORG   STRUC_TOP - 2   
089B   9E 08                  DW   CUR_ADR   
089E                          .ORG   CUR_ADR   
089E                          ;*Macro unroll:  STRUC_POP
089E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
089E                STRUC_TOP:   .SET   STRUC_2   
089E                STRUC_2:   .SET   STRUC_3   
089E                STRUC_3:   .SET   STRUC_4   
089E                STRUC_4:   .SET   STRUC_5   
089E                STRUC_5:   .SET   STRUC_6   
089E                STRUC_6:   .SET   STRUC_7   
089E                STRUC_7:   .SET   STRUC_8   
089E                STRUC_8:   .SET   STRUC_9   
089E                STRUC_9:   .SET   STRUC_10   
089E                STRUC_10:   .SET   STRUC_11   
089E                STRUC_11:   .SET   STRUC_12   
089E                STRUC_12:   .SET   0   
089E                          ;*Macro unroll:  _djnz
089E   10 F2                  DJNZ   DLOOP_TOP   
08A0                          ;*Macro unroll:  DLOOP_FWD
08A0                CUR_ADR:   .SET   $   
0890                          .ORG   DLOOP_TOP - 2   
0890   A0 08                  DW   CUR_ADR   
08A0                          .ORG   CUR_ADR   
08A0                          ;*Macro unroll:  DLOOP_POP
08A0                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
08A0                DLOOP_TOP:   .SET   DLOOP_2   
08A0                DLOOP_2:   .SET   DLOOP_3   
08A0                DLOOP_3:   .SET   DLOOP_4   
08A0                DLOOP_4:   .SET   DLOOP_5   
08A0                DLOOP_5:   .SET   DLOOP_6   
08A0                DLOOP_6:   .SET   DLOOP_7   
08A0                DLOOP_7:   .SET   DLOOP_8   
08A0                DLOOP_8:   .SET   DLOOP_9   
08A0                DLOOP_9:   .SET   DLOOP_10   
08A0                DLOOP_10:   .SET   DLOOP_11   
08A0                DLOOP_11:   .SET   DLOOP_12   
08A0                DLOOP_12:   .SET   0   
08A0   17                     RLA      
08A1   2F                     CPL      
08A2   41                     LD   B,C   
08A3   4F                     LD   C,A   
08A4   D1                     POP   DE   
08A5   C9                     RET      
08A6                             ; 
08A6                             ; toNumber -  converts string to number in the ***
08A6                             ; base strored in VAR_BASE
08A6                             ; 
08A6                             ; params: HL = string address, BC = string length
08A6                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
08A6                             ; destroys: AF
08A6                             ; 
08A6                TONUMBER:      
08A6   FD E5                  PUSH   IY   ; save regs
08A8   E5                     PUSH   HL   
08A9   E5                     PUSH   HL   ; IY = HL
08AA   FD E1                  POP   IY   
08AC   11 00 00               LD   DE,0   ; 16 bit accum
08AF   21 00 00               LD   HL,0   ; 8 bit char
08B2                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
08B2   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
08B3   B0                     OR   B   
08B4                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
08B4   CA BA 08               JP   z,L_M_1401   ; trying to parse a zero-length string is an error, But will return 0.
08B7   C3 B7 08               JP   $   
08BA                          ;*Macro unroll:  STRUC_PUSH $
08BA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
08BA                STRUC_12:   .SET   STRUC_11   
08BA                STRUC_11:   .SET   STRUC_10   
08BA                STRUC_10:   .SET   STRUC_9   
08BA                STRUC_9:   .SET   STRUC_8   
08BA                STRUC_8:   .SET   STRUC_7   
08BA                STRUC_7:   .SET   STRUC_6   
08BA                STRUC_6:   .SET   STRUC_5   
08BA                STRUC_5:   .SET   STRUC_4   
08BA                STRUC_4:   .SET   STRUC_3   
08BA                STRUC_3:   .SET   STRUC_2   
08BA                STRUC_2:   .SET   STRUC_TOP   
08BA                STRUC_TOP:   .SET   $   
08BA                L_M_1401:      
08BA   E1                     POP   HL   
08BB   FD E1                  POP   IY   
08BD   C9                     RET      ; de = number, BC = err
08BE                          ;*Macro unroll:  _endif
08BE                          ;*Macro unroll:  STRUC_FWD
08BE                CUR_ADR:   .SET   $   
08B8                          .ORG   STRUC_TOP - 2   
08B8   BE 08                  DW   CUR_ADR   
08BE                          .ORG   CUR_ADR   
08BE                          ;*Macro unroll:  STRUC_POP
08BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
08BE                STRUC_TOP:   .SET   STRUC_2   
08BE                STRUC_2:   .SET   STRUC_3   
08BE                STRUC_3:   .SET   STRUC_4   
08BE                STRUC_4:   .SET   STRUC_5   
08BE                STRUC_5:   .SET   STRUC_6   
08BE                STRUC_6:   .SET   STRUC_7   
08BE                STRUC_7:   .SET   STRUC_8   
08BE                STRUC_8:   .SET   STRUC_9   
08BE                STRUC_9:   .SET   STRUC_10   
08BE                STRUC_10:   .SET   STRUC_11   
08BE                STRUC_11:   .SET   STRUC_12   
08BE                STRUC_12:   .SET   0   
08BE                             ; Check if first character is "-".
08BE   FD 7E 00               LD   A,(IY)   ; l = first character in string
08C1   FD 23                  INC   IY   
08C3   D5                     PUSH   DE   ; push 0 on stack
08C4   FE 2D                  CP   "-"   ; negative number?
08C6                          ;*Macro unroll:  _if z
08C6   CA CC 08               JP   z,L_M_1411   
08C9   C3 C9 08               JP   $   
08CC                          ;*Macro unroll:  STRUC_PUSH $
08CC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
08CC                STRUC_12:   .SET   STRUC_11   
08CC                STRUC_11:   .SET   STRUC_10   
08CC                STRUC_10:   .SET   STRUC_9   
08CC                STRUC_9:   .SET   STRUC_8   
08CC                STRUC_8:   .SET   STRUC_7   
08CC                STRUC_7:   .SET   STRUC_6   
08CC                STRUC_6:   .SET   STRUC_5   
08CC                STRUC_5:   .SET   STRUC_4   
08CC                STRUC_4:   .SET   STRUC_3   
08CC                STRUC_3:   .SET   STRUC_2   
08CC                STRUC_2:   .SET   STRUC_TOP   
08CC                STRUC_TOP:   .SET   $   
08CC                L_M_1411:      
08CC   D1                     POP   DE   
08CD   21 01 00               LD   HL,1   
08D0   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
08D1   0B                     DEC   BC   
08D2                          ;*Macro unroll:  checkZeroWord B,C
08D2   79                     LD   A,C   
08D3   B0                     OR   B   
08D4                          ;*Macro unroll:  _if z
08D4   CA DA 08               JP   z,L_M_1417   
08D7   C3 D7 08               JP   $   
08DA                          ;*Macro unroll:  STRUC_PUSH $
08DA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
08DA                STRUC_12:   .SET   STRUC_11   
08DA                STRUC_11:   .SET   STRUC_10   
08DA                STRUC_10:   .SET   STRUC_9   
08DA                STRUC_9:   .SET   STRUC_8   
08DA                STRUC_8:   .SET   STRUC_7   
08DA                STRUC_7:   .SET   STRUC_6   
08DA                STRUC_6:   .SET   STRUC_5   
08DA                STRUC_5:   .SET   STRUC_4   
08DA                STRUC_4:   .SET   STRUC_3   
08DA                STRUC_3:   .SET   STRUC_2   
08DA                STRUC_2:   .SET   STRUC_TOP   
08DA                STRUC_TOP:   .SET   $   
08DA                L_M_1417:      
08DA   E1                     POP   HL   ; error: string is only "-".
08DB   01 01 00               LD   BC,1   
08DE   E1                     POP   HL   
08DF   FD E1                  POP   IY   
08E1   C9                     RET      ; de = number, BC = err
08E2                          ;*Macro unroll:  _endif
08E2                          ;*Macro unroll:  STRUC_FWD
08E2                CUR_ADR:   .SET   $   
08D8                          .ORG   STRUC_TOP - 2   
08D8   E2 08                  DW   CUR_ADR   
08E2                          .ORG   CUR_ADR   
08E2                          ;*Macro unroll:  STRUC_POP
08E2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
08E2                STRUC_TOP:   .SET   STRUC_2   
08E2                STRUC_2:   .SET   STRUC_3   
08E2                STRUC_3:   .SET   STRUC_4   
08E2                STRUC_4:   .SET   STRUC_5   
08E2                STRUC_5:   .SET   STRUC_6   
08E2                STRUC_6:   .SET   STRUC_7   
08E2                STRUC_7:   .SET   STRUC_8   
08E2                STRUC_8:   .SET   STRUC_9   
08E2                STRUC_9:   .SET   STRUC_10   
08E2                STRUC_10:   .SET   STRUC_11   
08E2                STRUC_11:   .SET   STRUC_12   
08E2                STRUC_12:   .SET   0   
08E2                             ; Loop reading digits.
08E2   C5                     PUSH   BC   
08E3   ED 4B 5D 22            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
08E7   CD 3E 09               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
08EA   C1                     POP   BC   
08EB   FD 7E 00               LD   A,(IY)   ; a = next character in string
08EE   FD 23                  INC   IY   
08F0                          ;*Macro unroll:  _endif
08F0                          ;*Macro unroll:  STRUC_FWD
08F0                CUR_ADR:   .SET   $   
08CA                          .ORG   STRUC_TOP - 2   
08CA   F0 08                  DW   CUR_ADR   
08F0                          .ORG   CUR_ADR   
08F0                          ;*Macro unroll:  STRUC_POP
08F0                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
08F0                STRUC_TOP:   .SET   STRUC_2   
08F0                STRUC_2:   .SET   STRUC_3   
08F0                STRUC_3:   .SET   STRUC_4   
08F0                STRUC_4:   .SET   STRUC_5   
08F0                STRUC_5:   .SET   STRUC_6   
08F0                STRUC_6:   .SET   STRUC_7   
08F0                STRUC_7:   .SET   STRUC_8   
08F0                STRUC_8:   .SET   STRUC_9   
08F0                STRUC_9:   .SET   STRUC_10   
08F0                STRUC_10:   .SET   STRUC_11   
08F0                STRUC_11:   .SET   STRUC_12   
08F0                STRUC_12:   .SET   0   
08F0                             ; Convert 0-9, A-z to a number 0-35.
08F0                          ;*Macro unroll:  _do
08F0   18 03                  JR   L_M_1433   
08F2   C3 F2 08               JP   $   
08F5                          ;*Macro unroll:  DLOOP_PUSH $
08F5                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
08F5                DLOOP_12:   .SET   DLOOP_11   
08F5                DLOOP_11:   .SET   DLOOP_10   
08F5                DLOOP_10:   .SET   DLOOP_9   
08F5                DLOOP_9:   .SET   DLOOP_8   
08F5                DLOOP_8:   .SET   DLOOP_7   
08F5                DLOOP_7:   .SET   DLOOP_6   
08F5                DLOOP_6:   .SET   DLOOP_5   
08F5                DLOOP_5:   .SET   DLOOP_4   
08F5                DLOOP_4:   .SET   DLOOP_3   
08F5                DLOOP_3:   .SET   DLOOP_2   
08F5                DLOOP_2:   .SET   DLOOP_TOP   
08F5                DLOOP_TOP:   .SET   $   
08F5                L_M_1433:      
08F5   D6 30                  SUB   "0"   ; < "0"?
08F7   38 33                  JR   c,toNumberExit   ; invalid char, end of number
08F9   FE 0A                  CP   10   ; <= "9"?
08FB                          ;*Macro unroll:  _if nc
08FB   D2 01 09               JP   nc,L_M_1437   
08FE   C3 FE 08               JP   $   
0901                          ;*Macro unroll:  STRUC_PUSH $
0901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0901                STRUC_12:   .SET   STRUC_11   
0901                STRUC_11:   .SET   STRUC_10   
0901                STRUC_10:   .SET   STRUC_9   
0901                STRUC_9:   .SET   STRUC_8   
0901                STRUC_8:   .SET   STRUC_7   
0901                STRUC_7:   .SET   STRUC_6   
0901                STRUC_6:   .SET   STRUC_5   
0901                STRUC_5:   .SET   STRUC_4   
0901                STRUC_4:   .SET   STRUC_3   
0901                STRUC_3:   .SET   STRUC_2   
0901                STRUC_2:   .SET   STRUC_TOP   
0901                STRUC_TOP:   .SET   $   
0901                L_M_1437:      
0901   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0903                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0903   DA F2 08               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0906                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0906                CUR_ADR:   .SET   $   ; needed?
08F3                          .ORG   DLOOP_TOP - 2   
08F3   06 09                  DW   CUR_ADR   
0906                          .ORG   CUR_ADR   
0906   C6 0A                  ADD   a,10   
0908                          ;*Macro unroll:  _endif
0908                          ;*Macro unroll:  STRUC_FWD
0908                CUR_ADR:   .SET   $   
08FF                          .ORG   STRUC_TOP - 2   
08FF   08 09                  DW   CUR_ADR   
0908                          .ORG   CUR_ADR   
0908                          ;*Macro unroll:  STRUC_POP
0908                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0908                STRUC_TOP:   .SET   STRUC_2   
0908                STRUC_2:   .SET   STRUC_3   
0908                STRUC_3:   .SET   STRUC_4   
0908                STRUC_4:   .SET   STRUC_5   
0908                STRUC_5:   .SET   STRUC_6   
0908                STRUC_6:   .SET   STRUC_7   
0908                STRUC_7:   .SET   STRUC_8   
0908                STRUC_8:   .SET   STRUC_9   
0908                STRUC_9:   .SET   STRUC_10   
0908                STRUC_10:   .SET   STRUC_11   
0908                STRUC_11:   .SET   STRUC_12   
0908                STRUC_12:   .SET   0   
0908   2A 5D 22               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
090B   BD                     CP   L   ; >= BASE? then invalid char, end of number
090C                          ;*Macro unroll:  _until nc
090C   D2 F2 08               JP   nc,DLOOP_TOP - 3   
090F                          ;*Macro unroll:  DLOOP_FWD               ; needed?
090F                CUR_ADR:   .SET   $   ; needed?
08F3                          .ORG   DLOOP_TOP - 2   
08F3   0F 09                  DW   CUR_ADR   
090F                          .ORG   CUR_ADR   
090F   83                     ADD   A,E   
0910   5F                     LD   E,A   
0911   3E 00                  LD   A,0   
0913   8A                     ADC   a,d   
0914   57                     LD   D,A   
0915   0B                     DEC   BC   ; dec char count
0916                          ;*Macro unroll:  checkZeroWord B,C
0916   79                     LD   A,C   
0917   B0                     OR   B   
0918                          ;*Macro unroll:  _until z
0918   CA F2 08               JP   z,DLOOP_TOP - 3   
091B                          ;*Macro unroll:  DLOOP_FWD               ; needed?
091B                CUR_ADR:   .SET   $   ; needed?
08F3                          .ORG   DLOOP_TOP - 2   
08F3   1B 09                  DW   CUR_ADR   
091B                          .ORG   CUR_ADR   
091B   C5                     PUSH   BC   
091C   ED 4B 5D 22            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0920   CD 3E 09               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0923   C1                     POP   BC   
0924   FD 7E 00               LD   A,(IY)   ; a = next character in string
0927   FD 23                  INC   IY   
0929                          ;*Macro unroll:  _enddo
0929   C3 F5 08               JP   DLOOP_TOP   
092C                          ;*Macro unroll:  DLOOP_FWD
092C                CUR_ADR:   .SET   $   
08F3                          .ORG   DLOOP_TOP - 2   
08F3   2C 09                  DW   CUR_ADR   
092C                          .ORG   CUR_ADR   
092C                          ;*Macro unroll:  DLOOP_POP
092C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
092C                DLOOP_TOP:   .SET   DLOOP_2   
092C                DLOOP_2:   .SET   DLOOP_3   
092C                DLOOP_3:   .SET   DLOOP_4   
092C                DLOOP_4:   .SET   DLOOP_5   
092C                DLOOP_5:   .SET   DLOOP_6   
092C                DLOOP_6:   .SET   DLOOP_7   
092C                DLOOP_7:   .SET   DLOOP_8   
092C                DLOOP_8:   .SET   DLOOP_9   
092C                DLOOP_9:   .SET   DLOOP_10   
092C                DLOOP_10:   .SET   DLOOP_11   
092C                DLOOP_11:   .SET   DLOOP_12   
092C                DLOOP_12:   .SET   0   
092C                TONUMBEREXIT:      
092C   E1                     POP   HL   
092D                          ;*Macro unroll:  checkZeroWord H,L
092D   7D                     LD   A,L   
092E   B4                     OR   H   
092F                          ;*Macro unroll:  _if nz              ; if not -ve then skip
092F   C2 35 09               JP   nz,L_M_1463   ; if not -ve then skip
0932   C3 32 09               JP   $   
0935                          ;*Macro unroll:  STRUC_PUSH $
0935                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0935                STRUC_12:   .SET   STRUC_11   
0935                STRUC_11:   .SET   STRUC_10   
0935                STRUC_10:   .SET   STRUC_9   
0935                STRUC_9:   .SET   STRUC_8   
0935                STRUC_8:   .SET   STRUC_7   
0935                STRUC_7:   .SET   STRUC_6   
0935                STRUC_6:   .SET   STRUC_5   
0935                STRUC_5:   .SET   STRUC_4   
0935                STRUC_4:   .SET   STRUC_3   
0935                STRUC_3:   .SET   STRUC_2   
0935                STRUC_2:   .SET   STRUC_TOP   
0935                STRUC_TOP:   .SET   $   
0935                L_M_1463:      
0935   EB                     EX   DE,HL   ; negate de
0936   CD 43 08               CALL   negateNum   
0939   EB                     EX   DE,HL   
093A                          ;*Macro unroll:  _endif
093A                          ;*Macro unroll:  STRUC_FWD
093A                CUR_ADR:   .SET   $   
0933                          .ORG   STRUC_TOP - 2   
0933   3A 09                  DW   CUR_ADR   
093A                          .ORG   CUR_ADR   
093A                          ;*Macro unroll:  STRUC_POP
093A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
093A                STRUC_TOP:   .SET   STRUC_2   
093A                STRUC_2:   .SET   STRUC_3   
093A                STRUC_3:   .SET   STRUC_4   
093A                STRUC_4:   .SET   STRUC_5   
093A                STRUC_5:   .SET   STRUC_6   
093A                STRUC_6:   .SET   STRUC_7   
093A                STRUC_7:   .SET   STRUC_8   
093A                STRUC_8:   .SET   STRUC_9   
093A                STRUC_9:   .SET   STRUC_10   
093A                STRUC_10:   .SET   STRUC_11   
093A                STRUC_11:   .SET   STRUC_12   
093A                STRUC_12:   .SET   0   
093A   E1                     POP   HL   
093B   FD E1                  POP   IY   
093D   C9                     RET      ; de = number, BC = err
093E                             ; 
093E                             ; unsignedMultiply -  unsigned multiply ***
093E                             ; 
093E                             ; params:  u1 in BC, u2 in DE
093E                             ; returns: result in HLDE
093E                             ; destroys: AF
093E                             ; 
093E                UNSIGNEDMULTIPLY:      
093E   21 00 00               LD   HL,0   
0941   3E 11                  LD   A,17   ; loop counter
0943   B7                     OR   A   ; clear carry
0944                          ;*Macro unroll:  _do
0944   18 03                  JR   L_M_1482   
0946   C3 46 09               JP   $   
0949                          ;*Macro unroll:  DLOOP_PUSH $
0949                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0949                DLOOP_12:   .SET   DLOOP_11   
0949                DLOOP_11:   .SET   DLOOP_10   
0949                DLOOP_10:   .SET   DLOOP_9   
0949                DLOOP_9:   .SET   DLOOP_8   
0949                DLOOP_8:   .SET   DLOOP_7   
0949                DLOOP_7:   .SET   DLOOP_6   
0949                DLOOP_6:   .SET   DLOOP_5   
0949                DLOOP_5:   .SET   DLOOP_4   
0949                DLOOP_4:   .SET   DLOOP_3   
0949                DLOOP_3:   .SET   DLOOP_2   
0949                DLOOP_2:   .SET   DLOOP_TOP   
0949                DLOOP_TOP:   .SET   $   
0949                L_M_1482:      
0949   CB 1C                  RR   H   
094B   CB 1D                  RR   L   
094D   CB 1A                  RR   D   
094F   CB 1B                  RR   E   
0951                          ;*Macro unroll:  _if c
0951   DA 57 09               JP   c,L_M_1487   
0954   C3 54 09               JP   $   
0957                          ;*Macro unroll:  STRUC_PUSH $
0957                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0957                STRUC_12:   .SET   STRUC_11   
0957                STRUC_11:   .SET   STRUC_10   
0957                STRUC_10:   .SET   STRUC_9   
0957                STRUC_9:   .SET   STRUC_8   
0957                STRUC_8:   .SET   STRUC_7   
0957                STRUC_7:   .SET   STRUC_6   
0957                STRUC_6:   .SET   STRUC_5   
0957                STRUC_5:   .SET   STRUC_4   
0957                STRUC_4:   .SET   STRUC_3   
0957                STRUC_3:   .SET   STRUC_2   
0957                STRUC_2:   .SET   STRUC_TOP   
0957                STRUC_TOP:   .SET   $   
0957                L_M_1487:      
0957   09                     ADD   HL,BC   
0958                          ;*Macro unroll:  _endif
0958                          ;*Macro unroll:  STRUC_FWD
0958                CUR_ADR:   .SET   $   
0955                          .ORG   STRUC_TOP - 2   
0955   58 09                  DW   CUR_ADR   
0958                          .ORG   CUR_ADR   
0958                          ;*Macro unroll:  STRUC_POP
0958                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0958                STRUC_TOP:   .SET   STRUC_2   
0958                STRUC_2:   .SET   STRUC_3   
0958                STRUC_3:   .SET   STRUC_4   
0958                STRUC_4:   .SET   STRUC_5   
0958                STRUC_5:   .SET   STRUC_6   
0958                STRUC_6:   .SET   STRUC_7   
0958                STRUC_7:   .SET   STRUC_8   
0958                STRUC_8:   .SET   STRUC_9   
0958                STRUC_9:   .SET   STRUC_10   
0958                STRUC_10:   .SET   STRUC_11   
0958                STRUC_11:   .SET   STRUC_12   
0958                STRUC_12:   .SET   0   
0958   3D                     DEC   A   
0959                          ;*Macro unroll:  _until z
0959   CA 46 09               JP   z,DLOOP_TOP - 3   
095C                          ;*Macro unroll:  DLOOP_FWD               ; needed?
095C                CUR_ADR:   .SET   $   ; needed?
0947                          .ORG   DLOOP_TOP - 2   
0947   5C 09                  DW   CUR_ADR   
095C                          .ORG   CUR_ADR   
095C                          ;*Macro unroll:  _enddo
095C   C3 49 09               JP   DLOOP_TOP   
095F                          ;*Macro unroll:  DLOOP_FWD
095F                CUR_ADR:   .SET   $   
0947                          .ORG   DLOOP_TOP - 2   
0947   5F 09                  DW   CUR_ADR   
095F                          .ORG   CUR_ADR   
095F                          ;*Macro unroll:  DLOOP_POP
095F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
095F                DLOOP_TOP:   .SET   DLOOP_2   
095F                DLOOP_2:   .SET   DLOOP_3   
095F                DLOOP_3:   .SET   DLOOP_4   
095F                DLOOP_4:   .SET   DLOOP_5   
095F                DLOOP_5:   .SET   DLOOP_6   
095F                DLOOP_6:   .SET   DLOOP_7   
095F                DLOOP_7:   .SET   DLOOP_8   
095F                DLOOP_8:   .SET   DLOOP_9   
095F                DLOOP_9:   .SET   DLOOP_10   
095F                DLOOP_10:   .SET   DLOOP_11   
095F                DLOOP_11:   .SET   DLOOP_12   
095F                DLOOP_12:   .SET   0   
095F   C9                     RET      
0960                             ; 
0960                             ; compareStr - string equal
0960                             ; params: de = string1, HL = string2, BC = length
0960                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
0960                             ; destroys: de, HL, BC
0960                             ; 
0960                COMPARESTR:      
0960                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
0960   79                     LD   A,C   ; test for Count=0
0961   B0                     OR   B   
0962                          ;*Macro unroll:  _if nz          ; length zero = match
0962   C2 68 09               JP   nz,L_M_1502   ; length zero = match
0965   C3 65 09               JP   $   
0968                          ;*Macro unroll:  STRUC_PUSH $
0968                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0968                STRUC_12:   .SET   STRUC_11   
0968                STRUC_11:   .SET   STRUC_10   
0968                STRUC_10:   .SET   STRUC_9   
0968                STRUC_9:   .SET   STRUC_8   
0968                STRUC_8:   .SET   STRUC_7   
0968                STRUC_7:   .SET   STRUC_6   
0968                STRUC_6:   .SET   STRUC_5   
0968                STRUC_5:   .SET   STRUC_4   
0968                STRUC_4:   .SET   STRUC_3   
0968                STRUC_3:   .SET   STRUC_2   
0968                STRUC_2:   .SET   STRUC_TOP   
0968                STRUC_TOP:   .SET   $   
0968                L_M_1502:      
0968                          ;*Macro unroll:  _do
0968   18 03                  JR   L_M_1503   
096A   C3 6A 09               JP   $   
096D                          ;*Macro unroll:  DLOOP_PUSH $
096D                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
096D                DLOOP_12:   .SET   DLOOP_11   
096D                DLOOP_11:   .SET   DLOOP_10   
096D                DLOOP_10:   .SET   DLOOP_9   
096D                DLOOP_9:   .SET   DLOOP_8   
096D                DLOOP_8:   .SET   DLOOP_7   
096D                DLOOP_7:   .SET   DLOOP_6   
096D                DLOOP_6:   .SET   DLOOP_5   
096D                DLOOP_5:   .SET   DLOOP_4   
096D                DLOOP_4:   .SET   DLOOP_3   
096D                DLOOP_3:   .SET   DLOOP_2   
096D                DLOOP_2:   .SET   DLOOP_TOP   
096D                DLOOP_TOP:   .SET   $   
096D                L_M_1503:      
096D   1A                     LD   A,(DE)   
096E   13                     INC   DE   
096F   ED A1                  CPI      
0971                          ;*Macro unroll:  _if nz          ; char mismatch: exit
0971   C2 77 09               JP   nz,L_M_1507   ; char mismatch: exit
0974   C3 74 09               JP   $   
0977                          ;*Macro unroll:  STRUC_PUSH $
0977                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0977                STRUC_12:   .SET   STRUC_11   
0977                STRUC_11:   .SET   STRUC_10   
0977                STRUC_10:   .SET   STRUC_9   
0977                STRUC_9:   .SET   STRUC_8   
0977                STRUC_8:   .SET   STRUC_7   
0977                STRUC_7:   .SET   STRUC_6   
0977                STRUC_6:   .SET   STRUC_5   
0977                STRUC_5:   .SET   STRUC_4   
0977                STRUC_4:   .SET   STRUC_3   
0977                STRUC_3:   .SET   STRUC_2   
0977                STRUC_2:   .SET   STRUC_TOP   
0977                STRUC_TOP:   .SET   $   
0977                L_M_1507:      
0977   2B                     DEC   HL   ; point at mismatch char
0978   BE                     CP   (HL)   ; set carry if char1 < char2
0979   9F                     SBC   A,A   
097A   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
097C   C9                     RET      
097D                          ;*Macro unroll:  _endif
097D                          ;*Macro unroll:  STRUC_FWD
097D                CUR_ADR:   .SET   $   
0975                          .ORG   STRUC_TOP - 2   
0975   7D 09                  DW   CUR_ADR   
097D                          .ORG   CUR_ADR   
097D                          ;*Macro unroll:  STRUC_POP
097D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
097D                STRUC_TOP:   .SET   STRUC_2   
097D                STRUC_2:   .SET   STRUC_3   
097D                STRUC_3:   .SET   STRUC_4   
097D                STRUC_4:   .SET   STRUC_5   
097D                STRUC_5:   .SET   STRUC_6   
097D                STRUC_6:   .SET   STRUC_7   
097D                STRUC_7:   .SET   STRUC_8   
097D                STRUC_8:   .SET   STRUC_9   
097D                STRUC_9:   .SET   STRUC_10   
097D                STRUC_10:   .SET   STRUC_11   
097D                STRUC_11:   .SET   STRUC_12   
097D                STRUC_12:   .SET   0   
097D                          ;*Macro unroll:  _until po
097D   E2 6A 09               JP   po,DLOOP_TOP - 3   
0980                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0980                CUR_ADR:   .SET   $   ; needed?
096B                          .ORG   DLOOP_TOP - 2   
096B   80 09                  DW   CUR_ADR   
0980                          .ORG   CUR_ADR   
0980                          ;*Macro unroll:  _enddo
0980   C3 6D 09               JP   DLOOP_TOP   
0983                          ;*Macro unroll:  DLOOP_FWD
0983                CUR_ADR:   .SET   $   
096B                          .ORG   DLOOP_TOP - 2   
096B   83 09                  DW   CUR_ADR   
0983                          .ORG   CUR_ADR   
0983                          ;*Macro unroll:  DLOOP_POP
0983                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0983                DLOOP_TOP:   .SET   DLOOP_2   
0983                DLOOP_2:   .SET   DLOOP_3   
0983                DLOOP_3:   .SET   DLOOP_4   
0983                DLOOP_4:   .SET   DLOOP_5   
0983                DLOOP_5:   .SET   DLOOP_6   
0983                DLOOP_6:   .SET   DLOOP_7   
0983                DLOOP_7:   .SET   DLOOP_8   
0983                DLOOP_8:   .SET   DLOOP_9   
0983                DLOOP_9:   .SET   DLOOP_10   
0983                DLOOP_10:   .SET   DLOOP_11   
0983                DLOOP_11:   .SET   DLOOP_12   
0983                DLOOP_12:   .SET   0   
0983                          ;*Macro unroll:  _endif
0983                          ;*Macro unroll:  STRUC_FWD
0983                CUR_ADR:   .SET   $   
0966                          .ORG   STRUC_TOP - 2   
0966   83 09                  DW   CUR_ADR   
0983                          .ORG   CUR_ADR   
0983                          ;*Macro unroll:  STRUC_POP
0983                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0983                STRUC_TOP:   .SET   STRUC_2   
0983                STRUC_2:   .SET   STRUC_3   
0983                STRUC_3:   .SET   STRUC_4   
0983                STRUC_4:   .SET   STRUC_5   
0983                STRUC_5:   .SET   STRUC_6   
0983                STRUC_6:   .SET   STRUC_7   
0983                STRUC_7:   .SET   STRUC_8   
0983                STRUC_8:   .SET   STRUC_9   
0983                STRUC_9:   .SET   STRUC_10   
0983                STRUC_10:   .SET   STRUC_11   
0983                STRUC_11:   .SET   STRUC_12   
0983                STRUC_12:   .SET   0   
0983                             ; count exhausted & no mismatch found
0983   3E 00                  LD   A,0   ; a=0 (s1=s2)
0985   C9                     RET      
0986                             ; 
0986                             ; lookup - lookup header in dictionary ***
0986                             ; 
0986                             ; params: HL = string address, BC = string length
0986                             ; returns: DE = found header ptr or 0
0986                             ; destroys: AF
0986                             ; 
0986                LOOKUP:      
0986   ED 5B 61 22            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
098A                          ;*Macro unroll:  _do
098A   18 03                  JR   L_M_1529   
098C   C3 8C 09               JP   $   
098F                          ;*Macro unroll:  DLOOP_PUSH $
098F                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
098F                DLOOP_12:   .SET   DLOOP_11   
098F                DLOOP_11:   .SET   DLOOP_10   
098F                DLOOP_10:   .SET   DLOOP_9   
098F                DLOOP_9:   .SET   DLOOP_8   
098F                DLOOP_8:   .SET   DLOOP_7   
098F                DLOOP_7:   .SET   DLOOP_6   
098F                DLOOP_6:   .SET   DLOOP_5   
098F                DLOOP_5:   .SET   DLOOP_4   
098F                DLOOP_4:   .SET   DLOOP_3   
098F                DLOOP_3:   .SET   DLOOP_2   
098F                DLOOP_2:   .SET   DLOOP_TOP   
098F                DLOOP_TOP:   .SET   $   
098F                L_M_1529:      
098F                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
098F   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0990   B2                     OR   D   
0991   C8                     RET   z   
0992                             ; Compare the length expected and the length of the word.
0992                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0992                             ; this won't pick the word (the length will appear to be wrong).
0992   D5                     PUSH   DE   ; save ptr to header
0993   13                     INC   DE   ; skip over first field
0994   13                     INC   DE   
0995   1A                     LD   A,(DE)   ; a = flags+length field
0996   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
0998   B9                     CP   C   ; Length is the same?
0999                          ;*Macro unroll:  _if z
0999   CA 9F 09               JP   z,L_M_1541   
099C   C3 9C 09               JP   $   
099F                          ;*Macro unroll:  STRUC_PUSH $
099F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
099F                STRUC_12:   .SET   STRUC_11   
099F                STRUC_11:   .SET   STRUC_10   
099F                STRUC_10:   .SET   STRUC_9   
099F                STRUC_9:   .SET   STRUC_8   
099F                STRUC_8:   .SET   STRUC_7   
099F                STRUC_7:   .SET   STRUC_6   
099F                STRUC_6:   .SET   STRUC_5   
099F                STRUC_5:   .SET   STRUC_4   
099F                STRUC_4:   .SET   STRUC_3   
099F                STRUC_3:   .SET   STRUC_2   
099F                STRUC_2:   .SET   STRUC_TOP   
099F                STRUC_TOP:   .SET   $   
099F                L_M_1541:      
099F                             ; Compare the strings in detail.
099F   13                     INC   DE   ; DE = Dictionary string we are checking against.
09A0   E5                     PUSH   HL   ; save HL, BC
09A1   C5                     PUSH   BC   
09A2   CD 60 09               CALL   compareStr   ; Compare the strings. BC = len
09A5   C1                     POP   BC   
09A6   E1                     POP   HL   
09A7   B7                     OR   A   ; if A == 0 then matched
09A8                          ;*Macro unroll:  _if z
09A8   CA AE 09               JP   z,L_M_1550   
09AB   C3 AB 09               JP   $   
09AE                          ;*Macro unroll:  STRUC_PUSH $
09AE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09AE                STRUC_12:   .SET   STRUC_11   
09AE                STRUC_11:   .SET   STRUC_10   
09AE                STRUC_10:   .SET   STRUC_9   
09AE                STRUC_9:   .SET   STRUC_8   
09AE                STRUC_8:   .SET   STRUC_7   
09AE                STRUC_7:   .SET   STRUC_6   
09AE                STRUC_6:   .SET   STRUC_5   
09AE                STRUC_5:   .SET   STRUC_4   
09AE                STRUC_4:   .SET   STRUC_3   
09AE                STRUC_3:   .SET   STRUC_2   
09AE                STRUC_2:   .SET   STRUC_TOP   
09AE                STRUC_TOP:   .SET   $   
09AE                L_M_1550:      
09AE   D1                     POP   DE   ; matched, restore DE and return
09AF   C9                     RET      
09B0                          ;*Macro unroll:  _endif
09B0                          ;*Macro unroll:  STRUC_FWD
09B0                CUR_ADR:   .SET   $   
09AC                          .ORG   STRUC_TOP - 2   
09AC   B0 09                  DW   CUR_ADR   
09B0                          .ORG   CUR_ADR   
09B0                          ;*Macro unroll:  STRUC_POP
09B0                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09B0                STRUC_TOP:   .SET   STRUC_2   
09B0                STRUC_2:   .SET   STRUC_3   
09B0                STRUC_3:   .SET   STRUC_4   
09B0                STRUC_4:   .SET   STRUC_5   
09B0                STRUC_5:   .SET   STRUC_6   
09B0                STRUC_6:   .SET   STRUC_7   
09B0                STRUC_7:   .SET   STRUC_8   
09B0                STRUC_8:   .SET   STRUC_9   
09B0                STRUC_9:   .SET   STRUC_10   
09B0                STRUC_10:   .SET   STRUC_11   
09B0                STRUC_11:   .SET   STRUC_12   
09B0                STRUC_12:   .SET   0   
09B0                          ;*Macro unroll:  _endif
09B0                          ;*Macro unroll:  STRUC_FWD
09B0                CUR_ADR:   .SET   $   
099D                          .ORG   STRUC_TOP - 2   
099D   B0 09                  DW   CUR_ADR   
09B0                          .ORG   CUR_ADR   
09B0                          ;*Macro unroll:  STRUC_POP
09B0                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09B0                STRUC_TOP:   .SET   STRUC_2   
09B0                STRUC_2:   .SET   STRUC_3   
09B0                STRUC_3:   .SET   STRUC_4   
09B0                STRUC_4:   .SET   STRUC_5   
09B0                STRUC_5:   .SET   STRUC_6   
09B0                STRUC_6:   .SET   STRUC_7   
09B0                STRUC_7:   .SET   STRUC_8   
09B0                STRUC_8:   .SET   STRUC_9   
09B0                STRUC_9:   .SET   STRUC_10   
09B0                STRUC_10:   .SET   STRUC_11   
09B0                STRUC_11:   .SET   STRUC_12   
09B0                STRUC_12:   .SET   0   
09B0   D1                     POP   DE   ; restore DE
09B1   1A                     LD   A,(DE)   
09B2   08                     EX   AF,AF'   
09B3   13                     INC   DE   
09B4   1A                     LD   A,(DE)   
09B5   57                     LD   D,A   
09B6   08                     EX   AF,AF'   
09B7   5F                     LD   E,A   
09B8                          ;*Macro unroll:  _enddo
09B8   C3 8F 09               JP   DLOOP_TOP   
09BB                          ;*Macro unroll:  DLOOP_FWD
09BB                CUR_ADR:   .SET   $   
098D                          .ORG   DLOOP_TOP - 2   
098D   BB 09                  DW   CUR_ADR   
09BB                          .ORG   CUR_ADR   
09BB                          ;*Macro unroll:  DLOOP_POP
09BB                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09BB                DLOOP_TOP:   .SET   DLOOP_2   
09BB                DLOOP_2:   .SET   DLOOP_3   
09BB                DLOOP_3:   .SET   DLOOP_4   
09BB                DLOOP_4:   .SET   DLOOP_5   
09BB                DLOOP_5:   .SET   DLOOP_6   
09BB                DLOOP_6:   .SET   DLOOP_7   
09BB                DLOOP_7:   .SET   DLOOP_8   
09BB                DLOOP_8:   .SET   DLOOP_9   
09BB                DLOOP_9:   .SET   DLOOP_10   
09BB                DLOOP_10:   .SET   DLOOP_11   
09BB                DLOOP_11:   .SET   DLOOP_12   
09BB                DLOOP_12:   .SET   0   
09BB                             ; 
09BB                             ; listWords - prints all the words in dictionary
09BB                             ; 
09BB                             ; destroys: ?
09BB                             ; 
09BB                LISTWORDS:      
09BB   ED 5B 61 22            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
09BF                          ;*Macro unroll:  _do
09BF   18 03                  JR   L_M_1571   
09C1   C3 C1 09               JP   $   
09C4                          ;*Macro unroll:  DLOOP_PUSH $
09C4                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09C4                DLOOP_12:   .SET   DLOOP_11   
09C4                DLOOP_11:   .SET   DLOOP_10   
09C4                DLOOP_10:   .SET   DLOOP_9   
09C4                DLOOP_9:   .SET   DLOOP_8   
09C4                DLOOP_8:   .SET   DLOOP_7   
09C4                DLOOP_7:   .SET   DLOOP_6   
09C4                DLOOP_6:   .SET   DLOOP_5   
09C4                DLOOP_5:   .SET   DLOOP_4   
09C4                DLOOP_4:   .SET   DLOOP_3   
09C4                DLOOP_3:   .SET   DLOOP_2   
09C4                DLOOP_2:   .SET   DLOOP_TOP   
09C4                DLOOP_TOP:   .SET   $   
09C4                L_M_1571:      
09C4                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
09C4   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
09C5   B2                     OR   D   
09C6                          ;*Macro unroll:  _until z
09C6   CA C1 09               JP   z,DLOOP_TOP - 3   
09C9                          ;*Macro unroll:  DLOOP_FWD               ; needed?
09C9                CUR_ADR:   .SET   $   ; needed?
09C2                          .ORG   DLOOP_TOP - 2   
09C2   C9 09                  DW   CUR_ADR   
09C9                          .ORG   CUR_ADR   
09C9   D5                     PUSH   DE   ; save ptr to header
09CA   13                     INC   DE   ; skip over first field
09CB   13                     INC   DE   
09CC   1A                     LD   A,(DE)   ; a = flags+length field
09CD   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
09CF   06 00                  LD   B,0   
09D1   4F                     LD   C,A   
09D2   13                     INC   DE   
09D3   CD 04 02               CALL   printStr   
09D6   CD 17 02               CALL   printSpace   
09D9   CD 16 01               CALL   putc   
09DC   E1                     POP   HL   ; HL = link to previous header
09DD   5E                     LD   E,(HL)   
09DE   23                     INC   HL   
09DF   56                     LD   D,(HL)   ; DE = previous word
09E0                          ;*Macro unroll:  _enddo
09E0   C3 C4 09               JP   DLOOP_TOP   
09E3                          ;*Macro unroll:  DLOOP_FWD
09E3                CUR_ADR:   .SET   $   
09C2                          .ORG   DLOOP_TOP - 2   
09C2   E3 09                  DW   CUR_ADR   
09E3                          .ORG   CUR_ADR   
09E3                          ;*Macro unroll:  DLOOP_POP
09E3                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09E3                DLOOP_TOP:   .SET   DLOOP_2   
09E3                DLOOP_2:   .SET   DLOOP_3   
09E3                DLOOP_3:   .SET   DLOOP_4   
09E3                DLOOP_4:   .SET   DLOOP_5   
09E3                DLOOP_5:   .SET   DLOOP_6   
09E3                DLOOP_6:   .SET   DLOOP_7   
09E3                DLOOP_7:   .SET   DLOOP_8   
09E3                DLOOP_8:   .SET   DLOOP_9   
09E3                DLOOP_9:   .SET   DLOOP_10   
09E3                DLOOP_10:   .SET   DLOOP_11   
09E3                DLOOP_11:   .SET   DLOOP_12   
09E3                DLOOP_12:   .SET   0   
09E3   CD 0E 02               CALL   printCR   
09E6   C9                     RET      
09E7                             ; 
09E7                             ; utility routines used by xword
09E7                             ; 
09E7                XWORDSKIP:      ; delim addr -- delim addr char
09E7                          ;*Macro unroll:  ppop H,L
09E7   60                     LD   H,B   
09E8   69                     LD   L,C   
09E9                          ;*Macro unroll:  ppop0 B,C
09E9   DD 2B                  DEC   IX   
09EB   DD 46 00               LD   B,(IX+0)   
09EE   DD 2B                  DEC   IX   
09F0   DD 4E 00               LD   C,(IX+0)   
09F3                          ;*Macro unroll:  ppop D,E
09F3   50                     LD   D,B   
09F4   59                     LD   E,C   
09F5                          ;*Macro unroll:  ppop0 B,C
09F5   DD 2B                  DEC   IX   
09F7   DD 46 00               LD   B,(IX+0)   
09FA   DD 2B                  DEC   IX   
09FC   DD 4E 00               LD   C,(IX+0)   
09FF                          ;*Macro unroll:  ppush0 B,C
09FF   DD 71 00               LD   (IX+0),C   
0A02   DD 23                  INC   IX   
0A04   DD 70 00               LD   (IX+0),B   
0A07   DD 23                  INC   IX   
0A09                          ;*Macro unroll:  ppush0 D,E
0A09   DD 73 00               LD   (IX+0),E   
0A0C   DD 23                  INC   IX   
0A0E   DD 72 00               LD   (IX+0),D   
0A11   DD 23                  INC   IX   
0A13                          ;*Macro unroll:  ppush0 H,L
0A13   DD 75 00               LD   (IX+0),L   
0A16   DD 23                  INC   IX   
0A18   DD 74 00               LD   (IX+0),H   
0A1B   DD 23                  INC   IX   
0A1D                          ;*Macro unroll:  _do
0A1D   18 03                  JR   L_M_1601   
0A1F   C3 1F 0A               JP   $   
0A22                          ;*Macro unroll:  DLOOP_PUSH $
0A22                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A22                DLOOP_12:   .SET   DLOOP_11   
0A22                DLOOP_11:   .SET   DLOOP_10   
0A22                DLOOP_10:   .SET   DLOOP_9   
0A22                DLOOP_9:   .SET   DLOOP_8   
0A22                DLOOP_8:   .SET   DLOOP_7   
0A22                DLOOP_7:   .SET   DLOOP_6   
0A22                DLOOP_6:   .SET   DLOOP_5   
0A22                DLOOP_5:   .SET   DLOOP_4   
0A22                DLOOP_4:   .SET   DLOOP_3   
0A22                DLOOP_3:   .SET   DLOOP_2   
0A22                DLOOP_2:   .SET   DLOOP_TOP   
0A22                DLOOP_TOP:   .SET   $   
0A22                L_M_1601:      
0A22   CD C0 01               CALL   getKey   ; get next key, returned in A
0A25                          ;*Macro unroll:  _switch
0A25   18 03                  JR   L_M_1603   
0A27   C3 27 0A               JP   $   
0A2A                          ;*Macro unroll:  STRUC_PUSH $
0A2A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A2A                STRUC_12:   .SET   STRUC_11   
0A2A                STRUC_11:   .SET   STRUC_10   
0A2A                STRUC_10:   .SET   STRUC_9   
0A2A                STRUC_9:   .SET   STRUC_8   
0A2A                STRUC_8:   .SET   STRUC_7   
0A2A                STRUC_7:   .SET   STRUC_6   
0A2A                STRUC_6:   .SET   STRUC_5   
0A2A                STRUC_5:   .SET   STRUC_4   
0A2A                STRUC_4:   .SET   STRUC_3   
0A2A                STRUC_3:   .SET   STRUC_2   
0A2A                STRUC_2:   .SET   STRUC_TOP   
0A2A                STRUC_TOP:   .SET   $   
0A2A                L_M_1603:      
0A2A   CB 7F                  BIT   7,A   ; check end of input
0A2C                          ;*Macro unroll:  _if nz
0A2C   C2 32 0A               JP   nz,L_M_1605   
0A2F   C3 2F 0A               JP   $   
0A32                          ;*Macro unroll:  STRUC_PUSH $
0A32                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A32                STRUC_12:   .SET   STRUC_11   
0A32                STRUC_11:   .SET   STRUC_10   
0A32                STRUC_10:   .SET   STRUC_9   
0A32                STRUC_9:   .SET   STRUC_8   
0A32                STRUC_8:   .SET   STRUC_7   
0A32                STRUC_7:   .SET   STRUC_6   
0A32                STRUC_6:   .SET   STRUC_5   
0A32                STRUC_5:   .SET   STRUC_4   
0A32                STRUC_4:   .SET   STRUC_3   
0A32                STRUC_3:   .SET   STRUC_2   
0A32                STRUC_2:   .SET   STRUC_TOP   
0A32                STRUC_TOP:   .SET   $   
0A32                L_M_1605:      
0A32   36 00                  LD   (HL),0   
0A34   3E 00                  LD   A,0   
0A36                          ;*Macro unroll:  _break
0A36   C3 1F 0A               JP   DLOOP_TOP - 3   
0A39                          ;*Macro unroll:  _endif
0A39                          ;*Macro unroll:  STRUC_FWD
0A39                CUR_ADR:   .SET   $   
0A30                          .ORG   STRUC_TOP - 2   
0A30   39 0A                  DW   CUR_ADR   
0A39                          .ORG   CUR_ADR   
0A39                          ;*Macro unroll:  STRUC_POP
0A39                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A39                STRUC_TOP:   .SET   STRUC_2   
0A39                STRUC_2:   .SET   STRUC_3   
0A39                STRUC_3:   .SET   STRUC_4   
0A39                STRUC_4:   .SET   STRUC_5   
0A39                STRUC_5:   .SET   STRUC_6   
0A39                STRUC_6:   .SET   STRUC_7   
0A39                STRUC_7:   .SET   STRUC_8   
0A39                STRUC_8:   .SET   STRUC_9   
0A39                STRUC_9:   .SET   STRUC_10   
0A39                STRUC_10:   .SET   STRUC_11   
0A39                STRUC_11:   .SET   STRUC_12   
0A39                STRUC_12:   .SET   0   
0A39   FE 5C                  CP   $5C   ; \ start of a comment?
0A3B                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0A3B   CA 41 0A               JP   z,L_M_1611   ; if yes skip to end of line
0A3E   C3 3E 0A               JP   $   
0A41                          ;*Macro unroll:  STRUC_PUSH $
0A41                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A41                STRUC_12:   .SET   STRUC_11   
0A41                STRUC_11:   .SET   STRUC_10   
0A41                STRUC_10:   .SET   STRUC_9   
0A41                STRUC_9:   .SET   STRUC_8   
0A41                STRUC_8:   .SET   STRUC_7   
0A41                STRUC_7:   .SET   STRUC_6   
0A41                STRUC_6:   .SET   STRUC_5   
0A41                STRUC_5:   .SET   STRUC_4   
0A41                STRUC_4:   .SET   STRUC_3   
0A41                STRUC_3:   .SET   STRUC_2   
0A41                STRUC_2:   .SET   STRUC_TOP   
0A41                STRUC_TOP:   .SET   $   
0A41                L_M_1611:      
0A41                          ;*Macro unroll:  _do
0A41   18 03                  JR   L_M_1612   
0A43   C3 43 0A               JP   $   
0A46                          ;*Macro unroll:  DLOOP_PUSH $
0A46                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A46                DLOOP_12:   .SET   DLOOP_11   
0A46                DLOOP_11:   .SET   DLOOP_10   
0A46                DLOOP_10:   .SET   DLOOP_9   
0A46                DLOOP_9:   .SET   DLOOP_8   
0A46                DLOOP_8:   .SET   DLOOP_7   
0A46                DLOOP_7:   .SET   DLOOP_6   
0A46                DLOOP_6:   .SET   DLOOP_5   
0A46                DLOOP_5:   .SET   DLOOP_4   
0A46                DLOOP_4:   .SET   DLOOP_3   
0A46                DLOOP_3:   .SET   DLOOP_2   
0A46                DLOOP_2:   .SET   DLOOP_TOP   
0A46                DLOOP_TOP:   .SET   $   
0A46                L_M_1612:      
0A46   CD C0 01               CALL   getKey   
0A49   FE 0D                  CP   "\r"   ; end of line yet?
0A4B                          ;*Macro unroll:  _if nz
0A4B   C2 51 0A               JP   nz,L_M_1615   
0A4E   C3 4E 0A               JP   $   
0A51                          ;*Macro unroll:  STRUC_PUSH $
0A51                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A51                STRUC_12:   .SET   STRUC_11   
0A51                STRUC_11:   .SET   STRUC_10   
0A51                STRUC_10:   .SET   STRUC_9   
0A51                STRUC_9:   .SET   STRUC_8   
0A51                STRUC_8:   .SET   STRUC_7   
0A51                STRUC_7:   .SET   STRUC_6   
0A51                STRUC_6:   .SET   STRUC_5   
0A51                STRUC_5:   .SET   STRUC_4   
0A51                STRUC_4:   .SET   STRUC_3   
0A51                STRUC_3:   .SET   STRUC_2   
0A51                STRUC_2:   .SET   STRUC_TOP   
0A51                STRUC_TOP:   .SET   $   
0A51                L_M_1615:      
0A51   FE 0A                  CP   "\n"   ; end of line yet?
0A53                          ;*Macro unroll:  _endif
0A53                          ;*Macro unroll:  STRUC_FWD
0A53                CUR_ADR:   .SET   $   
0A4F                          .ORG   STRUC_TOP - 2   
0A4F   53 0A                  DW   CUR_ADR   
0A53                          .ORG   CUR_ADR   
0A53                          ;*Macro unroll:  STRUC_POP
0A53                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A53                STRUC_TOP:   .SET   STRUC_2   
0A53                STRUC_2:   .SET   STRUC_3   
0A53                STRUC_3:   .SET   STRUC_4   
0A53                STRUC_4:   .SET   STRUC_5   
0A53                STRUC_5:   .SET   STRUC_6   
0A53                STRUC_6:   .SET   STRUC_7   
0A53                STRUC_7:   .SET   STRUC_8   
0A53                STRUC_8:   .SET   STRUC_9   
0A53                STRUC_9:   .SET   STRUC_10   
0A53                STRUC_10:   .SET   STRUC_11   
0A53                STRUC_11:   .SET   STRUC_12   
0A53                STRUC_12:   .SET   0   
0A53                          ;*Macro unroll:  _until z
0A53   CA 43 0A               JP   z,DLOOP_TOP - 3   
0A56                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A56                CUR_ADR:   .SET   $   ; needed?
0A44                          .ORG   DLOOP_TOP - 2   
0A44   56 0A                  DW   CUR_ADR   
0A56                          .ORG   CUR_ADR   
0A56                          ;*Macro unroll:  _enddo
0A56   C3 46 0A               JP   DLOOP_TOP   
0A59                          ;*Macro unroll:  DLOOP_FWD
0A59                CUR_ADR:   .SET   $   
0A44                          .ORG   DLOOP_TOP - 2   
0A44   59 0A                  DW   CUR_ADR   
0A59                          .ORG   CUR_ADR   
0A59                          ;*Macro unroll:  DLOOP_POP
0A59                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A59                DLOOP_TOP:   .SET   DLOOP_2   
0A59                DLOOP_2:   .SET   DLOOP_3   
0A59                DLOOP_3:   .SET   DLOOP_4   
0A59                DLOOP_4:   .SET   DLOOP_5   
0A59                DLOOP_5:   .SET   DLOOP_6   
0A59                DLOOP_6:   .SET   DLOOP_7   
0A59                DLOOP_7:   .SET   DLOOP_8   
0A59                DLOOP_8:   .SET   DLOOP_9   
0A59                DLOOP_9:   .SET   DLOOP_10   
0A59                DLOOP_10:   .SET   DLOOP_11   
0A59                DLOOP_11:   .SET   DLOOP_12   
0A59                DLOOP_12:   .SET   0   
0A59                          ;*Macro unroll:  _endcase
0A59   C3 27 0A               JP   STRUC_2 - 3   
0A5C                          ;*Macro unroll:  STRUC_FWD
0A5C                CUR_ADR:   .SET   $   
0A3F                          .ORG   STRUC_TOP - 2   
0A3F   5C 0A                  DW   CUR_ADR   
0A5C                          .ORG   CUR_ADR   
0A5C                          ;*Macro unroll:  STRUC_POP
0A5C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A5C                STRUC_TOP:   .SET   STRUC_2   
0A5C                STRUC_2:   .SET   STRUC_3   
0A5C                STRUC_3:   .SET   STRUC_4   
0A5C                STRUC_4:   .SET   STRUC_5   
0A5C                STRUC_5:   .SET   STRUC_6   
0A5C                STRUC_6:   .SET   STRUC_7   
0A5C                STRUC_7:   .SET   STRUC_8   
0A5C                STRUC_8:   .SET   STRUC_9   
0A5C                STRUC_9:   .SET   STRUC_10   
0A5C                STRUC_10:   .SET   STRUC_11   
0A5C                STRUC_11:   .SET   STRUC_12   
0A5C                STRUC_12:   .SET   0   
0A5C   B9                     CP   C   ; = space?
0A5D                          ;*Macro unroll:  _case z
0A5D   CA 63 0A               JP   z,L_M_1622   
0A60   C3 60 0A               JP   $   
0A63                          ;*Macro unroll:  STRUC_PUSH $
0A63                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A63                STRUC_12:   .SET   STRUC_11   
0A63                STRUC_11:   .SET   STRUC_10   
0A63                STRUC_10:   .SET   STRUC_9   
0A63                STRUC_9:   .SET   STRUC_8   
0A63                STRUC_8:   .SET   STRUC_7   
0A63                STRUC_7:   .SET   STRUC_6   
0A63                STRUC_6:   .SET   STRUC_5   
0A63                STRUC_5:   .SET   STRUC_4   
0A63                STRUC_4:   .SET   STRUC_3   
0A63                STRUC_3:   .SET   STRUC_2   
0A63                STRUC_2:   .SET   STRUC_TOP   
0A63                STRUC_TOP:   .SET   $   
0A63                L_M_1622:      
0A63                          ;*Macro unroll:  _endcase
0A63   C3 27 0A               JP   STRUC_2 - 3   
0A66                          ;*Macro unroll:  STRUC_FWD
0A66                CUR_ADR:   .SET   $   
0A61                          .ORG   STRUC_TOP - 2   
0A61   66 0A                  DW   CUR_ADR   
0A66                          .ORG   CUR_ADR   
0A66                          ;*Macro unroll:  STRUC_POP
0A66                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A66                STRUC_TOP:   .SET   STRUC_2   
0A66                STRUC_2:   .SET   STRUC_3   
0A66                STRUC_3:   .SET   STRUC_4   
0A66                STRUC_4:   .SET   STRUC_5   
0A66                STRUC_5:   .SET   STRUC_6   
0A66                STRUC_6:   .SET   STRUC_7   
0A66                STRUC_7:   .SET   STRUC_8   
0A66                STRUC_8:   .SET   STRUC_9   
0A66                STRUC_9:   .SET   STRUC_10   
0A66                STRUC_10:   .SET   STRUC_11   
0A66                STRUC_11:   .SET   STRUC_12   
0A66                STRUC_12:   .SET   0   
0A66   FE 20                  CP   " "   ; < space?
0A68                          ;*Macro unroll:  _case c
0A68   DA 6E 0A               JP   c,L_M_1625   
0A6B   C3 6B 0A               JP   $   
0A6E                          ;*Macro unroll:  STRUC_PUSH $
0A6E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A6E                STRUC_12:   .SET   STRUC_11   
0A6E                STRUC_11:   .SET   STRUC_10   
0A6E                STRUC_10:   .SET   STRUC_9   
0A6E                STRUC_9:   .SET   STRUC_8   
0A6E                STRUC_8:   .SET   STRUC_7   
0A6E                STRUC_7:   .SET   STRUC_6   
0A6E                STRUC_6:   .SET   STRUC_5   
0A6E                STRUC_5:   .SET   STRUC_4   
0A6E                STRUC_4:   .SET   STRUC_3   
0A6E                STRUC_3:   .SET   STRUC_2   
0A6E                STRUC_2:   .SET   STRUC_TOP   
0A6E                STRUC_TOP:   .SET   $   
0A6E                L_M_1625:      
0A6E                          ;*Macro unroll:  _endcase
0A6E   C3 27 0A               JP   STRUC_2 - 3   
0A71                          ;*Macro unroll:  STRUC_FWD
0A71                CUR_ADR:   .SET   $   
0A6C                          .ORG   STRUC_TOP - 2   
0A6C   71 0A                  DW   CUR_ADR   
0A71                          .ORG   CUR_ADR   
0A71                          ;*Macro unroll:  STRUC_POP
0A71                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A71                STRUC_TOP:   .SET   STRUC_2   
0A71                STRUC_2:   .SET   STRUC_3   
0A71                STRUC_3:   .SET   STRUC_4   
0A71                STRUC_4:   .SET   STRUC_5   
0A71                STRUC_5:   .SET   STRUC_6   
0A71                STRUC_6:   .SET   STRUC_7   
0A71                STRUC_7:   .SET   STRUC_8   
0A71                STRUC_8:   .SET   STRUC_9   
0A71                STRUC_9:   .SET   STRUC_10   
0A71                STRUC_10:   .SET   STRUC_11   
0A71                STRUC_11:   .SET   STRUC_12   
0A71                STRUC_12:   .SET   0   
0A71                             ; default case
0A71                          ;*Macro unroll:  _break
0A71   C3 1F 0A               JP   DLOOP_TOP - 3   
0A74                          ;*Macro unroll:  _endswitch
0A74                          ;*Macro unroll:  STRUC_FWD
0A74                CUR_ADR:   .SET   $   
0A28                          .ORG   STRUC_TOP - 2   
0A28   74 0A                  DW   CUR_ADR   
0A74                          .ORG   CUR_ADR   
0A74                          ;*Macro unroll:  STRUC_POP
0A74                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A74                STRUC_TOP:   .SET   STRUC_2   
0A74                STRUC_2:   .SET   STRUC_3   
0A74                STRUC_3:   .SET   STRUC_4   
0A74                STRUC_4:   .SET   STRUC_5   
0A74                STRUC_5:   .SET   STRUC_6   
0A74                STRUC_6:   .SET   STRUC_7   
0A74                STRUC_7:   .SET   STRUC_8   
0A74                STRUC_8:   .SET   STRUC_9   
0A74                STRUC_9:   .SET   STRUC_10   
0A74                STRUC_10:   .SET   STRUC_11   
0A74                STRUC_11:   .SET   STRUC_12   
0A74                STRUC_12:   .SET   0   
0A74                          ;*Macro unroll:  _enddo
0A74   C3 22 0A               JP   DLOOP_TOP   
0A77                          ;*Macro unroll:  DLOOP_FWD
0A77                CUR_ADR:   .SET   $   
0A20                          .ORG   DLOOP_TOP - 2   
0A20   77 0A                  DW   CUR_ADR   
0A77                          .ORG   CUR_ADR   
0A77                          ;*Macro unroll:  DLOOP_POP
0A77                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A77                DLOOP_TOP:   .SET   DLOOP_2   
0A77                DLOOP_2:   .SET   DLOOP_3   
0A77                DLOOP_3:   .SET   DLOOP_4   
0A77                DLOOP_4:   .SET   DLOOP_5   
0A77                DLOOP_5:   .SET   DLOOP_6   
0A77                DLOOP_6:   .SET   DLOOP_7   
0A77                DLOOP_7:   .SET   DLOOP_8   
0A77                DLOOP_8:   .SET   DLOOP_9   
0A77                DLOOP_9:   .SET   DLOOP_10   
0A77                DLOOP_10:   .SET   DLOOP_11   
0A77                DLOOP_11:   .SET   DLOOP_12   
0A77                DLOOP_12:   .SET   0   
0A77   06 00                  LD   B,0   
0A79   4F                     LD   C,A   
0A7A   C9                     RET      
0A7B                XWORDREAD:      ; delim addr char -- c-addr
0A7B   79                     LD   A,C   
0A7C                          ;*Macro unroll:  ppop0 B,C
0A7C   DD 2B                  DEC   IX   
0A7E   DD 46 00               LD   B,(IX+0)   
0A81   DD 2B                  DEC   IX   
0A83   DD 4E 00               LD   C,(IX+0)   
0A86                          ;*Macro unroll:  ppop H,L
0A86   60                     LD   H,B   
0A87   69                     LD   L,C   
0A88                          ;*Macro unroll:  ppop0 B,C
0A88   DD 2B                  DEC   IX   
0A8A   DD 46 00               LD   B,(IX+0)   
0A8D   DD 2B                  DEC   IX   
0A8F   DD 4E 00               LD   C,(IX+0)   
0A92                          ;*Macro unroll:  ppop D,E
0A92   50                     LD   D,B   
0A93   59                     LD   E,C   
0A94                          ;*Macro unroll:  ppop0 B,C
0A94   DD 2B                  DEC   IX   
0A96   DD 46 00               LD   B,(IX+0)   
0A99   DD 2B                  DEC   IX   
0A9B   DD 4E 00               LD   C,(IX+0)   
0A9E   16 00                  LD   D,0   
0AA0   B7                     OR   A   
0AA1                          ;*Macro unroll:  _if nz
0AA1   C2 A7 0A               JP   nz,L_M_1641   
0AA4   C3 A4 0A               JP   $   
0AA7                          ;*Macro unroll:  STRUC_PUSH $
0AA7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AA7                STRUC_12:   .SET   STRUC_11   
0AA7                STRUC_11:   .SET   STRUC_10   
0AA7                STRUC_10:   .SET   STRUC_9   
0AA7                STRUC_9:   .SET   STRUC_8   
0AA7                STRUC_8:   .SET   STRUC_7   
0AA7                STRUC_7:   .SET   STRUC_6   
0AA7                STRUC_6:   .SET   STRUC_5   
0AA7                STRUC_5:   .SET   STRUC_4   
0AA7                STRUC_4:   .SET   STRUC_3   
0AA7                STRUC_3:   .SET   STRUC_2   
0AA7                STRUC_2:   .SET   STRUC_TOP   
0AA7                STRUC_TOP:   .SET   $   
0AA7                L_M_1641:      
0AA7   E5                     PUSH   HL   ; save a copy of HL
0AA8   23                     INC   HL   ; move to leave space for length byte
0AA9   43                     LD   B,E   
0AAA                          ;*Macro unroll:  _do
0AAA   18 03                  JR   L_M_1645   
0AAC   C3 AC 0A               JP   $   
0AAF                          ;*Macro unroll:  DLOOP_PUSH $
0AAF                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0AAF                DLOOP_12:   .SET   DLOOP_11   
0AAF                DLOOP_11:   .SET   DLOOP_10   
0AAF                DLOOP_10:   .SET   DLOOP_9   
0AAF                DLOOP_9:   .SET   DLOOP_8   
0AAF                DLOOP_8:   .SET   DLOOP_7   
0AAF                DLOOP_7:   .SET   DLOOP_6   
0AAF                DLOOP_6:   .SET   DLOOP_5   
0AAF                DLOOP_5:   .SET   DLOOP_4   
0AAF                DLOOP_4:   .SET   DLOOP_3   
0AAF                DLOOP_3:   .SET   DLOOP_2   
0AAF                DLOOP_2:   .SET   DLOOP_TOP   
0AAF                DLOOP_TOP:   .SET   $   
0AAF                L_M_1645:      
0AAF   77                     LD   (HL),A   ; add character to return lineBuf
0AB0   23                     INC   HL   
0AB1   14                     INC   D   
0AB2   CD C0 01               CALL   getKey   ; get next key
0AB5   B9                     CP   C   ; = delim?
0AB6                          ;*Macro unroll:  _until z
0AB6   CA AC 0A               JP   z,DLOOP_TOP - 3   
0AB9                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0AB9                CUR_ADR:   .SET   $   ; needed?
0AAD                          .ORG   DLOOP_TOP - 2   
0AAD   B9 0A                  DW   CUR_ADR   
0AB9                          .ORG   CUR_ADR   
0AB9   FE 20                  CP   " "   ; < space? i.e. control chars
0ABB                          ;*Macro unroll:  _until c
0ABB   DA AC 0A               JP   c,DLOOP_TOP - 3   
0ABE                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0ABE                CUR_ADR:   .SET   $   ; needed?
0AAD                          .ORG   DLOOP_TOP - 2   
0AAD   BE 0A                  DW   CUR_ADR   
0ABE                          .ORG   CUR_ADR   
0ABE                          ;*Macro unroll:  _djnz
0ABE   10 EF                  DJNZ   DLOOP_TOP   
0AC0                          ;*Macro unroll:  DLOOP_FWD
0AC0                CUR_ADR:   .SET   $   
0AAD                          .ORG   DLOOP_TOP - 2   
0AAD   C0 0A                  DW   CUR_ADR   
0AC0                          .ORG   CUR_ADR   
0AC0                          ;*Macro unroll:  DLOOP_POP
0AC0                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0AC0                DLOOP_TOP:   .SET   DLOOP_2   
0AC0                DLOOP_2:   .SET   DLOOP_3   
0AC0                DLOOP_3:   .SET   DLOOP_4   
0AC0                DLOOP_4:   .SET   DLOOP_5   
0AC0                DLOOP_5:   .SET   DLOOP_6   
0AC0                DLOOP_6:   .SET   DLOOP_7   
0AC0                DLOOP_7:   .SET   DLOOP_8   
0AC0                DLOOP_8:   .SET   DLOOP_9   
0AC0                DLOOP_9:   .SET   DLOOP_10   
0AC0                DLOOP_10:   .SET   DLOOP_11   
0AC0                DLOOP_11:   .SET   DLOOP_12   
0AC0                DLOOP_12:   .SET   0   
0AC0   E1                     POP   HL   ; restore HL
0AC1                          ;*Macro unroll:  _endif
0AC1                          ;*Macro unroll:  STRUC_FWD
0AC1                CUR_ADR:   .SET   $   
0AA5                          .ORG   STRUC_TOP - 2   
0AA5   C1 0A                  DW   CUR_ADR   
0AC1                          .ORG   CUR_ADR   
0AC1                          ;*Macro unroll:  STRUC_POP
0AC1                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AC1                STRUC_TOP:   .SET   STRUC_2   
0AC1                STRUC_2:   .SET   STRUC_3   
0AC1                STRUC_3:   .SET   STRUC_4   
0AC1                STRUC_4:   .SET   STRUC_5   
0AC1                STRUC_5:   .SET   STRUC_6   
0AC1                STRUC_6:   .SET   STRUC_7   
0AC1                STRUC_7:   .SET   STRUC_8   
0AC1                STRUC_8:   .SET   STRUC_9   
0AC1                STRUC_9:   .SET   STRUC_10   
0AC1                STRUC_10:   .SET   STRUC_11   
0AC1                STRUC_11:   .SET   STRUC_12   
0AC1                STRUC_12:   .SET   0   
0AC1   72                     LD   (HL),D   ; write length
0AC2                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0AC2   4D                     LD   C,L   ; TOS = str ptr
0AC3   44                     LD   B,H   
0AC4   C9                     RET      
0AC5                             ; 
0AC5                             ; words
0AC5                             ; 
0AC5                             ; forth word defintions
0AC5                             ; 
0AC5                          ;*Macro unroll: defword "word",5,0,WORD                 ; delim -- c-addr
0AC5                HEADER_WORD:      ; delim -- c-addr
0AC5   12 07                  DW   link   
0AC7                LINK:     .SET   HEADER_WORD   
0AC7   05                     DB   0 + 5   
0AC8   77 6F 72 64            DB   "word"   
0ACC                WORD:        
0ACC   CF                     RST   $08   ; enter forth
0ACD   4F 03 40 00            DW   lit,64   ; limit
0AD1   83 0F 67 04            DW   here,fetch   
0AD5   67 02                  DW   xword   ; writes to HERE!
0AD7                          ;*Macro unroll:  EXIT
0AD7   EF 0D                  DW   exit   
0AD9   C3 D4 07               JP   enter   
0ADC                          ;*Macro unroll: defword ">cfa",4,0,tcfa
0ADC                HEADER_TCFA:      
0ADC   C5 0A                  DW   link   
0ADE                LINK:     .SET   HEADER_tcfa   
0ADE   04                     DB   0 + 4   
0ADF   3E 63 66 61            DB   ">cfa"   
0AE3                TCFA:        
0AE3   CF                     RST   $08   ; enter forth
0AE4   4F 03 02 00 D8 04      DW   lit,2,plus   
0AEA   01 0B                  DW   count   
0AEC   4F 03 3F 00 95 05      DW   lit,msk_length,and   
0AF2   D8 04                  DW   plus   
0AF4                          ;*Macro unroll:  EXIT
0AF4   EF 0D                  DW   exit   
0AF6   C3 D4 07               JP   enter   
0AF9                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
0AF9                          ;*Macro unroll: defword "count",5,0,count
0AF9                HEADER_COUNT:      
0AF9   DC 0A                  DW   link   
0AFB                LINK:     .SET   HEADER_count   
0AFB   05                     DB   0 + 5   
0AFC   63 6F 75 6E 74         DB   "count"   
0B01                COUNT:       
0B01   CF                     RST   $08   ; enter forth
0B02   48 06 4F 03 01 00 D8 04 DW   dup,lit,1,plus   ; ( ptr -- ptr ptr+1)
0B0A   5C 06 CD 04            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
0B0E                          ;*Macro unroll:  EXIT
0B0E   EF 0D                  DW   exit   
0B10   C3 D4 07               JP   enter   
0B13                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0B13                          ;*Macro unroll: defword "allot",5,0,allot               ;
0B13                HEADER_ALLOT:      ; 
0B13   F9 0A                  DW   link   
0B15                LINK:     .SET   HEADER_allot   
0B15   05                     DB   0 + 5   
0B16   61 6C 6C 6F 74         DB   "allot"   
0B1B                ALLOT:       
0B1B   CF                     RST   $08   ; enter forth
0B1C   83 0F C8 02            DW   here,addstore   ; adds n to here
0B20                          ;*Macro unroll:  EXIT
0B20   EF 0D                  DW   exit   
0B22   C3 D4 07               JP   enter   
0B25                             ; abs   n -- u                          absolute value
0B25                          ;*Macro unroll: defword "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0B25                HEADER_ABS:      ; case sensitive for ABS label for some reason
0B25   13 0B                  DW   link   
0B27                LINK:     .SET   HEADER_ABS   
0B27   03                     DB   0 + 3   
0B28   61 62 73               DB   "abs"   
0B2B                ABS:         
0B2B   CF                     RST   $08   ; enter forth
0B2C   48 06                  DW   dup   ; copy arg
0B2E   66 03                  DW   zeroless   
0B30                          ;*Macro unroll:  cif
0B30   23 03 00 00            DW   ZBRANCH,0   
0B34                          ;*Macro unroll:  CPL_PUSH $
0B34                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B34                CPL_10:   .SET   CPL_9   
0B34                CPL_9:    .SET   CPL_8   
0B34                CPL_8:    .SET   CPL_7   
0B34                CPL_7:    .SET   CPL_6   
0B34                CPL_6:    .SET   CPL_5   
0B34                CPL_5:    .SET   CPL_4   
0B34                CPL_4:    .SET   CPL_3   
0B34                CPL_3:    .SET   CPL_2   
0B34                CPL_2:    .SET   CPL_TOP   
0B34                CPL_TOP:   .SET   $   
0B34   44 0B                  DW   negate   ; if signs differ then negate answer
0B36                          ;*Macro unroll:  cendif
0B36                          ;*Macro unroll:  cBRANCH_FWD
0B36                CUR_ADR:   .SET   $   
0B32                          .ORG   CPL_TOP - 2   
0B32   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0B36                          .ORG   CUR_ADR   
0B36                          ;*Macro unroll:  CPL_POP
0B36                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B36                CPL_TOP:   .SET   CPL_2   
0B36                CPL_2:    .SET   CPL_3   
0B36                CPL_3:    .SET   CPL_4   
0B36                CPL_4:    .SET   CPL_5   
0B36                CPL_5:    .SET   CPL_6   
0B36                CPL_6:    .SET   CPL_7   
0B36                CPL_7:    .SET   CPL_8   
0B36                CPL_8:    .SET   CPL_9   
0B36                CPL_9:    .SET   CPL_10   
0B36                CPL_10:   .SET   0   
0B36                          ;*Macro unroll:  EXIT
0B36   EF 0D                  DW   exit   
0B38   C3 D4 07               JP   enter   
0B3B                             ; negate  n1 -- n2                      negate n1
0B3B                          ;*Macro unroll: defword "negate",6,0,negate
0B3B                HEADER_NEGATE:      
0B3B   25 0B                  DW   link   
0B3D                LINK:     .SET   HEADER_negate   
0B3D   06                     DB   0 + 6   
0B3E   6E 65 67 61 74 65      DB   "negate"   
0B44                NEGATE:      
0B44   CF                     RST   $08   ; enter forth
0B45   7A 03                  DW   invert   
0B47   0B 03                  DW   oneplus   
0B49                          ;*Macro unroll:  EXIT
0B49   EF 0D                  DW   exit   
0B4B   C3 D4 07               JP   enter   
0B4E                          ;*Macro unroll: defword "bl",2,0,bl
0B4E                HEADER_BL:      
0B4E   3B 0B                  DW   link   
0B50                LINK:     .SET   HEADER_bl   
0B50   02                     DB   0 + 2   
0B51   62 6C                  DB   "bl"   
0B53                BL:          
0B53   CF                     RST   $08   ; enter forth
0B54   4F 03 20 00            DW   lit,$20   ; compile branch on zero
0B58                          ;*Macro unroll:  EXIT
0B58   EF 0D                  DW   exit   
0B5A   C3 D4 07               JP   enter   
0B5D                          ;*Macro unroll: defword "interpret",6,0,interpret
0B5D                HEADER_INTERPRET:      
0B5D   4E 0B                  DW   link   
0B5F                LINK:     .SET   HEADER_interpret   
0B5F   06                     DB   0 + 6   
0B60   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0B69                INTERPRET:      
0B69   CF                     RST   $08   
0B6A                          ;*Macro unroll:  cDo
0B6A   40 03 06 00            DW   BRANCH,6   
0B6E   40 03 00 00            DW   BRANCH,0   
0B72                          ;*Macro unroll:  CPL_PUSH $
0B72                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B72                CPL_10:   .SET   CPL_9   
0B72                CPL_9:    .SET   CPL_8   
0B72                CPL_8:    .SET   CPL_7   
0B72                CPL_7:    .SET   CPL_6   
0B72                CPL_6:    .SET   CPL_5   
0B72                CPL_5:    .SET   CPL_4   
0B72                CPL_4:    .SET   CPL_3   
0B72                CPL_3:    .SET   CPL_2   
0B72                CPL_2:    .SET   CPL_TOP   
0B72                CPL_TOP:   .SET   $   
0B72   53 0B CC 0A 01 0B      DW   bl,word,count   ; pstr -- ptr len
0B78   48 06 6C 05            DW   dup,zEqual   
0B7C                          ;*Macro unroll:  cIf
0B7C   23 03 00 00            DW   ZBRANCH,0   
0B80                          ;*Macro unroll:  CPL_PUSH $
0B80                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B80                CPL_10:   .SET   CPL_9   
0B80                CPL_9:    .SET   CPL_8   
0B80                CPL_8:    .SET   CPL_7   
0B80                CPL_7:    .SET   CPL_6   
0B80                CPL_6:    .SET   CPL_5   
0B80                CPL_5:    .SET   CPL_4   
0B80                CPL_4:    .SET   CPL_3   
0B80                CPL_3:    .SET   CPL_2   
0B80                CPL_2:    .SET   CPL_TOP   
0B80                CPL_TOP:   .SET   $   
0B80   7C 06 7C 06            DW   drop,drop   ; ptr len --
0B84                          ;*Macro unroll:  EXIT
0B84   EF 0D                  DW   exit   
0B86   C3 D4 07               JP   enter   
0B89                          ;*Macro unroll:  cEndif
0B89                          ;*Macro unroll:  cBRANCH_FWD
0B89                CUR_ADR:   .SET   $   
0B7E                          .ORG   CPL_TOP - 2   
0B7E   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0B89                          .ORG   CUR_ADR   
0B89                          ;*Macro unroll:  CPL_POP
0B89                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B89                CPL_TOP:   .SET   CPL_2   
0B89                CPL_2:    .SET   CPL_3   
0B89                CPL_3:    .SET   CPL_4   
0B89                CPL_4:    .SET   CPL_5   
0B89                CPL_5:    .SET   CPL_6   
0B89                CPL_6:    .SET   CPL_7   
0B89                CPL_7:    .SET   CPL_8   
0B89                CPL_8:    .SET   CPL_9   
0B89                CPL_9:    .SET   CPL_10   
0B89                CPL_10:   .SET   0   
0B89   A2 0B                  DW   interpToken   ; interpret the next word
0B8B                          ;*Macro unroll:  cEndDo
0B8B   40 03 E5 FF            DW   BRANCH,CPL_TOP - $ - 2   
0B8F                          ;*Macro unroll:  cBRANCH_FWD
0B8F                CUR_ADR:   .SET   $   
0B70                          .ORG   CPL_TOP - 2   
0B70   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0B8F                          .ORG   CUR_ADR   
0B8F                          ;*Macro unroll:  CPL_POP
0B8F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B8F                CPL_TOP:   .SET   CPL_2   
0B8F                CPL_2:    .SET   CPL_3   
0B8F                CPL_3:    .SET   CPL_4   
0B8F                CPL_4:    .SET   CPL_5   
0B8F                CPL_5:    .SET   CPL_6   
0B8F                CPL_6:    .SET   CPL_7   
0B8F                CPL_7:    .SET   CPL_8   
0B8F                CPL_8:    .SET   CPL_9   
0B8F                CPL_9:    .SET   CPL_10   
0B8F                CPL_10:   .SET   0   
0B8F                          ;*Macro unroll:  EXIT
0B8F   EF 0D                  DW   exit   
0B91   C3 D4 07               JP   enter   
0B94                          ;*Macro unroll: defword "interpToken",11,0,interpToken          ; ptr len --
0B94                HEADER_INTERPTOKEN:      ; ptr len --
0B94   5D 0B                  DW   link   
0B96                LINK:     .SET   HEADER_interpToken   
0B96   0B                     DB   0 + 11   
0B97   69 6E 74 65 72 70 54 6F 6B 65 6E DB   "interpToken"   
0BA2                INTERPTOKEN:      
0BA2   CF                     RST   $08   
0BA3   90 06 90 06 77 02      DW   over,over,find   ; ptr len -- ptr len addr
0BA9   48 06 81 05            DW   dup,zNotEqual   
0BAD                          ;*Macro unroll:  cIf
0BAD   23 03 00 00            DW   ZBRANCH,0   
0BB1                          ;*Macro unroll:  CPL_PUSH $
0BB1                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BB1                CPL_10:   .SET   CPL_9   
0BB1                CPL_9:    .SET   CPL_8   
0BB1                CPL_8:    .SET   CPL_7   
0BB1                CPL_7:    .SET   CPL_6   
0BB1                CPL_6:    .SET   CPL_5   
0BB1                CPL_5:    .SET   CPL_4   
0BB1                CPL_4:    .SET   CPL_3   
0BB1                CPL_3:    .SET   CPL_2   
0BB1                CPL_2:    .SET   CPL_TOP   
0BB1                CPL_TOP:   .SET   $   
0BB1   05 0E                  DW   interpWord   
0BB3                          ;*Macro unroll:  cElse
0BB3   40 03 00 00            DW   BRANCH,0   
0BB7                          ;*Macro unroll:  cBRANCH_FWD
0BB7                CUR_ADR:   .SET   $   
0BAF                          .ORG   CPL_TOP - 2   
0BAF   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0BB7                          .ORG   CUR_ADR   
0BB7                CPL_TOP:   .SET   $   
0BB7   49 0E                  DW   interpLiteral   
0BB9                          ;*Macro unroll:  cEndif
0BB9                          ;*Macro unroll:  cBRANCH_FWD
0BB9                CUR_ADR:   .SET   $   
0BB5                          .ORG   CPL_TOP - 2   
0BB5   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0BB9                          .ORG   CUR_ADR   
0BB9                          ;*Macro unroll:  CPL_POP
0BB9                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BB9                CPL_TOP:   .SET   CPL_2   
0BB9                CPL_2:    .SET   CPL_3   
0BB9                CPL_3:    .SET   CPL_4   
0BB9                CPL_4:    .SET   CPL_5   
0BB9                CPL_5:    .SET   CPL_6   
0BB9                CPL_6:    .SET   CPL_7   
0BB9                CPL_7:    .SET   CPL_8   
0BB9                CPL_8:    .SET   CPL_9   
0BB9                CPL_9:    .SET   CPL_10   
0BB9                CPL_10:   .SET   0   
0BB9                          ;*Macro unroll:  EXIT
0BB9   EF 0D                  DW   exit   
0BBB   C3 D4 07               JP   enter   
0BBE                          ;*Macro unroll: defword "'",1,0,tick                    ; quotes next word
0BBE                HEADER_TICK:      ; quotes next word
0BBE   94 0B                  DW   link   
0BC0                LINK:     .SET   HEADER_tick   
0BC0   01                     DB   0 + 1   
0BC1   27                     DB   "'"   
0BC2                TICK:        
0BC2   53 0B CC 0A 77 02 6C 05 DW   bl,word,find,zEqual   
0BCA   CD 06 01 0B 90 06 90 06 D8 04 B8 06 DW   rFrom,count,over,over,plus,toR   
0BD6   EF 0D                  DW   EXIT   
0BD8                          ;*Macro unroll: defword "*",1,0,star                    ; u1 u2 -- ud
0BD8                HEADER_STAR:      ; u1 u2 -- ud
0BD8   BE 0B                  DW   link   
0BDA                LINK:     .SET   HEADER_star   
0BDA   01                     DB   0 + 1   
0BDB   2A                     DB   "*"   
0BDC                STAR:        
0BDC   CF                     RST   $08   ; enter forth
0BDD   90 06 90 06            DW   over,over   ; dupe both args
0BE1   2B 0B 5C 06 2B 0B      DW   ABS,swap,ABS   ; remove sign from both args
0BE7   0F 05 7C 06            DW   ustar,drop   ; unsigned multiply, drop hi-word
0BEB   13 06                  DW   nrot   ; move to bottom
0BED   C6 05                  DW   xor   ; zero if signs are the same
0BEF   66 03                  DW   zeroless   ; if high bit set
0BF1                          ;*Macro unroll:  cif
0BF1   23 03 00 00            DW   ZBRANCH,0   
0BF5                          ;*Macro unroll:  CPL_PUSH $
0BF5                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BF5                CPL_10:   .SET   CPL_9   
0BF5                CPL_9:    .SET   CPL_8   
0BF5                CPL_8:    .SET   CPL_7   
0BF5                CPL_7:    .SET   CPL_6   
0BF5                CPL_6:    .SET   CPL_5   
0BF5                CPL_5:    .SET   CPL_4   
0BF5                CPL_4:    .SET   CPL_3   
0BF5                CPL_3:    .SET   CPL_2   
0BF5                CPL_2:    .SET   CPL_TOP   
0BF5                CPL_TOP:   .SET   $   
0BF5   44 0B                  DW   negate   ; if signs differ then negate answer
0BF7                          ;*Macro unroll:  cendif
0BF7                          ;*Macro unroll:  cBRANCH_FWD
0BF7                CUR_ADR:   .SET   $   
0BF3                          .ORG   CPL_TOP - 2   
0BF3   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0BF7                          .ORG   CUR_ADR   
0BF7                          ;*Macro unroll:  CPL_POP
0BF7                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BF7                CPL_TOP:   .SET   CPL_2   
0BF7                CPL_2:    .SET   CPL_3   
0BF7                CPL_3:    .SET   CPL_4   
0BF7                CPL_4:    .SET   CPL_5   
0BF7                CPL_5:    .SET   CPL_6   
0BF7                CPL_6:    .SET   CPL_7   
0BF7                CPL_7:    .SET   CPL_8   
0BF7                CPL_8:    .SET   CPL_9   
0BF7                CPL_9:    .SET   CPL_10   
0BF7                CPL_10:   .SET   0   
0BF7                          ;*Macro unroll:  EXIT
0BF7   EF 0D                  DW   exit   
0BF9   C3 D4 07               JP   enter   
0BFC                          ;*Macro unroll: defword "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
0BFC                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
0BFC   D8 0B                  DW   link   
0BFE                LINK:     .SET   HEADER_slashmod   
0BFE   04                     DB   0 + 4   
0BFF   2F 6D 6F 64            DB   "/mod"   
0C03                SLASHMOD:      
0C03   CF                     RST   $08   ; enter forth
0C04   90 06 90 06            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
0C08   C6 05                  DW   xor   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
0C0A   66 03                  DW   zeroless   ; true if high bit still set
0C0C   13 06                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
0C0E   90 06                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
0C10   66 03                  DW   zeroless   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
0C12   13 06                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
0C14   2B 0B 5C 06 2B 0B 5C 06 DW   ABS,swap,ABS,swap   ; remove sign from both args
0C1C   31 05                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
0C1E   5C 06                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
0C20   DF 05                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
0C22                          ;*Macro unroll:  cif
0C22   23 03 00 00            DW   ZBRANCH,0   
0C26                          ;*Macro unroll:  CPL_PUSH $
0C26                CPL_COUNT:   .SET   CPL_COUNT + 1   
0C26                CPL_10:   .SET   CPL_9   
0C26                CPL_9:    .SET   CPL_8   
0C26                CPL_8:    .SET   CPL_7   
0C26                CPL_7:    .SET   CPL_6   
0C26                CPL_6:    .SET   CPL_5   
0C26                CPL_5:    .SET   CPL_4   
0C26                CPL_4:    .SET   CPL_3   
0C26                CPL_3:    .SET   CPL_2   
0C26                CPL_2:    .SET   CPL_TOP   
0C26                CPL_TOP:   .SET   $   
0C26   44 0B                  DW   negate   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
0C28                          ;*Macro unroll:  cendif
0C28                          ;*Macro unroll:  cBRANCH_FWD
0C28                CUR_ADR:   .SET   $   
0C24                          .ORG   CPL_TOP - 2   
0C24   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0C28                          .ORG   CUR_ADR   
0C28                          ;*Macro unroll:  CPL_POP
0C28                CPL_COUNT:   .SET   CPL_COUNT - 1   
0C28                CPL_TOP:   .SET   CPL_2   
0C28                CPL_2:    .SET   CPL_3   
0C28                CPL_3:    .SET   CPL_4   
0C28                CPL_4:    .SET   CPL_5   
0C28                CPL_5:    .SET   CPL_6   
0C28                CPL_6:    .SET   CPL_7   
0C28                CPL_7:    .SET   CPL_8   
0C28                CPL_8:    .SET   CPL_9   
0C28                CPL_9:    .SET   CPL_10   
0C28                CPL_10:   .SET   0   
0C28   13 06                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
0C2A   5C 06                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
0C2C                          ;*Macro unroll:  cif
0C2C   23 03 00 00            DW   ZBRANCH,0   
0C30                          ;*Macro unroll:  CPL_PUSH $
0C30                CPL_COUNT:   .SET   CPL_COUNT + 1   
0C30                CPL_10:   .SET   CPL_9   
0C30                CPL_9:    .SET   CPL_8   
0C30                CPL_8:    .SET   CPL_7   
0C30                CPL_7:    .SET   CPL_6   
0C30                CPL_6:    .SET   CPL_5   
0C30                CPL_5:    .SET   CPL_4   
0C30                CPL_4:    .SET   CPL_3   
0C30                CPL_3:    .SET   CPL_2   
0C30                CPL_2:    .SET   CPL_TOP   
0C30                CPL_TOP:   .SET   $   
0C30   44 0B                  DW   negate   ;     -r q b1 -- -r -q       if signs differ then negate answer
0C32                          ;*Macro unroll:  cendif
0C32                          ;*Macro unroll:  cBRANCH_FWD
0C32                CUR_ADR:   .SET   $   
0C2E                          .ORG   CPL_TOP - 2   
0C2E   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0C32                          .ORG   CUR_ADR   
0C32                          ;*Macro unroll:  CPL_POP
0C32                CPL_COUNT:   .SET   CPL_COUNT - 1   
0C32                CPL_TOP:   .SET   CPL_2   
0C32                CPL_2:    .SET   CPL_3   
0C32                CPL_3:    .SET   CPL_4   
0C32                CPL_4:    .SET   CPL_5   
0C32                CPL_5:    .SET   CPL_6   
0C32                CPL_6:    .SET   CPL_7   
0C32                CPL_7:    .SET   CPL_8   
0C32                CPL_8:    .SET   CPL_9   
0C32                CPL_9:    .SET   CPL_10   
0C32                CPL_10:   .SET   0   
0C32                          ;*Macro unroll:  EXIT
0C32   EF 0D                  DW   exit   
0C34   C3 D4 07               JP   enter   
0C37                          ;*Macro unroll: defword "/",1,0,slash                   ; dvend dvisr -- quot
0C37                HEADER_SLASH:      ; dvend dvisr -- quot
0C37   FC 0B                  DW   link   
0C39                LINK:     .SET   HEADER_slash   
0C39   01                     DB   0 + 1   
0C3A   2F                     DB   "/"   
0C3B                SLASH:       
0C3B   CF                     RST   $08   ; enter forth
0C3C   03 0C                  DW   slashmod   
0C3E   5C 06 7C 06            DW   swap,drop   ; drop remainder
0C42                          ;*Macro unroll:  EXIT
0C42   EF 0D                  DW   exit   
0C44   C3 D4 07               JP   enter   
0C47                          ;*Macro unroll: defword "mod",3,0,mod                   ; dvend dvisr -- remainder
0C47                HEADER_MOD:      ; dvend dvisr -- remainder
0C47   37 0C                  DW   link   
0C49                LINK:     .SET   HEADER_mod   
0C49   03                     DB   0 + 3   
0C4A   6D 6F 64               DB   "mod"   
0C4D                MOD:         
0C4D   CF                     RST   $08   ; enter forth
0C4E   03 0C                  DW   slashmod   
0C50   7C 06                  DW   drop   ; drop quotient
0C52                          ;*Macro unroll:  EXIT
0C52   EF 0D                  DW   exit   
0C54   C3 D4 07               JP   enter   
0C57                             ; 
0C57                             ; 
0C57                             ; flow control
0C57                             ; 
0C57                             ; 
0C57                          ;*Macro unroll: defword "if",2,msk_immed,if
0C57                HEADER_IF:      
0C57   47 0C                  DW   link   
0C59                LINK:     .SET   HEADER_if   
0C59   82                     DB   msk_immed + 2   
0C5A   69 66                  DB   "if"   
0C5C                IF:          
0C5C   CF                     RST   $08   ; enter forth
0C5D   7D 0D                  DW   lbrace   
0C5F   4F 03 23 03 4C 04      DW   lit,zbranch,comma   ; compile 0branch
0C65   83 0F 67 04 48 06 4C 04 DW   here,fetch,dup,comma   ; compile here and also push on stack
0C6D                          ;*Macro unroll:  EXIT
0C6D   EF 0D                  DW   exit   
0C6F   C3 D4 07               JP   enter   
0C72                          ;*Macro unroll: defword "else",4,msk_immed,else
0C72                HEADER_ELSE:      
0C72   57 0C                  DW   link   
0C74                LINK:     .SET   HEADER_else   
0C74   84                     DB   msk_immed + 4   
0C75   65 6C 73 65            DB   "else"   
0C79                ELSE:        
0C79   CF                     RST   $08   ; enter forth
0C7A   4F 03 40 03 4C 04      DW   lit,branch,comma   ; definite branch to just over the false-part
0C80   83 0F 67 04            DW   here,fetch   ; save here on stack
0C84   4F 03 00 00 4C 04      DW   lit,0,comma   ; compile a dummy offset
0C8A   5C 06                  DW   swap   ; now back-fill the original (if) offset
0C8C   A5 0C                  DW   xendif   ; must call xendif not endif
0C8E                          ;*Macro unroll:  EXIT
0C8E   EF 0D                  DW   exit   
0C90   C3 D4 07               JP   enter   
0C93                          ;*Macro unroll: defword "endif",5,msk_immed,endif
0C93                HEADER_ENDIF:      
0C93   72 0C                  DW   link   
0C95                LINK:     .SET   HEADER_endif   
0C95   85                     DB   msk_immed + 5   
0C96   65 6E 64 69 66         DB   "endif"   
0C9B                ENDIF:       
0C9B   CF                     RST   $08   ; enter forth
0C9C   A5 0C                  DW   xendif   ; must call xendif not endif
0C9E   CD 0D                  DW   rbraceExec   
0CA0                          ;*Macro unroll:  EXIT
0CA0   EF 0D                  DW   exit   
0CA2   C3 D4 07               JP   enter   
0CA5                XENDIF:      ; must call xendif not endif
0CA5   CF                     RST   $08   ; enter forth
0CA6   48 06                  DW   dup   
0CA8   83 0F 67 04 5C 06 F8 04 DW   here,fetch,swap,minus   ; calculate the offset from the address saved on the stack
0CB0   5C 06 2B 04            DW   swap,store   ; store the offset in the back-filled location
0CB4                          ;*Macro unroll:  EXIT
0CB4   EF 0D                  DW   exit   
0CB6   C3 D4 07               JP   enter   
0CB9                             ; begin condition while ... repeat
0CB9                          ;*Macro unroll: defword "begin",5,msk_immed,begin
0CB9                HEADER_BEGIN:      
0CB9   93 0C                  DW   link   
0CBB                LINK:     .SET   HEADER_begin   
0CBB   85                     DB   msk_immed + 5   
0CBC   62 65 67 69 6E         DB   "begin"   
0CC1                BEGIN:       
0CC1   CF                     RST   $08   ; enter forth
0CC2   7D 0D                  DW   lbrace   
0CC4   83 0F 67 04            DW   here,fetch   ; save here on stack (here1)
0CC8                          ;*Macro unroll:  EXIT
0CC8   EF 0D                  DW   exit   
0CCA   C3 D4 07               JP   enter   
0CCD                          ;*Macro unroll: defword "while",5,msk_immed,while
0CCD                HEADER_WHILE:      
0CCD   B9 0C                  DW   link   
0CCF                LINK:     .SET   HEADER_while   
0CCF   85                     DB   msk_immed + 5   
0CD0   77 68 69 6C 65         DB   "while"   
0CD5                WHILE:       
0CD5   CF                     RST   $08   ; enter forth
0CD6   4F 03 23 03 4C 04      DW   lit,zbranch,comma   ; compile branch on zero
0CDC   83 0F 67 04            DW   here,fetch   ; save here in stack (here2)
0CE0   4F 03 00 00 4C 04      DW   lit,0,comma   ; compile dummy offset
0CE6                          ;*Macro unroll:  EXIT
0CE6   EF 0D                  DW   exit   
0CE8   C3 D4 07               JP   enter   
0CEB                          ;*Macro unroll: defword "repeat",6,msk_immed,repeat
0CEB                HEADER_REPEAT:      
0CEB   CD 0C                  DW   link   
0CED                LINK:     .SET   HEADER_repeat   
0CED   86                     DB   msk_immed + 6   
0CEE   72 65 70 65 61 74      DB   "repeat"   
0CF4                REPEAT:      
0CF4   CF                     RST   $08   ; enter forth
0CF5   4F 03 40 03 4C 04      DW   lit,branch,comma   ; compile branch
0CFB   5C 06                  DW   swap   ; tos = here1
0CFD   83 0F 67 04 F8 04 4C 04 DW   here,fetch,minus,comma   ; compile offset (here1 - here3)
0D05   48 06                  DW   dup   
0D07   83 0F 67 04 5C 06 F8 04 DW   here,fetch,swap,minus   ; compile offset (here2 - here3)
0D0F   5C 06 2B 04            DW   swap,store   ; save offset in here2
0D13   CD 0D                  DW   rbraceExec   
0D15                          ;*Macro unroll:  EXIT
0D15   EF 0D                  DW   exit   
0D17   C3 D4 07               JP   enter   
0D1A                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
0D1A                             ; to define the name s" using asm80
0D1A                          ;*Macro unroll: defword {"s",$22},2,msk_immed,squote
0D1A                HEADER_SQUOTE:      
0D1A   EB 0C                  DW   link   
0D1C                LINK:     .SET   HEADER_squote   
0D1C   82                     DB   msk_immed + 2   
0D1D   73 22                  DB   "s",$22   
0D1F                SQUOTE:      
0D1F   18 04                  JR   qt   
0D21                          ;*Macro unroll: defword $22,1,msk_immed,qt
0D21                HEADER_QT:      
0D21   1A 0D                  DW   link   
0D23                LINK:     .SET   HEADER_qt   
0D23   81                     DB   msk_immed + 1   
0D24   22                     DB   $22   
0D25                QT:          
0D25   CF                     RST   $08   ; enter forth
0D26   B7 0F 67 04 6C 05      DW   state,fetch,zequal   
0D2C                          ;*Macro unroll:  cIf
0D2C   23 03 00 00            DW   ZBRANCH,0   
0D30                          ;*Macro unroll:  CPL_PUSH $
0D30                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D30                CPL_10:   .SET   CPL_9   
0D30                CPL_9:    .SET   CPL_8   
0D30                CPL_8:    .SET   CPL_7   
0D30                CPL_7:    .SET   CPL_6   
0D30                CPL_6:    .SET   CPL_5   
0D30                CPL_5:    .SET   CPL_4   
0D30                CPL_4:    .SET   CPL_3   
0D30                CPL_3:    .SET   CPL_2   
0D30                CPL_2:    .SET   CPL_TOP   
0D30                CPL_TOP:   .SET   $   
0D30   4F 03 22 00            DW   lit,$22   ; delim
0D34   4F 03 3F 00            DW   lit,63   ; limit 63 + length
0D38   1A 10 67 04            DW   latestStr,fetch   
0D3C   4F 03 CF 20 B6 03      DW   lit,wordBuf,equal   
0D42                          ;*Macro unroll:  cIf
0D42   23 03 00 00            DW   ZBRANCH,0   
0D46                          ;*Macro unroll:  CPL_PUSH $
0D46                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D46                CPL_10:   .SET   CPL_9   
0D46                CPL_9:    .SET   CPL_8   
0D46                CPL_8:    .SET   CPL_7   
0D46                CPL_7:    .SET   CPL_6   
0D46                CPL_6:    .SET   CPL_5   
0D46                CPL_5:    .SET   CPL_4   
0D46                CPL_4:    .SET   CPL_3   
0D46                CPL_3:    .SET   CPL_2   
0D46                CPL_2:    .SET   CPL_TOP   
0D46                CPL_TOP:   .SET   $   
0D46   4F 03 0F 21            DW   lit,wordBuf2   
0D4A                          ;*Macro unroll:  cElse
0D4A   40 03 00 00            DW   BRANCH,0   
0D4E                          ;*Macro unroll:  cBRANCH_FWD
0D4E                CUR_ADR:   .SET   $   
0D44                          .ORG   CPL_TOP - 2   
0D44   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0D4E                          .ORG   CUR_ADR   
0D4E                CPL_TOP:   .SET   $   
0D4E   4F 03 CF 20            DW   lit,wordBuf   
0D52                          ;*Macro unroll:  cEndIf
0D52                          ;*Macro unroll:  cBRANCH_FWD
0D52                CUR_ADR:   .SET   $   
0D4C                          .ORG   CPL_TOP - 2   
0D4C   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0D52                          .ORG   CUR_ADR   
0D52                          ;*Macro unroll:  CPL_POP
0D52                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D52                CPL_TOP:   .SET   CPL_2   
0D52                CPL_2:    .SET   CPL_3   
0D52                CPL_3:    .SET   CPL_4   
0D52                CPL_4:    .SET   CPL_5   
0D52                CPL_5:    .SET   CPL_6   
0D52                CPL_6:    .SET   CPL_7   
0D52                CPL_7:    .SET   CPL_8   
0D52                CPL_8:    .SET   CPL_9   
0D52                CPL_9:    .SET   CPL_10   
0D52                CPL_10:   .SET   0   
0D52   1A 10 2B 04            DW   latestStr,store   ; store here in latestStr
0D56   1A 10 67 04            DW   latestStr,fetch   
0D5A   67 02 01 0B            DW   xword,count   
0D5E                          ;*Macro unroll:  cElse
0D5E   40 03 00 00            DW   BRANCH,0   
0D62                          ;*Macro unroll:  cBRANCH_FWD
0D62                CUR_ADR:   .SET   $   
0D2E                          .ORG   CPL_TOP - 2   
0D2E   34 00                  DW   CUR_ADR - CPL_TOP + 2   
0D62                          .ORG   CUR_ADR   
0D62                CPL_TOP:   .SET   $   
0D62   4F 03 F3 0D 4C 04      DW   lit,litstr,comma   
0D68   4F 03 22 00 CC 0A      DW   lit,$22,word   
0D6E   CD 04 0B 03            DW   cfetch,oneplus   
0D72   1B 0B                  DW   allot   
0D74                          ;*Macro unroll:  cEndif
0D74                          ;*Macro unroll:  cBRANCH_FWD
0D74                CUR_ADR:   .SET   $   
0D60                          .ORG   CPL_TOP - 2   
0D60   14 00                  DW   CUR_ADR - CPL_TOP + 2   
0D74                          .ORG   CUR_ADR   
0D74                          ;*Macro unroll:  CPL_POP
0D74                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D74                CPL_TOP:   .SET   CPL_2   
0D74                CPL_2:    .SET   CPL_3   
0D74                CPL_3:    .SET   CPL_4   
0D74                CPL_4:    .SET   CPL_5   
0D74                CPL_5:    .SET   CPL_6   
0D74                CPL_6:    .SET   CPL_7   
0D74                CPL_7:    .SET   CPL_8   
0D74                CPL_8:    .SET   CPL_9   
0D74                CPL_9:    .SET   CPL_10   
0D74                CPL_10:   .SET   0   
0D74                          ;*Macro unroll:  EXIT
0D74   EF 0D                  DW   exit   
0D76   C3 D4 07               JP   enter   
0D79                             ; 
0D79                             ; non-standard words
0D79                             ; 
0D79                             ; 
0D79                          ;*Macro unroll: defword "{",1,msk_immed,lbrace
0D79                HEADER_LBRACE:      
0D79   21 0D                  DW   link   
0D7B                LINK:     .SET   HEADER_lbrace   
0D7B   81                     DB   msk_immed + 1   
0D7C   7B                     DB   "{"   
0D7D                LBRACE:      
0D7D   CF                     RST   $08   ; enter forth
0D7E   B7 0F 67 04 6C 05      DW   state,fetch,zEqual   
0D84   D1 0F 67 04 6C 05      DW   nesting,fetch,zEqual   
0D8A   95 05                  DW   and   
0D8C                          ;*Macro unroll:  cIf
0D8C   23 03 00 00            DW   ZBRANCH,0   
0D90                          ;*Macro unroll:  CPL_PUSH $
0D90                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D90                CPL_10:   .SET   CPL_9   
0D90                CPL_9:    .SET   CPL_8   
0D90                CPL_8:    .SET   CPL_7   
0D90                CPL_7:    .SET   CPL_6   
0D90                CPL_6:    .SET   CPL_5   
0D90                CPL_5:    .SET   CPL_4   
0D90                CPL_4:    .SET   CPL_3   
0D90                CPL_3:    .SET   CPL_2   
0D90                CPL_2:    .SET   CPL_TOP   
0D90                CPL_TOP:   .SET   $   
0D90   83 0F 67 04            DW   here,fetch   ; TOS = here
0D94   4F 03 CF 00 9F 04      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0D9A                          ;*Macro unroll:  cEndIf
0D9A                          ;*Macro unroll:  cBRANCH_FWD
0D9A                CUR_ADR:   .SET   $   
0D8E                          .ORG   CPL_TOP - 2   
0D8E   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
0D9A                          .ORG   CUR_ADR   
0D9A                          ;*Macro unroll:  CPL_POP
0D9A                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D9A                CPL_TOP:   .SET   CPL_2   
0D9A                CPL_2:    .SET   CPL_3   
0D9A                CPL_3:    .SET   CPL_4   
0D9A                CPL_4:    .SET   CPL_5   
0D9A                CPL_5:    .SET   CPL_6   
0D9A                CPL_6:    .SET   CPL_7   
0D9A                CPL_7:    .SET   CPL_8   
0D9A                CPL_8:    .SET   CPL_9   
0D9A                CPL_9:    .SET   CPL_10   
0D9A                CPL_10:   .SET   0   
0D9A   88 0E                  DW   nestPlus   ; increase nesting
0D9C                          ;*Macro unroll:  EXIT                             ; return from the function.
0D9C   EF 0D                  DW   exit   ; return from the function.
0D9E   C3 D4 07               JP   enter   
0DA1                          ;*Macro unroll: defword "}",1,msk_immed,rbrace
0DA1                HEADER_RBRACE:      
0DA1   79 0D                  DW   link   
0DA3                LINK:     .SET   HEADER_rbrace   
0DA3   81                     DB   msk_immed + 1   
0DA4   7D                     DB   "}"   
0DA5                RBRACE:      
0DA5   CF                     RST   $08   ; enter forth
0DA6   92 0E                  DW   nestMinus   ; reduce nesting
0DA8   B7 0F 67 04 6C 05      DW   state,fetch,zEqual   
0DAE   D1 0F 67 04 6C 05      DW   nesting,fetch,zEqual   
0DB4   95 05                  DW   and   
0DB6                          ;*Macro unroll:  cIf
0DB6   23 03 00 00            DW   ZBRANCH,0   
0DBA                          ;*Macro unroll:  CPL_PUSH $
0DBA                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DBA                CPL_10:   .SET   CPL_9   
0DBA                CPL_9:    .SET   CPL_8   
0DBA                CPL_8:    .SET   CPL_7   
0DBA                CPL_7:    .SET   CPL_6   
0DBA                CPL_6:    .SET   CPL_5   
0DBA                CPL_5:    .SET   CPL_4   
0DBA                CPL_4:    .SET   CPL_3   
0DBA                CPL_3:    .SET   CPL_2   
0DBA                CPL_2:    .SET   CPL_TOP   
0DBA                CPL_TOP:   .SET   $   
0DBA   4F 03 EF 0D 4C 04      DW   lit,exit,comma   ; append exit (so the word will return).
0DC0                          ;*Macro unroll:  cEndIf
0DC0                          ;*Macro unroll:  cBRANCH_FWD
0DC0                CUR_ADR:   .SET   $   
0DB8                          .ORG   CPL_TOP - 2   
0DB8   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0DC0                          .ORG   CUR_ADR   
0DC0                          ;*Macro unroll:  CPL_POP
0DC0                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DC0                CPL_TOP:   .SET   CPL_2   
0DC0                CPL_2:    .SET   CPL_3   
0DC0                CPL_3:    .SET   CPL_4   
0DC0                CPL_4:    .SET   CPL_5   
0DC0                CPL_5:    .SET   CPL_6   
0DC0                CPL_6:    .SET   CPL_7   
0DC0                CPL_7:    .SET   CPL_8   
0DC0                CPL_8:    .SET   CPL_9   
0DC0                CPL_9:    .SET   CPL_10   
0DC0                CPL_10:   .SET   0   
0DC0                          ;*Macro unroll:  EXIT                             ; return from the function.
0DC0   EF 0D                  DW   exit   ; return from the function.
0DC2   C3 D4 07               JP   enter   
0DC5                          ;*Macro unroll: defword "}exec",5,msk_immed,rbraceExec
0DC5                HEADER_RBRACEEXEC:      
0DC5   A1 0D                  DW   link   
0DC7                LINK:     .SET   HEADER_rbraceExec   
0DC7   85                     DB   msk_immed + 5   
0DC8   7D 65 78 65 63         DB   "}exec"   
0DCD                RBRACEEXEC:      
0DCD   CF                     RST   $08   ; enter forth
0DCE   A5 0D                  DW   rbrace   
0DD0   B7 0F 67 04 6C 05      DW   state,fetch,zEqual   
0DD6   D1 0F 67 04 6C 05      DW   nesting,fetch,zEqual   
0DDC   95 05                  DW   and   
0DDE                          ;*Macro unroll:  cIf
0DDE   23 03 00 00            DW   ZBRANCH,0   
0DE2                          ;*Macro unroll:  CPL_PUSH $
0DE2                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DE2                CPL_10:   .SET   CPL_9   
0DE2                CPL_9:    .SET   CPL_8   
0DE2                CPL_8:    .SET   CPL_7   
0DE2                CPL_7:    .SET   CPL_6   
0DE2                CPL_6:    .SET   CPL_5   
0DE2                CPL_5:    .SET   CPL_4   
0DE2                CPL_4:    .SET   CPL_3   
0DE2                CPL_3:    .SET   CPL_2   
0DE2                CPL_2:    .SET   CPL_TOP   
0DE2                CPL_TOP:   .SET   $   
0DE2   48 06                  DW   dup   
0DE4   83 0F 2B 04            DW   here,store   
0DE8   93 02                  DW   execute   
0DEA                          ;*Macro unroll:  cEndIf
0DEA                          ;*Macro unroll:  cBRANCH_FWD
0DEA                CUR_ADR:   .SET   $   
0DE0                          .ORG   CPL_TOP - 2   
0DE0   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0DEA                          .ORG   CUR_ADR   
0DEA                          ;*Macro unroll:  CPL_POP
0DEA                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DEA                CPL_TOP:   .SET   CPL_2   
0DEA                CPL_2:    .SET   CPL_3   
0DEA                CPL_3:    .SET   CPL_4   
0DEA                CPL_4:    .SET   CPL_5   
0DEA                CPL_5:    .SET   CPL_6   
0DEA                CPL_6:    .SET   CPL_7   
0DEA                CPL_7:    .SET   CPL_8   
0DEA                CPL_8:    .SET   CPL_9   
0DEA                CPL_9:    .SET   CPL_10   
0DEA                CPL_10:   .SET   0   
0DEA                          ;*Macro unroll:  EXIT                             ; return from the function.
0DEA   EF 0D                  DW   exit   ; return from the function.
0DEC   C3 D4 07               JP   enter   
0DEF                             ; .include "compiler-words.z80"
0DEF                             ; .include "experimental.z80"
0DEF                             ; 
0DEF                             ; headless words
0DEF                             ; 
0DEF                             ; forth words not in dictionary
0DEF                             ; 
0DEF                EXIT:        
0DEF   E1                     POP   HL   
0DF0   FD E9                  JP   (IY)   
0DF2                EXIT_FORTH:      
0DF2   C9                     RET      
0DF3                LITSTR:      ; pushes ptr to string and length on stack
0DF3   CF                     RST   $08   ; enter forth
0DF4   CD 06                  DW   rfrom   
0DF6   01 0B 90 06 90 06 D8 04 DW   count,over,over,plus   
0DFE   B8 06                  DW   tor   
0E00                          ;*Macro unroll:  EXIT
0E00   EF 0D                  DW   exit   
0E02   C3 D4 07               JP   enter   
0E05                INTERPWORD:      ; ptr len addr --
0E05   CF                     RST   $08   ; enter forth
0E06   5C 06 7C 06 5C 06 7C 06 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0E0E   48 06 4F 03 02 00 D8 04 CD 04 DW   dup,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0E18   4F 03 80 00 95 05      DW   lit,msk_immed,and   ; ( headptr flags -- headptr immedflag )
0E1E   6C 05                  DW   zEqual   
0E20                          ;*Macro unroll:  cif
0E20   23 03 00 00            DW   ZBRANCH,0   
0E24                          ;*Macro unroll:  CPL_PUSH $
0E24                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E24                CPL_10:   .SET   CPL_9   
0E24                CPL_9:    .SET   CPL_8   
0E24                CPL_8:    .SET   CPL_7   
0E24                CPL_7:    .SET   CPL_6   
0E24                CPL_6:    .SET   CPL_5   
0E24                CPL_5:    .SET   CPL_4   
0E24                CPL_4:    .SET   CPL_3   
0E24                CPL_3:    .SET   CPL_2   
0E24                CPL_2:    .SET   CPL_TOP   
0E24                CPL_TOP:   .SET   $   
0E24   E3 0A                  DW   tcfa   ; ( headptr -- xt )
0E26   B7 0F 67 04            DW   state,fetch   
0E2A   D1 0F 67 04            DW   nesting,fetch   
0E2E   AD 05                  DW   or   
0E30                          ;*Macro unroll:  cif
0E30   23 03 00 00            DW   ZBRANCH,0   
0E34                          ;*Macro unroll:  CPL_PUSH $
0E34                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E34                CPL_10:   .SET   CPL_9   
0E34                CPL_9:    .SET   CPL_8   
0E34                CPL_8:    .SET   CPL_7   
0E34                CPL_7:    .SET   CPL_6   
0E34                CPL_6:    .SET   CPL_5   
0E34                CPL_5:    .SET   CPL_4   
0E34                CPL_4:    .SET   CPL_3   
0E34                CPL_3:    .SET   CPL_2   
0E34                CPL_2:    .SET   CPL_TOP   
0E34                CPL_TOP:   .SET   $   
0E34   4C 04                  DW   comma   ; compile xt
0E36                          ;*Macro unroll:  cElse
0E36   40 03 00 00            DW   BRANCH,0   
0E3A                          ;*Macro unroll:  cBRANCH_FWD
0E3A                CUR_ADR:   .SET   $   
0E32                          .ORG   CPL_TOP - 2   
0E32   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E3A                          .ORG   CUR_ADR   
0E3A                CPL_TOP:   .SET   $   
0E3A   93 02                  DW   execute   ; execute xt
0E3C                          ;*Macro unroll:  cendif
0E3C                          ;*Macro unroll:  cBRANCH_FWD
0E3C                CUR_ADR:   .SET   $   
0E38                          .ORG   CPL_TOP - 2   
0E38   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0E3C                          .ORG   CUR_ADR   
0E3C                          ;*Macro unroll:  CPL_POP
0E3C                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E3C                CPL_TOP:   .SET   CPL_2   
0E3C                CPL_2:    .SET   CPL_3   
0E3C                CPL_3:    .SET   CPL_4   
0E3C                CPL_4:    .SET   CPL_5   
0E3C                CPL_5:    .SET   CPL_6   
0E3C                CPL_6:    .SET   CPL_7   
0E3C                CPL_7:    .SET   CPL_8   
0E3C                CPL_8:    .SET   CPL_9   
0E3C                CPL_9:    .SET   CPL_10   
0E3C                CPL_10:   .SET   0   
0E3C                          ;*Macro unroll:  cElse
0E3C   40 03 00 00            DW   BRANCH,0   
0E40                          ;*Macro unroll:  cBRANCH_FWD
0E40                CUR_ADR:   .SET   $   
0E22                          .ORG   CPL_TOP - 2   
0E22   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0E40                          .ORG   CUR_ADR   
0E40                CPL_TOP:   .SET   $   
0E40   E3 0A 93 02            DW   tcfa,execute   ; execute xt
0E44                          ;*Macro unroll:  cendif
0E44                          ;*Macro unroll:  cBRANCH_FWD
0E44                CUR_ADR:   .SET   $   
0E3E                          .ORG   CPL_TOP - 2   
0E3E   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0E44                          .ORG   CUR_ADR   
0E44                          ;*Macro unroll:  CPL_POP
0E44                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E44                CPL_TOP:   .SET   CPL_2   
0E44                CPL_2:    .SET   CPL_3   
0E44                CPL_3:    .SET   CPL_4   
0E44                CPL_4:    .SET   CPL_5   
0E44                CPL_5:    .SET   CPL_6   
0E44                CPL_6:    .SET   CPL_7   
0E44                CPL_7:    .SET   CPL_8   
0E44                CPL_8:    .SET   CPL_9   
0E44                CPL_9:    .SET   CPL_10   
0E44                CPL_10:   .SET   0   
0E44                          ;*Macro unroll:  EXIT
0E44   EF 0D                  DW   exit   
0E46   C3 D4 07               JP   enter   
0E49                INTERPLITERAL:      ; ptr len addr --
0E49   CF                     RST   $08   ; enter forth
0E4A   7C 06                  DW   drop   ; ptr len addr - ptr len
0E4C   A9 02 6C 05            DW   number,zEqual   ; parse to number
0E50                          ;*Macro unroll:  cif
0E50   23 03 00 00            DW   ZBRANCH,0   
0E54                          ;*Macro unroll:  CPL_PUSH $
0E54                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E54                CPL_10:   .SET   CPL_9   
0E54                CPL_9:    .SET   CPL_8   
0E54                CPL_8:    .SET   CPL_7   
0E54                CPL_7:    .SET   CPL_6   
0E54                CPL_6:    .SET   CPL_5   
0E54                CPL_5:    .SET   CPL_4   
0E54                CPL_4:    .SET   CPL_3   
0E54                CPL_3:    .SET   CPL_2   
0E54                CPL_2:    .SET   CPL_TOP   
0E54                CPL_TOP:   .SET   $   
0E54   B7 0F 67 04            DW   state,fetch   
0E58   D1 0F 67 04            DW   nesting,fetch   
0E5C   AD 05                  DW   or   
0E5E                          ;*Macro unroll:  cIf
0E5E   23 03 00 00            DW   ZBRANCH,0   
0E62                          ;*Macro unroll:  CPL_PUSH $
0E62                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E62                CPL_10:   .SET   CPL_9   
0E62                CPL_9:    .SET   CPL_8   
0E62                CPL_8:    .SET   CPL_7   
0E62                CPL_7:    .SET   CPL_6   
0E62                CPL_6:    .SET   CPL_5   
0E62                CPL_5:    .SET   CPL_4   
0E62                CPL_4:    .SET   CPL_3   
0E62                CPL_3:    .SET   CPL_2   
0E62                CPL_2:    .SET   CPL_TOP   
0E62                CPL_TOP:   .SET   $   
0E62   4F 03 4F 03            DW   lit,lit   ; (val -- val "lit" )
0E66   4C 04 4C 04            DW   comma,comma   ; compile "lit" val
0E6A                          ;*Macro unroll:  cEndIf
0E6A                          ;*Macro unroll:  cBRANCH_FWD
0E6A                CUR_ADR:   .SET   $   
0E60                          .ORG   CPL_TOP - 2   
0E60   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0E6A                          .ORG   CUR_ADR   
0E6A                          ;*Macro unroll:  CPL_POP
0E6A                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E6A                CPL_TOP:   .SET   CPL_2   
0E6A                CPL_2:    .SET   CPL_3   
0E6A                CPL_3:    .SET   CPL_4   
0E6A                CPL_4:    .SET   CPL_5   
0E6A                CPL_5:    .SET   CPL_6   
0E6A                CPL_6:    .SET   CPL_7   
0E6A                CPL_7:    .SET   CPL_8   
0E6A                CPL_8:    .SET   CPL_9   
0E6A                CPL_9:    .SET   CPL_10   
0E6A                CPL_10:   .SET   0   
0E6A                          ;*Macro unroll:  cElse
0E6A   40 03 00 00            DW   BRANCH,0   
0E6E                          ;*Macro unroll:  cBRANCH_FWD
0E6E                CUR_ADR:   .SET   $   
0E52                          .ORG   CPL_TOP - 2   
0E52   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
0E6E                          .ORG   CUR_ADR   
0E6E                CPL_TOP:   .SET   $   
0E6E   7C 06                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0E70   F3 0D                  DW   litstr   ; err != 0, parse error
0E72   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0E81   F8 06                  DW   type   
0E83                          ;*Macro unroll:  cEndIf
0E83                          ;*Macro unroll:  cBRANCH_FWD
0E83                CUR_ADR:   .SET   $   
0E6C                          .ORG   CPL_TOP - 2   
0E6C   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0E83                          .ORG   CUR_ADR   
0E83                          ;*Macro unroll:  CPL_POP
0E83                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E83                CPL_TOP:   .SET   CPL_2   
0E83                CPL_2:    .SET   CPL_3   
0E83                CPL_3:    .SET   CPL_4   
0E83                CPL_4:    .SET   CPL_5   
0E83                CPL_5:    .SET   CPL_6   
0E83                CPL_6:    .SET   CPL_7   
0E83                CPL_7:    .SET   CPL_8   
0E83                CPL_8:    .SET   CPL_9   
0E83                CPL_9:    .SET   CPL_10   
0E83                CPL_10:   .SET   0   
0E83                          ;*Macro unroll:  EXIT
0E83   EF 0D                  DW   exit   
0E85   C3 D4 07               JP   enter   
0E88                NESTPLUS:      
0E88   2A 59 22               LD   HL,(VAR_NESTING)   
0E8B   23                     INC   HL   
0E8C   22 59 22               LD   (VAR_NESTING),HL   
0E8F                          ;*Macro unroll:  NEXT
0E8F   C3 D4 07               JP   enter   
0E92                NESTMINUS:      
0E92   2A 59 22               LD   HL,(VAR_NESTING)   
0E95   2B                     DEC   HL   
0E96   22 59 22               LD   (VAR_NESTING),HL   
0E99                          ;*Macro unroll:  NEXT
0E99   C3 D4 07               JP   enter   
0E9C                DODOES:      ; -- a-addr
0E9C                          ;*Macro unroll:  ppush0 B,C
0E9C   DD 71 00               LD   (IX+0),C   
0E9F   DD 23                  INC   IX   
0EA1   DD 70 00               LD   (IX+0),B   
0EA4   DD 23                  INC   IX   
0EA6   E1                     POP   HL   ; parameter field address
0EA7   C1                     POP   BC   
0EA8   E5                     PUSH   HL   
0EA9                          ;*Macro unroll:  NEXT
0EA9   C3 D4 07               JP   enter   
0EAC                XDOES:       ; --
0EAC   CF                     RST   $08   ; enter forth
0EAD   CD 06                  DW   rfrom   
0EAF   33 10 67 04 E3 0A      DW   latest,fetch,tcfa   
0EB5   4F 03 CD 00            DW   lit,call_opcode   
0EB9   90 06 80 04            DW   over,cstore   
0EBD   0B 03 2B 04            DW   oneplus,store   
0EC1                          ;*Macro unroll:  EXIT
0EC1   EF 0D                  DW   exit   
0EC3   C3 D4 07               JP   enter   
0EC6                             ; .include "extra-primitives.z80"
0EC6                             ; .include "extra-utilities.z80"
0EC6                             ; .include "extra-words.z80"
0EC6                             ; 
0EC6                             ; constant words
0EC6                             ; 
0EC6                             ; 
0EC6                          ;*Macro unroll: defconst "version",7,0,version,1
0EC6                          ;*Macro unroll: defword "version",7,0,version
0EC6                HEADER_VERSION:      
0EC6   C5 0D                  DW   link   
0EC8                LINK:     .SET   HEADER_version   
0EC8   07                     DB   0 + 7   
0EC9   76 65 72 73 69 6F 6E   DB   "version"   
0ED0                VERSION:      
0ED0                          ;*Macro unroll:  ppush0 B,C
0ED0   DD 71 00               LD   (IX+0),C   
0ED3   DD 23                  INC   IX   
0ED5   DD 70 00               LD   (IX+0),B   
0ED8   DD 23                  INC   IX   
0EDA   01 01 00               LD   BC,1   
0EDD                          ;*Macro unroll:  NEXT
0EDD   C3 D4 07               JP   enter   
0EE0                          ;*Macro unroll: defconst "r0",2,0,rz, ret_stack
0EE0                          ;*Macro unroll: defword "r0",2,0,rz
0EE0                HEADER_RZ:      
0EE0   C6 0E                  DW   link   
0EE2                LINK:     .SET   HEADER_rz   
0EE2   02                     DB   0 + 2   
0EE3   72 30                  DB   "r0"   
0EE5                RZ:          
0EE5                          ;*Macro unroll:  ppush0 B,C
0EE5   DD 71 00               LD   (IX+0),C   
0EE8   DD 23                  INC   IX   
0EEA   DD 70 00               LD   (IX+0),B   
0EED   DD 23                  INC   IX   
0EEF   01 00 00               LD   BC,ret_stack   
0EF2                          ;*Macro unroll:  NEXT
0EF2   C3 D4 07               JP   enter   
0EF5                          ;*Macro unroll: defconst "msk_immed",9,0,__msk_immed,msk_immed
0EF5                          ;*Macro unroll: defword "msk_immed",9,0,__msk_immed
0EF5                HEADER___MSK_IMMED:      
0EF5   E0 0E                  DW   link   
0EF7                LINK:     .SET   HEADER___msk_immed   
0EF7   09                     DB   0 + 9   
0EF8   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
0F01                __MSK_IMMED:      
0F01                          ;*Macro unroll:  ppush0 B,C
0F01   DD 71 00               LD   (IX+0),C   
0F04   DD 23                  INC   IX   
0F06   DD 70 00               LD   (IX+0),B   
0F09   DD 23                  INC   IX   
0F0B   01 80 00               LD   BC,msk_immed   
0F0E                          ;*Macro unroll:  NEXT
0F0E   C3 D4 07               JP   enter   
0F11                          ;*Macro unroll: defconst "msk_hidden",10,0,__msk_hidden,msk_hidden
0F11                          ;*Macro unroll: defword "msk_hidden",10,0,__msk_hidden
0F11                HEADER___MSK_HIDDEN:      
0F11   F5 0E                  DW   link   
0F13                LINK:     .SET   HEADER___msk_hidden   
0F13   0A                     DB   0 + 10   
0F14   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
0F1E                __MSK_HIDDEN:      
0F1E                          ;*Macro unroll:  ppush0 B,C
0F1E   DD 71 00               LD   (IX+0),C   
0F21   DD 23                  INC   IX   
0F23   DD 70 00               LD   (IX+0),B   
0F26   DD 23                  INC   IX   
0F28   01 40 00               LD   BC,msk_hidden   
0F2B                          ;*Macro unroll:  NEXT
0F2B   C3 D4 07               JP   enter   
0F2E                          ;*Macro unroll: defconst "msk_length",10,0,__msk_length,msk_length
0F2E                          ;*Macro unroll: defword "msk_length",10,0,__msk_length
0F2E                HEADER___MSK_LENGTH:      
0F2E   11 0F                  DW   link   
0F30                LINK:     .SET   HEADER___msk_length   
0F30   0A                     DB   0 + 10   
0F31   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
0F3B                __MSK_LENGTH:      
0F3B                          ;*Macro unroll:  ppush0 B,C
0F3B   DD 71 00               LD   (IX+0),C   
0F3E   DD 23                  INC   IX   
0F40   DD 70 00               LD   (IX+0),B   
0F43   DD 23                  INC   IX   
0F45   01 3F 00               LD   BC,msk_length   
0F48                          ;*Macro unroll:  NEXT
0F48   C3 D4 07               JP   enter   
0F4B                             ; 
0F4B                             ; variable words
0F4B                             ; 
0F4B                             ; "latest" must be the last word defined
0F4B                             ; 
0F4B                          ;*Macro unroll: defvar "framePtr", 8, 0, framePtr, var_framePtr
0F4B                          ;*Macro unroll: defword "framePtr",8,0,framePtr
0F4B                HEADER_FRAMEPTR:      
0F4B   2E 0F                  DW   link   
0F4D                LINK:     .SET   HEADER_framePtr   
0F4D   08                     DB   0 + 8   
0F4E   66 72 61 6D 65 50 74 72 DB   "framePtr"   
0F56                FRAMEPTR:      
0F56                          ;*Macro unroll:  ppush0 B,C
0F56   DD 71 00               LD   (IX+0),C   
0F59   DD 23                  INC   IX   
0F5B   DD 70 00               LD   (IX+0),B   
0F5E   DD 23                  INC   IX   
0F60   01 D1 21               LD   BC,var_framePtr   
0F63                          ;*Macro unroll:  NEXT
0F63   C3 D4 07               JP   enter   
0F66                          ;*Macro unroll: defvar "pad", 3, 0, pad, var_pad
0F66                          ;*Macro unroll: defword "pad",3,0,pad
0F66                HEADER_PAD:      
0F66   4B 0F                  DW   link   
0F68                LINK:     .SET   HEADER_pad   
0F68   03                     DB   0 + 3   
0F69   70 61 64               DB   "pad"   
0F6C                PAD:         
0F6C                          ;*Macro unroll:  ppush0 B,C
0F6C   DD 71 00               LD   (IX+0),C   
0F6F   DD 23                  INC   IX   
0F71   DD 70 00               LD   (IX+0),B   
0F74   DD 23                  INC   IX   
0F76   01 D3 21               LD   BC,var_pad   
0F79                          ;*Macro unroll:  NEXT
0F79   C3 D4 07               JP   enter   
0F7C                          ;*Macro unroll: defvar "here", 4, 0, here, var_here
0F7C                          ;*Macro unroll: defword "here",4,0,here
0F7C                HEADER_HERE:      
0F7C   66 0F                  DW   link   
0F7E                LINK:     .SET   HEADER_here   
0F7E   04                     DB   0 + 4   
0F7F   68 65 72 65            DB   "here"   
0F83                HERE:        
0F83                          ;*Macro unroll:  ppush0 B,C
0F83   DD 71 00               LD   (IX+0),C   
0F86   DD 23                  INC   IX   
0F88   DD 70 00               LD   (IX+0),B   
0F8B   DD 23                  INC   IX   
0F8D   01 53 22               LD   BC,var_here   
0F90                          ;*Macro unroll:  NEXT
0F90   C3 D4 07               JP   enter   
0F93                          ;*Macro unroll: defvar "intp_stop", 9, 0, intp_stop, var_intp_stop
0F93                          ;*Macro unroll: defword "intp_stop",9,0,intp_stop
0F93                HEADER_INTP_STOP:      
0F93   7C 0F                  DW   link   
0F95                LINK:     .SET   HEADER_intp_stop   
0F95   09                     DB   0 + 9   
0F96   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
0F9F                INTP_STOP:      
0F9F                          ;*Macro unroll:  ppush0 B,C
0F9F   DD 71 00               LD   (IX+0),C   
0FA2   DD 23                  INC   IX   
0FA4   DD 70 00               LD   (IX+0),B   
0FA7   DD 23                  INC   IX   
0FA9   01 55 22               LD   BC,var_intp_stop   
0FAC                          ;*Macro unroll:  NEXT
0FAC   C3 D4 07               JP   enter   
0FAF                          ;*Macro unroll: defvar "state",5,0,state, var_state
0FAF                          ;*Macro unroll: defword "state",5,0,state
0FAF                HEADER_STATE:      
0FAF   93 0F                  DW   link   
0FB1                LINK:     .SET   HEADER_state   
0FB1   05                     DB   0 + 5   
0FB2   73 74 61 74 65         DB   "state"   
0FB7                STATE:       
0FB7                          ;*Macro unroll:  ppush0 B,C
0FB7   DD 71 00               LD   (IX+0),C   
0FBA   DD 23                  INC   IX   
0FBC   DD 70 00               LD   (IX+0),B   
0FBF   DD 23                  INC   IX   
0FC1   01 57 22               LD   BC,var_state   
0FC4                          ;*Macro unroll:  NEXT
0FC4   C3 D4 07               JP   enter   
0FC7                          ;*Macro unroll: defvar "nesting",7,0,nesting, var_nesting
0FC7                          ;*Macro unroll: defword "nesting",7,0,nesting
0FC7                HEADER_NESTING:      
0FC7   AF 0F                  DW   link   
0FC9                LINK:     .SET   HEADER_nesting   
0FC9   07                     DB   0 + 7   
0FCA   6E 65 73 74 69 6E 67   DB   "nesting"   
0FD1                NESTING:      
0FD1                          ;*Macro unroll:  ppush0 B,C
0FD1   DD 71 00               LD   (IX+0),C   
0FD4   DD 23                  INC   IX   
0FD6   DD 70 00               LD   (IX+0),B   
0FD9   DD 23                  INC   IX   
0FDB   01 59 22               LD   BC,var_nesting   
0FDE                          ;*Macro unroll:  NEXT
0FDE   C3 D4 07               JP   enter   
0FE1                          ;*Macro unroll: defvar "sp0",3,0,sp0, var_sp0
0FE1                          ;*Macro unroll: defword "sp0",3,0,sp0
0FE1                HEADER_SP0:      
0FE1   C7 0F                  DW   link   
0FE3                LINK:     .SET   HEADER_sp0   
0FE3   03                     DB   0 + 3   
0FE4   73 70 30               DB   "sp0"   
0FE7                SP0:         
0FE7                          ;*Macro unroll:  ppush0 B,C
0FE7   DD 71 00               LD   (IX+0),C   
0FEA   DD 23                  INC   IX   
0FEC   DD 70 00               LD   (IX+0),B   
0FEF   DD 23                  INC   IX   
0FF1   01 5B 22               LD   BC,var_sp0   
0FF4                          ;*Macro unroll:  NEXT
0FF4   C3 D4 07               JP   enter   
0FF7                          ;*Macro unroll: defvar "base",4,0,base, var_base
0FF7                          ;*Macro unroll: defword "base",4,0,base
0FF7                HEADER_BASE:      
0FF7   E1 0F                  DW   link   
0FF9                LINK:     .SET   HEADER_base   
0FF9   04                     DB   0 + 4   
0FFA   62 61 73 65            DB   "base"   
0FFE                BASE:        
0FFE                          ;*Macro unroll:  ppush0 B,C
0FFE   DD 71 00               LD   (IX+0),C   
1001   DD 23                  INC   IX   
1003   DD 70 00               LD   (IX+0),B   
1006   DD 23                  INC   IX   
1008   01 5D 22               LD   BC,var_base   
100B                          ;*Macro unroll:  NEXT
100B   C3 D4 07               JP   enter   
100E                          ;*Macro unroll: defvar "latestStr",6,0,latestStr, var_latest_str
100E                          ;*Macro unroll: defword "latestStr",6,0,latestStr
100E                HEADER_LATESTSTR:      
100E   F7 0F                  DW   link   
1010                LINK:     .SET   HEADER_latestStr   
1010   06                     DB   0 + 6   
1011   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
101A                LATESTSTR:      
101A                          ;*Macro unroll:  ppush0 B,C
101A   DD 71 00               LD   (IX+0),C   
101D   DD 23                  INC   IX   
101F   DD 70 00               LD   (IX+0),B   
1022   DD 23                  INC   IX   
1024   01 5F 22               LD   BC,var_latest_str   
1027                          ;*Macro unroll:  NEXT
1027   C3 D4 07               JP   enter   
102A                          ;*Macro unroll: defvar "latest",6,0,latest, var_latest
102A                          ;*Macro unroll: defword "latest",6,0,latest
102A                HEADER_LATEST:      
102A   0E 10                  DW   link   
102C                LINK:     .SET   HEADER_latest   
102C   06                     DB   0 + 6   
102D   6C 61 74 65 73 74      DB   "latest"   
1033                LATEST:      
1033                          ;*Macro unroll:  ppush0 B,C
1033   DD 71 00               LD   (IX+0),C   
1036   DD 23                  INC   IX   
1038   DD 70 00               LD   (IX+0),B   
103B   DD 23                  INC   IX   
103D   01 61 22               LD   BC,var_latest   
1040                          ;*Macro unroll:  NEXT
1040   C3 D4 07               JP   enter   
1043                START:       
1043   31 00 00               LD   SP,RET_STACK   ; Initialise the return stack.
1046   CD 67 00               CALL   initSerial   
1049   CD 96 07               CALL   initForth   
104C                          IF   TESTMODE   
                              JP   TESTS_START   
104C                          ELSE      
104C                          ;*Macro unroll:  PRINT_STR TXT_MONITOR_INTRO
104C                          ;*Macro unroll:  ppush0 D,E
104C   DD 73 00               LD   (IX+0),E   
104F   DD 23                  INC   IX   
1051   DD 72 00               LD   (IX+0),D   
1054   DD 23                  INC   IX   
1056   11 2B 02               LD   DE,TXT_MONITOR_INTRO   
1059   CD F5 01               CALL   printPStr   
105C                          ;*Macro unroll:  ppop0 D,E
105C   DD 2B                  DEC   IX   
105E   DD 56 00               LD   D,(IX+0)   
1061   DD 2B                  DEC   IX   
1063   DD 5E 00               LD   E,(IX+0)   
1066   C3 56 02               JP   QUIT   
1069                          ENDIF      
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
                    TESTS_START:      
                                 ; 
                                 ; test-macros
                                 ; 
                                 ; macros to facilitate tests
                                 ; 
                    .macro TEST_SET_TEXT,s1
                                 ; 
                     ld HL, (lineBufStart)
                     ld (lineBufTop),HL
                     ld (currkey),HL
                     ld HL, tst_text%%M
                     ld (char_pointer), HL
                     _skip
                    tst_text%%M:
                     db s1,"\r\n",-1,"\r\n"
                     _endskip
                    .endm
                     
                                 ; prevents using _if macro here
                    .macro EXPECT,expect,failtxt
                                 ; 
                     call printNum
                     loadWord H,L, B,C
                     ld L, C
                     ppop0 B,C
                     CMP16 expect
                     jp z, tf_done%%M            ; asm80 macro nesting issue
                     ld DE, FAILED
                     call printPStr
                     ld DE, te_fail%%M
                     call printPStr
                     halt
                     _skip
                    te_fail%%M:
                     .pstr failtxt
                     _endskip
                    tf_done%%M:
                    .endm
                     
2000                          ENDIF      
2000                          IF   TESTMODE = 1   
                                 ; 
                                 ; tests
                                 ; 
                                 ; these tests will evaluate when TESTMODE = 1
                                 ; 
                              ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2061   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2061:      
                              DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "100 const y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2063   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2063:      
                              DB   "100 const y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2065   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2065:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "expect 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2067   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2067   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2067:      
                              .PSTR   "100 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2067:      
                              ;*Macro unroll: TEST_SET_TEXT "100 constant y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2068   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2068:      
                              DB   "100 constant y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2070   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2070:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "expect 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2072   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2072   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2072:      
                              .PSTR   "100 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2072:      
                              ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2073   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2073:      
                              DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "x y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2075   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2075:      
                              DB   "x y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2077   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2077:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2079   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2079:      
                              DB   ": const create does> , ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "23 const x"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2081   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2081:      
                              DB   "23 const x","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "x ."
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2083   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2083:      
                              DB   "x .","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "23 constant y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2085   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2085:      
                              DB   "23 constant y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2087   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2087:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 23, "expect 23"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 23
                              LD   DE,23   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2089   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2089   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2089:      
                              .PSTR   "23 23"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2089:      
                              ;*Macro unroll: ppushValue 1
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,1   
                              ;*Macro unroll: TEST_SET_TEXT "dup"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2091   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2091:      
                              DB   "dup","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 1, "1 interpret dup"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 1
                              LD   DE,1   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2093   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2093   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2093:      
                              .PSTR   "1 interpret dup"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2093:      
                              ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 1
                              LD   DE,1   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2094   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2094   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2094:      
                              .PSTR   "1 interpret dup 2"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2094:      
                              ;*Macro unroll: TEST_SET_TEXT "123"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2095   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2095:      
                              DB   "123","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 123, "interpret 123"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 123
                              LD   DE,123   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2097   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2097   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2097:      
                              .PSTR   "interpret 123"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2097:      
                              ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2098   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2098:      
                              DB   "123 constant x123","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "x123"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2100   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2100:      
                              DB   "x123","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 123, "constant x123 = 123"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 123
                              LD   DE,123   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2102   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2102   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2102:      
                              .PSTR   "constant x123 = 123"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2102:      
                              ;*Macro unroll: TEST_SET_TEXT "variable v1"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2103   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2103:      
                              DB   "variable v1","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 123
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,123   
                              ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2106   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2106:      
                              DB   "123 v1 !","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "v1 @"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2108   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2108:      
                              DB   "v1 @","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 123, "variable v1 = 123"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 123
                              LD   DE,123   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2110   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2110   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2110:      
                              .PSTR   "variable v1 = 123"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2110:      
                              ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2111   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2111:      
                              DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 2
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,2   
                              ;*Macro unroll: TEST_SET_TEXT "dbl"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2114   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2114:      
                              DB   "dbl","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 4
                              LD   DE,4   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2116   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2116   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2116:      
                              .PSTR   "colon dbl 2 = 4"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2116:      
                              ;*Macro unroll: ppushValue 200
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,200   
                              ;*Macro unroll: ppushValue 1
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,1   
                              ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2119   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2119:      
                              DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "testif2"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2121   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2121:      
                              DB   "testif2","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2123   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2123   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2123:      
                              .PSTR   "1 if 100 endif --> 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2123:      
                              ;*Macro unroll: ppushValue 0
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,0   
                              ;*Macro unroll: TEST_SET_TEXT "testif2"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2125   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2125:      
                              DB   "testif2","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 200
                              LD   DE,200   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2127   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2127   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2127:      
                              .PSTR   "0 if 100 endif --> 200"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2127:      
                              ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2128   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2128:      
                              DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 0
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,0   
                              ;*Macro unroll: TEST_SET_TEXT "testif3"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2131   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2131:      
                              DB   "testif3","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 200, "0 --> 200"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 200
                              LD   DE,200   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2133   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2133   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2133:      
                              .PSTR   "0 --> 200"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2133:      
                              ;*Macro unroll: ppushValue 1
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,1   
                              ;*Macro unroll: TEST_SET_TEXT "testif3"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2135   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2135:      
                              DB   "testif3","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "1 --> 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2137   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2137   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2137:      
                              .PSTR   "1 --> 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2137:      
                              ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2138   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2138:      
                              DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 0
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,0   
                              ;*Macro unroll: TEST_SET_TEXT "testloop"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2141   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2141:      
                              DB   "testloop","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 5
                              LD   DE,5   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2143   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2143   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2143:      
                              .PSTR   "Loop until limit < 5"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2143:      
                              ;*Macro unroll: TEST_SET_TEXT "100"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2144   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2144:      
                              DB   "100","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "interpret parse 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2146   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2146   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2146:      
                              .PSTR   "interpret parse 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2146:      
                              ;*Macro unroll: TEST_SET_TEXT "3 2 +"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2147   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2147:      
                              DB   "3 2 +","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 5
                              LD   DE,5   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2149   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2149   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2149:      
                              .PSTR   "3 + 2 = 5"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2149:      
                              ;*Macro unroll: TEST_SET_TEXT ": add + ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2150   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2150:      
                              DB   ": add + ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 2
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,2   
                              ;*Macro unroll: ppushValue 2
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,2   
                              ;*Macro unroll: TEST_SET_TEXT "add"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2154   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2154:      
                              DB   "add","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 4, "2 2 add = 4"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 4
                              LD   DE,4   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2156   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2156   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2156:      
                              .PSTR   "2 2 add = 4"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2156:      
                              ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2157   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2157:      
                              DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "dump"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2159   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2159:      
                              DB   "dump","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2161   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2161:      
                              DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "str type"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2163   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2163:      
                              DB   "str type","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "str"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2165   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2165:      
                              DB   "str","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 3, "str len = 3"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 3
                              LD   DE,3   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2167   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2167   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2167:      
                              .PSTR   "str len = 3"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2167:      
                              ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2168   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2168:      
                              DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "dup"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2170   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2170:      
                              DB   "dup","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 3, "str len = 3"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 3
                              LD   DE,3   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2172   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2172   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2172:      
                              .PSTR   "str len = 3"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2172:      
                              ;*Macro unroll: TEST_SET_TEXT "type"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2173   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2173:      
                              DB   "type","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                                 ; 
                                 ; ld HL, 12
                                 ; ld C, 10
                                 ; call divideWordByByte
                                 ; ld B, 0
                                 ; ld C, A
                                 ; EXPECT 2, "div 11 / 10 = 1 1"
                                 ; TEST_SET_TEXT "hello\r\n"
                                 ; call KEY
                                 ; EXPECT $68, "key 'h'"
                                 ; call KEY
                                 ; EXPECT $65, "key 'e'"
                                 ; TEST_SET_TEXT "x"
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 1, "word 'x'"
                                 ; ppop H,L   ; drop
                                 ; TEST_SET_TEXT "xyz"
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 3, "word 'xyz'"
                                 ; ppop H,L   ; drop
                                 ; TEST_SET_TEXT "a xyz "
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 1, "word 'a xyz'"
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 3, "word 'a xyz'"
                                 ; ppop H,L   ; drop
                                 ; call HERE
                                 ; call FETCH
                                 ; EXPECT START_USER, "here"
                                 ; TEST_SET_TEXT "xyz"
                                 ; call CREATE
                                 ; call LATEST
                                 ; call FETCH
                                 ; EXPECT START_USER, "create xyz latest"
                                 ; call HERE
                                 ; call FETCH
                                 ; EXPECT START_USER + 6, "create xyz here"
                                 ; ppushValue 1
                                 ; ppushValue 2
                                 ; call DUP
                                 ; EXPECT 2, "dup 2"
                                 ; EXPECT 2, "dup 2"
                                 ; ppushValue -10
                                 ; ppushValue 10
                                 ; call STAR
                                 ; EXPECT -100, "expect -10 * 10 to be -100"
                                 ; ppushValue -10
                                 ; ppushValue -20
                                 ; call STAR
                                 ; EXPECT 200, "expect -10 * -20 to be 200"
                                 ; ppushValue 10
                                 ; ppushValue -20
                                 ; call STAR
                                 ; EXPECT -200, "expect -10 * -20 to be 200"
                                 ; ppushValue -101
                                 ; ppushValue 20
                                 ; call SLASHMOD
                                 ; EXPECT -5, "expect -101 / 20 to be -5"
                                 ; EXPECT -1, "expect -101 % 20 to be -1"
                                 ; ppushValue -101
                                 ; ppushValue -20
                                 ; call SLASHMOD
                                 ; EXPECT 5,  "expect -101 / -20 to be 5"
                                 ; EXPECT -1, "expect -101 % -20 to be -1"
                                 ; ppushValue 101
                                 ; ppushValue -20
                                 ; call SLASHMOD
                                 ; EXPECT -5,  "expect 101 / -20 to be -5"
                                 ; EXPECT 1, "expect 101 % -20 to be 1"
                                 ; TEST_SET_TEXT ": testif2 if 100 endif ;"
                                 ; ppushValue 0
                                 ; TEST_SET_TEXT "testloop"
                                 ; call INTERPRET
                                 ; EXPECT 5, "Loop until limit < 5"
                                 ; ppushPText "xyz"
                                 ; call COUNT
                                 ; EXPECT 3, "xyz length 3"
                                 ; call CFETCH
                                 ; EXPECT "x" + 0, "xyz --> x"
                                 ; ppushValue HEADER_LATEST
                                 ; call TCFA
                                 ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
                                 ; ppushValue 1
                                 ; ppushValue 2
                                 ; ppushValue HEADER_PLUS
                                 ; call TCFA
                                 ; call EXECUTE
                                 ; EXPECT 3, "1 2 plus = 3"
                                 ; ppushText "100",3
                                 ; call NUMBER
                                 ; EXPECT 0, "0 = no parse err"
                                 ; EXPECT 100, "parse 100"
                                 ; ppushText "latest",6
                                 ; call FIND
                                 ; EXPECT HEADER_LATEST, "find header of LATEST"
                                 ; TEST_SET_TEXT "base"
                                 ; rst $08
                                 ; dw interpret
                                 ; dw exit_forth
                                 ; call FETCH
                                 ; EXPECT 10, "expect base to be 10"
                                 ; ppushText "add",3
                                 ; call FIND
                                 ; ppushValue 64
                                 ; TEST_SET_TEXT "decimal"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "#h 100"
                                 ; INTERPRET
                                 ; EXPECT $100, "expect hex $100"
                                 ; TEST_SET_TEXT "hex"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "#d 100"
                                 ; INTERPRET
                                 ; EXPECT 100, "expect decimal 100"
                                 ; TEST_SET_TEXT "decimal"
                                 ; INTERPRET
                              ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2299   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2299:      
                              DB   "16 base ! 20","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 32
                              LD   DE,32   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2301   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2301   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2301:      
                              .PSTR   "32 $20 to be 32"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2301:      
                              ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2302   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2302:      
                              DB   "0A base ! 20","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 20
                              LD   DE,20   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2304   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2304   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2304:      
                              .PSTR   "20 decimal 20 to be 32"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2304:      
                              ;*Macro unroll: TEST_SET_TEXT "100 100 +"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2305   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2305:      
                              DB   "100 100 +","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 200, "100 100 + = 200"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 200
                              LD   DE,200   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2307   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2307   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2307:      
                              .PSTR   "100 100 + = 200"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2307:      
                              ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2308   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2308:      
                              DB   "100 10 + .","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "-10 abs"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2310   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2310:      
                              DB   "-10 abs","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 10
                              LD   DE,10   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2312   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2312   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2312:      
                              .PSTR   "10 abs -10 to be 10"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2312:      
                              ;*Macro unroll: TEST_SET_TEXT "10 abs"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2313   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2313:      
                              DB   "10 abs","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 10
                              LD   DE,10   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2315   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2315   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2315:      
                              .PSTR   "10 abs 10 to be 10"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2315:      
                                 ; TEST_SET_TEXT "100 buffer: xvar"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "xvar pack"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "xvar count dup"
                                 ; INTERPRET
                                 ; EXPECT 3, "str len = 3"
                                 ; TEST_SET_TEXT "type"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
                                 ; INTERPRET
                                 ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "x1"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
                                 ; INTERPRET
                                 ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
                                 ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
                                 ; INTERPRET
                                 ; EXPECT 200, "select"
                                 ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
                                 ; INTERPRET
                                 ; EXPECT 5, "Loop until limit < 5"
                                 ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "0 q"
                                 ; INTERPRET
                                 ; EXPECT 200, "define: q 0 = 200"
                                 ; TEST_SET_TEXT "1 q"
                                 ; INTERPRET
                                 ; EXPECT 100, "define: q 1 = 100"
                                 ; rst $08
                                 ; dw litstr
                                 ; .pstr "Expected parse error"
                                 ; dw type
                                 ; dw exit_forth
                                 ; ppushValue 999
                                 ; TEST_SET_TEXT "$$123"
                                 ; INTERPRET
                                 ; EXPECT 999, "interpret $$123"
2000                          ENDIF      
2000                          IF   TESTMODE = 2   
2000                          ENDIF      
2000                          IF   TESTMODE   
                              ;*Macro unroll:  PRINT_STR DONE
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,DONE   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              HALT      
2000                          ENDIF      
2000                             ; 
2000                             ; variables
2000                             ; 
2000                             ; storage locations declared in RAM
2000                             ; 
2000                SERBUF:   DS   SER_BUFSIZE   
203F   00 00        SERINPTR:   DW   0   
2041   00 00        SERRDPTR:   DW   0   
2043   00 00        SERBUFUSED:   DW   0   
2045   00 00        LINEBUFSTART:   DW   0   
2047   00 00        LINEBUFSIZE:   DW   0   
2049   00 00        CURRKEY:   DW   0   
204B   00 00        LINEBUFTOP:   DW   0   
204D                LINEBUF:   DS   LINE_BUFSIZE   
20CD                             ; A static lineBuf TOKEN fills.  Subsequent calls
20CD                             ; overwrite this lineBuf.  Maximum word length is 32 chars.
20CD   00 00        EXITADDR:   DW   0   
20CF                WORDBUF:   DS   64   
210F                WORDBUF2:   DS   64   
214F                DATA_STACK:   DS   DATA_STACK_SIZE   
21CF   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
21D1   00 00        VAR_FRAMEPTR:   DW   0   
21D3                VAR_PAD:   DS   PAD_SIZE   
2253   00 00        VAR_HERE:   DW   0   
2255   00 00        VAR_INTP_STOP:   DW   0   
2257   00 00        VAR_STATE:   DW   0   
2259   00 00        VAR_NESTING:   DW   0   
225B   00 00        VAR_SP0:   DW   0   ;PAR_STACK
225D   00 00        VAR_BASE:   DW   0   
225F   00 00        VAR_LATEST_STR:   DW   0   
2261   00 00        VAR_LATEST:   DW   0   
2263                          IF   TESTMODE   
                                 ; used for mocking getc
                    CHAR_POINTER:   DW   0   
2263                          ENDIF      
2263                START_USER:      ; user allocated data starts here


TESTMODE:           0000 DEFINED AT LINE 3
ROM_SIZE:           2000 DEFINED AT LINE 7 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 19 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 20 IN constants.z80
RET_STACK_SIZE:     0080 DEFINED AT LINE 9 IN constants.z80
DATA_STACK_SIZE:    0080 DEFINED AT LINE 10 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
PAD_SIZE:           0080 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 27 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 13 IN constants.z80
                    > USED AT LINE 35 IN serial.z80
                    > USED AT LINE 42 IN serial.z80
                    > USED AT LINE 90 IN serial.z80
                    > USED AT LINE 7 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 52 IN serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 99 IN serial.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 16 IN serial.z80
                    > USED AT LINE 15 IN variables.z80
START_ROM:          0000 DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 19 IN constants.z80
                    > USED AT LINE 11
START_RAM:          2000 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 20 IN constants.z80
                    > USED AT LINE 59
END_RAM:            10000 DEFINED AT LINE 20 IN constants.z80
                    > USED AT LINE 21 IN constants.z80
RET_STACK:          10000 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 5 IN core-primitives.z80
                    > USED AT LINE 51
                    > USED AT LINE 47
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 25 IN headless-words.z80
                    > USED AT LINE 51
MSK_HIDDEN:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 52 IN core-primitives.z80
                    > USED AT LINE 373 IN core-utilities.z80
                    > USED AT LINE 418 IN core-utilities.z80
                    > USED AT LINE 51
MSK_LENGTH:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 373 IN core-utilities.z80
                    > USED AT LINE 418 IN core-utilities.z80
                    > USED AT LINE 18 IN core-words.z80
                    > USED AT LINE 51
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 85 IN headless-words.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 238 IN core-words.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 19 IN serial.z80
                    > USED AT LINE 101 IN serial.z80
                    > USED AT LINE 35 IN core-utilities.z80
LINK:               102A DEFINED AT LINE 34
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
STRUC_COUNT:        0AC0 DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        0ABF DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
CPL_COUNT:          0E82 DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 12
RST08:              0008 DEFINED AT LINE 17
RST38:              0038 DEFINED AT LINE 21
RST66:              0066 DEFINED AT LINE 25
INITSERIAL:         0067 DEFINED AT LINE 3 IN serial.z80
                    > USED AT LINE 48
SERIALIN:           0090 DEFINED AT LINE 25 IN serial.z80
                    > USED AT LINE 22
L_M_625:            009C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_630:            00AA DEFINED AT LINE 75
                    > USED AT LINE 72
CUR_ADR:            0E83 DEFINED AT LINE 58
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
L_M_637:            00BB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_647:            00D2 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               00DA DEFINED AT LINE 69 IN serial.z80
                    > USED AT LINE 146 IN serial.z80
L_M_671:            00DF DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_681:            00F8 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_690:            010E DEFINED AT LINE 75
                    > USED AT LINE 72
PUTC:               0116 DEFINED AT LINE 115 IN serial.z80
                    > USED AT LINE 154 IN serial.z80
                    > USED AT LINE 157 IN serial.z80
                    > USED AT LINE 165 IN serial.z80
                    > USED AT LINE 190 IN serial.z80
                    > USED AT LINE 275 IN serial.z80
                    > USED AT LINE 424 IN core-utilities.z80
L_M_705:            011C DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         012A DEFINED AT LINE 126 IN serial.z80
GETLINE:            0130 DEFINED AT LINE 137 IN serial.z80
                    > USED AT LINE 215 IN serial.z80
L_M_729:            0156 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_730:            015B DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_733:            0166 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_735:            016E DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_749:            018B DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       019D DEFINED AT LINE 177 IN serial.z80
                    > USED AT LINE 169 IN serial.z80
                    > USED AT LINE 171 IN serial.z80
                    > USED AT LINE 174 IN serial.z80
PRINTROUTINE:       01AC DEFINED AT LINE 187 IN serial.z80
                    > USED AT LINE 244 IN serial.z80
                    > USED AT LINE 259 IN serial.z80
L_M_771:            01B1 DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             01C0 DEFINED AT LINE 204 IN serial.z80
                    > USED AT LINE 444 IN core-utilities.z80
                    > USED AT LINE 458 IN core-utilities.z80
                    > USED AT LINE 499 IN core-utilities.z80
L_M_793:            01D3 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          01F5 DEFINED AT LINE 236 IN serial.z80
                    > USED AT LINE 167
                    > USED AT LINE 268 IN serial.z80
                    > USED AT LINE 167
PRINTSTR:           0204 DEFINED AT LINE 255 IN serial.z80
                    > USED AT LINE 403 IN core-primitives.z80
                    > USED AT LINE 68 IN core-utilities.z80
                    > USED AT LINE 422 IN core-utilities.z80
PRINTCR:            020E DEFINED AT LINE 265 IN serial.z80
                    > USED AT LINE 184 IN serial.z80
                    > USED AT LINE 408 IN core-primitives.z80
                    > USED AT LINE 430 IN core-utilities.z80
PRINTSPACE:         0217 DEFINED AT LINE 272 IN serial.z80
                    > USED AT LINE 155 IN serial.z80
                    > USED AT LINE 69 IN core-utilities.z80
                    > USED AT LINE 423 IN core-utilities.z80
TXT_NEWLINE:        021F DEFINED AT LINE 1 IN mon-utilities.z80
                    > USED AT LINE 267 IN serial.z80
TXT_PROMPT:         0222 DEFINED AT LINE 2 IN mon-utilities.z80
                    > USED AT LINE 166
STACKPROMPT:        0227 DEFINED AT LINE 3 IN mon-utilities.z80
TXT_MONITOR_INTRO:  022B DEFINED AT LINE 5 IN mon-utilities.z80
                    > USED AT LINE 166
HEADER_QUIT:        024F DEFINED AT LINE 31
                    > USED AT LINE 34
QUIT:               0256 DEFINED AT LINE 38
                    > USED AT LINE 56
HEADER_XWORD:       025F DEFINED AT LINE 31
                    > USED AT LINE 34
XWORD:              0267 DEFINED AT LINE 38
                    > USED AT LINE 11 IN core-words.z80
                    > USED AT LINE 217 IN core-words.z80
HEADER_FIND:        0270 DEFINED AT LINE 31
                    > USED AT LINE 34
FIND:               0277 DEFINED AT LINE 38
HEADER_EXECUTE:     0289 DEFINED AT LINE 31
                    > USED AT LINE 34
EXECUTE:            0293 DEFINED AT LINE 38
                    > USED AT LINE 263 IN core-words.z80
                    > USED AT LINE 35 IN headless-words.z80
                    > USED AT LINE 38 IN headless-words.z80
HEADER_NUMBER:      02A0 DEFINED AT LINE 31
                    > USED AT LINE 34
NUMBER:             02A9 DEFINED AT LINE 38
                    > USED AT LINE 45 IN headless-words.z80
HEADER_ADDSTORE:    02C3 DEFINED AT LINE 31
                    > USED AT LINE 34
ADDSTORE:           02C8 DEFINED AT LINE 38
                    > USED AT LINE 32 IN core-words.z80
HEADER_HIDDEN:      02E8 DEFINED AT LINE 31
                    > USED AT LINE 34
HIDDEN:             02F1 DEFINED AT LINE 38
HEADER_ONEPLUS:     0306 DEFINED AT LINE 31
                    > USED AT LINE 34
ONEPLUS:            030B DEFINED AT LINE 38
                    > USED AT LINE 49 IN core-words.z80
                    > USED AT LINE 221 IN core-words.z80
                    > USED AT LINE 87 IN headless-words.z80
HEADER_TWOPLUS:     030F DEFINED AT LINE 31
                    > USED AT LINE 34
TWOPLUS:            0314 DEFINED AT LINE 38
HEADER_ZBRANCH:     0319 DEFINED AT LINE 31
                    > USED AT LINE 34
ZBRANCH:            0323 DEFINED AT LINE 38
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 145 IN core-words.z80
                    > USED AT LINE 181 IN core-words.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
HEADER_BRANCH:      0337 DEFINED AT LINE 31
                    > USED AT LINE 34
BRANCH:             0340 DEFINED AT LINE 38
                    > USED AT LINE 71 IN core-primitives.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
                    > USED AT LINE 151 IN core-words.z80
                    > USED AT LINE 188 IN core-words.z80
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
HEADER_LIT:         0349 DEFINED AT LINE 31
                    > USED AT LINE 34
LIT:                034F DEFINED AT LINE 38
                    > USED AT LINE 9 IN core-words.z80
                    > USED AT LINE 16 IN core-words.z80
                    > USED AT LINE 18 IN core-words.z80
                    > USED AT LINE 25 IN core-words.z80
                    > USED AT LINE 54 IN core-words.z80
                    > USED AT LINE 145 IN core-words.z80
                    > USED AT LINE 151 IN core-words.z80
                    > USED AT LINE 153 IN core-words.z80
                    > USED AT LINE 181 IN core-words.z80
                    > USED AT LINE 183 IN core-words.z80
                    > USED AT LINE 188 IN core-words.z80
                    > USED AT LINE 206 IN core-words.z80
                    > USED AT LINE 207 IN core-words.z80
                    > USED AT LINE 209 IN core-words.z80
                    > USED AT LINE 211 IN core-words.z80
                    > USED AT LINE 213 IN core-words.z80
                    > USED AT LINE 219 IN core-words.z80
                    > USED AT LINE 220 IN core-words.z80
                    > USED AT LINE 238 IN core-words.z80
                    > USED AT LINE 250 IN core-words.z80
                    > USED AT LINE 24 IN headless-words.z80
                    > USED AT LINE 25 IN headless-words.z80
                    > USED AT LINE 51 IN headless-words.z80
                    > USED AT LINE 51 IN headless-words.z80
                    > USED AT LINE 85 IN headless-words.z80
HEADER_ZEROLESS:    0361 DEFINED AT LINE 31
                    > USED AT LINE 34
ZEROLESS:           0366 DEFINED AT LINE 38
                    > USED AT LINE 39 IN core-words.z80
                    > USED AT LINE 93 IN core-words.z80
                    > USED AT LINE 103 IN core-words.z80
                    > USED AT LINE 107 IN core-words.z80
HEADER_INVERT:      0371 DEFINED AT LINE 31
                    > USED AT LINE 34
INVERT:             037A DEFINED AT LINE 38
                    > USED AT LINE 48 IN core-words.z80
HEADER_TRUE:        0383 DEFINED AT LINE 31
                    > USED AT LINE 34
TRUE:               038A DEFINED AT LINE 38
HEADER_FALSE:       039A DEFINED AT LINE 31
                    > USED AT LINE 34
FALSE:              03A2 DEFINED AT LINE 38
HEADER_EQUAL:       03B2 DEFINED AT LINE 31
                    > USED AT LINE 34
EQUAL:              03B6 DEFINED AT LINE 38
L_M_970:            03C9 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_LESSTHAN:    03D0 DEFINED AT LINE 31
                    > USED AT LINE 34
LESSTHAN:           03D4 DEFINED AT LINE 38
                    > USED AT LINE 164 IN core-primitives.z80
L_M_980:            03E7 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_981:            03ED DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_987:            03FF DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_GREATERTHAN: 040B DEFINED AT LINE 31
                    > USED AT LINE 34
GREATERTHAN:        040F DEFINED AT LINE 38
HEADER_STORE:       0427 DEFINED AT LINE 31
                    > USED AT LINE 34
STORE:              042B DEFINED AT LINE 38
                    > USED AT LINE 168 IN core-words.z80
                    > USED AT LINE 193 IN core-words.z80
                    > USED AT LINE 215 IN core-words.z80
                    > USED AT LINE 262 IN core-words.z80
                    > USED AT LINE 87 IN headless-words.z80
HEADER_COMMA:       0448 DEFINED AT LINE 31
                    > USED AT LINE 34
COMMA:              044C DEFINED AT LINE 38
                    > USED AT LINE 33 IN headless-words.z80
                    > USED AT LINE 52 IN headless-words.z80
                    > USED AT LINE 52 IN headless-words.z80
HEADER_FETCH:       0463 DEFINED AT LINE 31
                    > USED AT LINE 34
FETCH:              0467 DEFINED AT LINE 38
                    > USED AT LINE 10 IN core-words.z80
                    > USED AT LINE 146 IN core-words.z80
                    > USED AT LINE 152 IN core-words.z80
                    > USED AT LINE 167 IN core-words.z80
                    > USED AT LINE 176 IN core-words.z80
                    > USED AT LINE 182 IN core-words.z80
                    > USED AT LINE 190 IN core-words.z80
                    > USED AT LINE 192 IN core-words.z80
                    > USED AT LINE 204 IN core-words.z80
                    > USED AT LINE 208 IN core-words.z80
                    > USED AT LINE 216 IN core-words.z80
                    > USED AT LINE 233 IN core-words.z80
                    > USED AT LINE 234 IN core-words.z80
                    > USED AT LINE 237 IN core-words.z80
                    > USED AT LINE 246 IN core-words.z80
                    > USED AT LINE 247 IN core-words.z80
                    > USED AT LINE 257 IN core-words.z80
                    > USED AT LINE 258 IN core-words.z80
                    > USED AT LINE 29 IN headless-words.z80
                    > USED AT LINE 30 IN headless-words.z80
                    > USED AT LINE 47 IN headless-words.z80
                    > USED AT LINE 48 IN headless-words.z80
                    > USED AT LINE 84 IN headless-words.z80
HEADER_CELLS:       0470 DEFINED AT LINE 31
                    > USED AT LINE 34
CELLS:              0478 DEFINED AT LINE 38
HEADER_CSTORE:      047B DEFINED AT LINE 31
                    > USED AT LINE 34
CSTORE:             0480 DEFINED AT LINE 38
                    > USED AT LINE 86 IN headless-words.z80
HEADER_CCOMMA:      049A DEFINED AT LINE 31
                    > USED AT LINE 34
CCOMMA:             049F DEFINED AT LINE 38
HEADER_CFETCH:      04C8 DEFINED AT LINE 31
                    > USED AT LINE 34
CFETCH:             04CD DEFINED AT LINE 38
                    > USED AT LINE 26 IN core-words.z80
                    > USED AT LINE 221 IN core-words.z80
HEADER_PLUS:        04D4 DEFINED AT LINE 31
                    > USED AT LINE 34
PLUS:               04D8 DEFINED AT LINE 38
                    > USED AT LINE 19 IN core-words.z80
HEADER_TWOSTAR:     04E8 DEFINED AT LINE 31
                    > USED AT LINE 34
TWOSTAR:            04ED DEFINED AT LINE 38
                    > USED AT LINE 193 IN core-primitives.z80
HEADER_MINUS:       04F4 DEFINED AT LINE 31
                    > USED AT LINE 34
MINUS:              04F8 DEFINED AT LINE 38
HEADER_USTAR:       050A DEFINED AT LINE 31
                    > USED AT LINE 34
USTAR:              050F DEFINED AT LINE 38
                    > USED AT LINE 90 IN core-words.z80
HEADER_USLASHMOD:   0529 DEFINED AT LINE 31
                    > USED AT LINE 34
USLASHMOD:          0531 DEFINED AT LINE 38
                    > USED AT LINE 111 IN core-words.z80
HEADER_LBRAC:       054D DEFINED AT LINE 31
                    > USED AT LINE 34
LBRAC:              0551 DEFINED AT LINE 38
HEADER_RBRAC:       055A DEFINED AT LINE 31
                    > USED AT LINE 34
RBRAC:              055E DEFINED AT LINE 38
HEADER_ZEQUAL:      0567 DEFINED AT LINE 31
                    > USED AT LINE 34
ZEQUAL:             056C DEFINED AT LINE 38
                    > USED AT LINE 61 IN core-words.z80
                    > USED AT LINE 26 IN headless-words.z80
                    > USED AT LINE 45 IN headless-words.z80
L_M_1097:           0574 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ZNOTEQUAL:   057B DEFINED AT LINE 31
                    > USED AT LINE 34
ZNOTEQUAL:          0581 DEFINED AT LINE 38
                    > USED AT LINE 73 IN core-words.z80
L_M_1104:           0589 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_AND:         058F DEFINED AT LINE 31
                    > USED AT LINE 34
AND:                0595 DEFINED AT LINE 38
                    > USED AT LINE 235 IN core-words.z80
                    > USED AT LINE 248 IN core-words.z80
                    > USED AT LINE 259 IN core-words.z80
HEADER_OR:          05A8 DEFINED AT LINE 31
                    > USED AT LINE 34
OR:                 05AD DEFINED AT LINE 38
                    > USED AT LINE 31 IN headless-words.z80
                    > USED AT LINE 49 IN headless-words.z80
HEADER_XOR:         05C0 DEFINED AT LINE 31
                    > USED AT LINE 34
XOR:                05C6 DEFINED AT LINE 38
                    > USED AT LINE 92 IN core-words.z80
                    > USED AT LINE 102 IN core-words.z80
HEADER_ROT:         05D9 DEFINED AT LINE 31
                    > USED AT LINE 34
ROT:                05DF DEFINED AT LINE 38
                    > USED AT LINE 113 IN core-words.z80
HEADER_NROT:        060C DEFINED AT LINE 31
                    > USED AT LINE 34
NROT:               0613 DEFINED AT LINE 38
                    > USED AT LINE 91 IN core-words.z80
                    > USED AT LINE 104 IN core-words.z80
                    > USED AT LINE 108 IN core-words.z80
                    > USED AT LINE 117 IN core-words.z80
HEADER_DUP:         0642 DEFINED AT LINE 31
                    > USED AT LINE 34
DUP:                0648 DEFINED AT LINE 38
                    > USED AT LINE 25 IN core-words.z80
                    > USED AT LINE 38 IN core-words.z80
                    > USED AT LINE 61 IN core-words.z80
                    > USED AT LINE 73 IN core-words.z80
                    > USED AT LINE 166 IN core-words.z80
                    > USED AT LINE 191 IN core-words.z80
                    > USED AT LINE 261 IN core-words.z80
                    > USED AT LINE 24 IN headless-words.z80
HEADER_SWAP:        0655 DEFINED AT LINE 31
                    > USED AT LINE 34
SWAP:               065C DEFINED AT LINE 38
                    > USED AT LINE 26 IN core-words.z80
                    > USED AT LINE 89 IN core-words.z80
                    > USED AT LINE 110 IN core-words.z80
                    > USED AT LINE 112 IN core-words.z80
                    > USED AT LINE 118 IN core-words.z80
                    > USED AT LINE 127 IN core-words.z80
                    > USED AT LINE 154 IN core-words.z80
                    > USED AT LINE 168 IN core-words.z80
                    > USED AT LINE 189 IN core-words.z80
                    > USED AT LINE 193 IN core-words.z80
                    > USED AT LINE 23 IN headless-words.z80
HEADER_DROP:        0675 DEFINED AT LINE 31
                    > USED AT LINE 34
DROP:               067C DEFINED AT LINE 38
                    > USED AT LINE 63 IN core-words.z80
                    > USED AT LINE 63 IN core-words.z80
                    > USED AT LINE 90 IN core-words.z80
                    > USED AT LINE 127 IN core-words.z80
                    > USED AT LINE 133 IN core-words.z80
                    > USED AT LINE 23 IN headless-words.z80
                    > USED AT LINE 44 IN headless-words.z80
                    > USED AT LINE 55 IN headless-words.z80
HEADER_OVER:        0689 DEFINED AT LINE 31
                    > USED AT LINE 34
OVER:               0690 DEFINED AT LINE 38
                    > USED AT LINE 72 IN core-words.z80
                    > USED AT LINE 72 IN core-words.z80
                    > USED AT LINE 88 IN core-words.z80
                    > USED AT LINE 88 IN core-words.z80
                    > USED AT LINE 101 IN core-words.z80
                    > USED AT LINE 101 IN core-words.z80
                    > USED AT LINE 106 IN core-words.z80
                    > USED AT LINE 17 IN headless-words.z80
                    > USED AT LINE 86 IN headless-words.z80
HEADER_TOR:         06B3 DEFINED AT LINE 31
                    > USED AT LINE 34
TOR:                06B8 DEFINED AT LINE 38
                    > USED AT LINE 18 IN headless-words.z80
HEADER_RFROM:       06C8 DEFINED AT LINE 31
                    > USED AT LINE 34
RFROM:              06CD DEFINED AT LINE 38
                    > USED AT LINE 83 IN core-words.z80
                    > USED AT LINE 16 IN headless-words.z80
                    > USED AT LINE 83 IN headless-words.z80
HEADER_DOT:         06DD DEFINED AT LINE 31
                    > USED AT LINE 34
DOT:                06E1 DEFINED AT LINE 38
HEADER_TYPE:        06F1 DEFINED AT LINE 31
                    > USED AT LINE 34
TYPE:               06F8 DEFINED AT LINE 38
                    > USED AT LINE 58 IN headless-words.z80
HEADER_CR:          0712 DEFINED AT LINE 31
                    > USED AT LINE 34
CR:                 0717 DEFINED AT LINE 38
TXT_INTRO:          071D DEFINED AT LINE 4 IN core-utilities.z80
TXT_STACK_UNDERFLOW: 0743 DEFINED AT LINE 5 IN core-utilities.z80
DONE:               075C DEFINED AT LINE 7 IN core-utilities.z80
FAILED:             0767 DEFINED AT LINE 8 IN core-utilities.z80
NESTINGERR:         0772 DEFINED AT LINE 10 IN core-utilities.z80
INITFORTH:          0796 DEFINED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 49
ENTER:              07D4 DEFINED AT LINE 41 IN core-utilities.z80
                    > USED AT LINE 18
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 14 IN core-utilities.z80
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 17
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
ENTER1:             07D5 DEFINED AT LINE 43 IN core-utilities.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
FORTH:              07DC DEFINED AT LINE 52 IN core-utilities.z80
PRINTNUM:           07E5 DEFINED AT LINE 59 IN core-utilities.z80
                    > USED AT LINE 397 IN core-primitives.z80
FORMATNUM:          07FE DEFINED AT LINE 80 IN core-utilities.z80
                    > USED AT LINE 67 IN core-utilities.z80
L_M_1276:           0806 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1284:           0814 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1293:           0828 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1297:           0833 DEFINED AT LINE 75
                    > USED AT LINE 72
NEGATENUM:          0843 DEFINED AT LINE 124 IN core-utilities.z80
                    > USED AT LINE 88 IN core-utilities.z80
                    > USED AT LINE 289 IN core-utilities.z80
DIVIDEWORDBYBYTE:   084B DEFINED AT LINE 141 IN core-utilities.z80
                    > USED AT LINE 94 IN core-utilities.z80
L_M_1331:           0853 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1334:           085B DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1339:           0867 DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   086C DEFINED AT LINE 167 IN core-utilities.z80
                    > USED AT LINE 258 IN core-primitives.z80
L_M_1357:           0878 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1361:           0883 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1371:           0892 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1375:           089D DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           08A6 DEFINED AT LINE 210 IN core-utilities.z80
                    > USED AT LINE 28 IN core-primitives.z80
L_M_1401:           08BA DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1411:           08CC DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1417:           08DA DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1433:           08F5 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1437:           0901 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       092C DEFINED AT LINE 284 IN core-utilities.z80
                    > USED AT LINE 255 IN core-utilities.z80
L_M_1463:           0935 DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   093E DEFINED AT LINE 304 IN core-utilities.z80
                    > USED AT LINE 249 IN core-primitives.z80
                    > USED AT LINE 246 IN core-utilities.z80
                    > USED AT LINE 276 IN core-utilities.z80
L_M_1482:           0949 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1487:           0957 DEFINED AT LINE 75
                    > USED AT LINE 72
COMPARESTR:         0960 DEFINED AT LINE 328 IN core-utilities.z80
                    > USED AT LINE 382 IN core-utilities.z80
L_M_1502:           0968 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1503:           096D DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1507:           0977 DEFINED AT LINE 75
                    > USED AT LINE 72
LOOKUP:             0986 DEFINED AT LINE 358 IN core-utilities.z80
                    > USED AT LINE 17 IN core-primitives.z80
L_M_1529:           098F DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1541:           099F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1550:           09AE DEFINED AT LINE 75
                    > USED AT LINE 72
LISTWORDS:          09BB DEFINED AT LINE 409 IN core-utilities.z80
L_M_1571:           09C4 DEFINED AT LINE 73
                    > USED AT LINE 70
XWORDSKIP:          09E7 DEFINED AT LINE 437 IN core-utilities.z80
                    > USED AT LINE 10 IN core-primitives.z80
L_M_1601:           0A22 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1603:           0A2A DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1605:           0A32 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1611:           0A41 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1612:           0A46 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1615:           0A51 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1622:           0A63 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1625:           0A6E DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0A7B DEFINED AT LINE 484 IN core-utilities.z80
                    > USED AT LINE 11 IN core-primitives.z80
L_M_1641:           0AA7 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1645:           0AAF DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_WORD:        0AC5 DEFINED AT LINE 31
                    > USED AT LINE 34
WORD:               0ACC DEFINED AT LINE 38
                    > USED AT LINE 60 IN core-words.z80
                    > USED AT LINE 82 IN core-words.z80
HEADER_TCFA:        0ADC DEFINED AT LINE 31
                    > USED AT LINE 34
TCFA:               0AE3 DEFINED AT LINE 38
                    > USED AT LINE 28 IN headless-words.z80
                    > USED AT LINE 38 IN headless-words.z80
HEADER_COUNT:       0AF9 DEFINED AT LINE 31
                    > USED AT LINE 34
COUNT:              0B01 DEFINED AT LINE 38
                    > USED AT LINE 17 IN core-words.z80
                    > USED AT LINE 83 IN core-words.z80
                    > USED AT LINE 217 IN core-words.z80
                    > USED AT LINE 17 IN headless-words.z80
HEADER_ALLOT:       0B13 DEFINED AT LINE 31
                    > USED AT LINE 34
ALLOT:              0B1B DEFINED AT LINE 38
                    > USED AT LINE 222 IN core-words.z80
HEADER_ABS:         0B25 DEFINED AT LINE 31
                    > USED AT LINE 34
ABS:                0B2B DEFINED AT LINE 38
                    > USED AT LINE 89 IN core-words.z80
                    > USED AT LINE 110 IN core-words.z80
HEADER_NEGATE:      0B3B DEFINED AT LINE 31
                    > USED AT LINE 34
NEGATE:             0B44 DEFINED AT LINE 38
                    > USED AT LINE 41 IN core-words.z80
                    > USED AT LINE 95 IN core-words.z80
                    > USED AT LINE 115 IN core-words.z80
                    > USED AT LINE 120 IN core-words.z80
HEADER_BL:          0B4E DEFINED AT LINE 31
                    > USED AT LINE 34
BL:                 0B53 DEFINED AT LINE 38
                    > USED AT LINE 60 IN core-words.z80
                    > USED AT LINE 82 IN core-words.z80
HEADER_INTERPRET:   0B5D DEFINED AT LINE 31
                    > USED AT LINE 34
INTERPRET:          0B69 DEFINED AT LINE 38
                    > USED AT LINE 6 IN core-primitives.z80
HEADER_INTERPTOKEN: 0B94 DEFINED AT LINE 31
                    > USED AT LINE 34
INTERPTOKEN:        0BA2 DEFINED AT LINE 38
                    > USED AT LINE 66 IN core-words.z80
HEADER_TICK:        0BBE DEFINED AT LINE 31
                    > USED AT LINE 34
TICK:               0BC2 DEFINED AT LINE 38
HEADER_STAR:        0BD8 DEFINED AT LINE 31
                    > USED AT LINE 34
STAR:               0BDC DEFINED AT LINE 38
HEADER_SLASHMOD:    0BFC DEFINED AT LINE 31
                    > USED AT LINE 34
SLASHMOD:           0C03 DEFINED AT LINE 38
                    > USED AT LINE 126 IN core-words.z80
                    > USED AT LINE 132 IN core-words.z80
HEADER_SLASH:       0C37 DEFINED AT LINE 31
                    > USED AT LINE 34
SLASH:              0C3B DEFINED AT LINE 38
HEADER_MOD:         0C47 DEFINED AT LINE 31
                    > USED AT LINE 34
MOD:                0C4D DEFINED AT LINE 38
HEADER_IF:          0C57 DEFINED AT LINE 31
                    > USED AT LINE 34
IF:                 0C5C DEFINED AT LINE 38
HEADER_ELSE:        0C72 DEFINED AT LINE 31
                    > USED AT LINE 34
ELSE:               0C79 DEFINED AT LINE 38
HEADER_ENDIF:       0C93 DEFINED AT LINE 31
                    > USED AT LINE 34
ENDIF:              0C9B DEFINED AT LINE 38
XENDIF:             0CA5 DEFINED AT LINE 164 IN core-words.z80
                    > USED AT LINE 155 IN core-words.z80
                    > USED AT LINE 160 IN core-words.z80
HEADER_BEGIN:       0CB9 DEFINED AT LINE 31
                    > USED AT LINE 34
BEGIN:              0CC1 DEFINED AT LINE 38
HEADER_WHILE:       0CCD DEFINED AT LINE 31
                    > USED AT LINE 34
WHILE:              0CD5 DEFINED AT LINE 38
HEADER_REPEAT:      0CEB DEFINED AT LINE 31
                    > USED AT LINE 34
REPEAT:             0CF4 DEFINED AT LINE 38
HEADER_SQUOTE:      0D1A DEFINED AT LINE 31
                    > USED AT LINE 34
SQUOTE:             0D1F DEFINED AT LINE 38
HEADER_QT:          0D21 DEFINED AT LINE 31
                    > USED AT LINE 34
QT:                 0D25 DEFINED AT LINE 38
                    > USED AT LINE 200 IN core-words.z80
HEADER_LBRACE:      0D79 DEFINED AT LINE 31
                    > USED AT LINE 34
LBRACE:             0D7D DEFINED AT LINE 38
                    > USED AT LINE 144 IN core-words.z80
                    > USED AT LINE 175 IN core-words.z80
HEADER_RBRACE:      0DA1 DEFINED AT LINE 31
                    > USED AT LINE 34
RBRACE:             0DA5 DEFINED AT LINE 38
                    > USED AT LINE 256 IN core-words.z80
HEADER_RBRACEEXEC:  0DC5 DEFINED AT LINE 31
                    > USED AT LINE 34
RBRACEEXEC:         0DCD DEFINED AT LINE 38
                    > USED AT LINE 161 IN core-words.z80
                    > USED AT LINE 194 IN core-words.z80
EXIT:               0DEF DEFINED AT LINE 7 IN headless-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 84 IN core-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 250 IN core-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
EXIT_FORTH:         0DF2 DEFINED AT LINE 11 IN headless-words.z80
LITSTR:             0DF3 DEFINED AT LINE 14 IN headless-words.z80
                    > USED AT LINE 219 IN core-words.z80
                    > USED AT LINE 56 IN headless-words.z80
INTERPWORD:         0E05 DEFINED AT LINE 21 IN headless-words.z80
                    > USED AT LINE 75 IN core-words.z80
INTERPLITERAL:      0E49 DEFINED AT LINE 42 IN headless-words.z80
                    > USED AT LINE 77 IN core-words.z80
NESTPLUS:           0E88 DEFINED AT LINE 62 IN headless-words.z80
                    > USED AT LINE 240 IN core-words.z80
NESTMINUS:          0E92 DEFINED AT LINE 68 IN headless-words.z80
                    > USED AT LINE 245 IN core-words.z80
DODOES:             0E9C DEFINED AT LINE 74 IN headless-words.z80
XDOES:              0EAC DEFINED AT LINE 81 IN headless-words.z80
HEADER_VERSION:     0EC6 DEFINED AT LINE 31
                    > USED AT LINE 34
VERSION:            0ED0 DEFINED AT LINE 38
HEADER_RZ:          0EE0 DEFINED AT LINE 31
                    > USED AT LINE 34
RZ:                 0EE5 DEFINED AT LINE 38
HEADER___MSK_IMMED: 0EF5 DEFINED AT LINE 31
                    > USED AT LINE 34
HEADER___MSK_HIDDEN: 0F11 DEFINED AT LINE 31
                    > USED AT LINE 34
HEADER___MSK_LENGTH: 0F2E DEFINED AT LINE 31
                    > USED AT LINE 34
HEADER_FRAMEPTR:    0F4B DEFINED AT LINE 31
                    > USED AT LINE 34
FRAMEPTR:           0F56 DEFINED AT LINE 38
HEADER_PAD:         0F66 DEFINED AT LINE 31
                    > USED AT LINE 34
PAD:                0F6C DEFINED AT LINE 38
HEADER_HERE:        0F7C DEFINED AT LINE 31
                    > USED AT LINE 34
HERE:               0F83 DEFINED AT LINE 38
                    > USED AT LINE 10 IN core-words.z80
                    > USED AT LINE 32 IN core-words.z80
                    > USED AT LINE 146 IN core-words.z80
                    > USED AT LINE 152 IN core-words.z80
                    > USED AT LINE 167 IN core-words.z80
                    > USED AT LINE 176 IN core-words.z80
                    > USED AT LINE 182 IN core-words.z80
                    > USED AT LINE 190 IN core-words.z80
                    > USED AT LINE 192 IN core-words.z80
                    > USED AT LINE 237 IN core-words.z80
                    > USED AT LINE 262 IN core-words.z80
HEADER_INTP_STOP:   0F93 DEFINED AT LINE 31
                    > USED AT LINE 34
INTP_STOP:          0F9F DEFINED AT LINE 38
HEADER_STATE:       0FAF DEFINED AT LINE 31
                    > USED AT LINE 34
STATE:              0FB7 DEFINED AT LINE 38
                    > USED AT LINE 204 IN core-words.z80
                    > USED AT LINE 233 IN core-words.z80
                    > USED AT LINE 246 IN core-words.z80
                    > USED AT LINE 257 IN core-words.z80
                    > USED AT LINE 29 IN headless-words.z80
                    > USED AT LINE 47 IN headless-words.z80
HEADER_NESTING:     0FC7 DEFINED AT LINE 31
                    > USED AT LINE 34
NESTING:            0FD1 DEFINED AT LINE 38
                    > USED AT LINE 234 IN core-words.z80
                    > USED AT LINE 247 IN core-words.z80
                    > USED AT LINE 258 IN core-words.z80
                    > USED AT LINE 30 IN headless-words.z80
                    > USED AT LINE 48 IN headless-words.z80
HEADER_SP0:         0FE1 DEFINED AT LINE 31
                    > USED AT LINE 34
SP0:                0FE7 DEFINED AT LINE 38
HEADER_BASE:        0FF7 DEFINED AT LINE 31
                    > USED AT LINE 34
BASE:               0FFE DEFINED AT LINE 38
HEADER_LATESTSTR:   100E DEFINED AT LINE 31
                    > USED AT LINE 34
LATESTSTR:          101A DEFINED AT LINE 38
                    > USED AT LINE 208 IN core-words.z80
                    > USED AT LINE 215 IN core-words.z80
                    > USED AT LINE 216 IN core-words.z80
HEADER_LATEST:      102A DEFINED AT LINE 31
                    > USED AT LINE 31 IN core-utilities.z80
                    > USED AT LINE 34
LATEST:             1033 DEFINED AT LINE 38
                    > USED AT LINE 84 IN headless-words.z80
START:              1043 DEFINED AT LINE 46
                    > USED AT LINE 14
SERBUF:             2000 DEFINED AT LINE 7 IN variables.z80
                    > USED AT LINE 7 IN serial.z80
                    > USED AT LINE 42 IN serial.z80
                    > USED AT LINE 44 IN serial.z80
                    > USED AT LINE 90 IN serial.z80
                    > USED AT LINE 92 IN serial.z80
SERINPTR:           203F DEFINED AT LINE 8 IN variables.z80
                    > USED AT LINE 8 IN serial.z80
                    > USED AT LINE 39 IN serial.z80
                    > USED AT LINE 46 IN serial.z80
SERRDPTR:           2041 DEFINED AT LINE 9 IN variables.z80
                    > USED AT LINE 9 IN serial.z80
                    > USED AT LINE 87 IN serial.z80
                    > USED AT LINE 95 IN serial.z80
SERBUFUSED:         2043 DEFINED AT LINE 10 IN variables.z80
                    > USED AT LINE 5 IN serial.z80
                    > USED AT LINE 34 IN serial.z80
                    > USED AT LINE 49 IN serial.z80
                    > USED AT LINE 51 IN serial.z80
                    > USED AT LINE 82 IN serial.z80
                    > USED AT LINE 96 IN serial.z80
                    > USED AT LINE 98 IN serial.z80
                    > USED AT LINE 127 IN serial.z80
LINEBUFSTART:       2045 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 12 IN serial.z80
                    > USED AT LINE 213 IN serial.z80
LINEBUFSIZE:        2047 DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 17 IN serial.z80
                    > USED AT LINE 214 IN serial.z80
CURRKEY:            2049 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 13 IN serial.z80
                    > USED AT LINE 208 IN serial.z80
                    > USED AT LINE 217 IN serial.z80
                    > USED AT LINE 222 IN serial.z80
                    > USED AT LINE 225 IN serial.z80
LINEBUFTOP:         204B DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 14 IN serial.z80
                    > USED AT LINE 209 IN serial.z80
                    > USED AT LINE 220 IN serial.z80
LINEBUF:            204D DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 11 IN serial.z80
                    > USED AT LINE 216 IN serial.z80
EXITADDR:           20CD DEFINED AT LINE 20 IN variables.z80
                    > USED AT LINE 53 IN core-utilities.z80
                    > USED AT LINE 55 IN core-utilities.z80
WORDBUF:            20CF DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 66 IN core-utilities.z80
                    > USED AT LINE 112 IN core-utilities.z80
                    > USED AT LINE 209 IN core-words.z80
                    > USED AT LINE 213 IN core-words.z80
WORDBUF2:           210F DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 211 IN core-words.z80
DATA_STACK:         214F DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 13 IN core-utilities.z80
IS_LITERAL:         21CF DEFINED AT LINE 24 IN variables.z80
                    > USED AT LINE 21 IN core-utilities.z80
VAR_FRAMEPTR:       21D1 DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 19 IN core-utilities.z80
                    > USED AT LINE 44
VAR_PAD:            21D3 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 44
VAR_HERE:           2253 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 180 IN core-primitives.z80
                    > USED AT LINE 182 IN core-primitives.z80
                    > USED AT LINE 204 IN core-primitives.z80
                    > USED AT LINE 207 IN core-primitives.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 44
VAR_INTP_STOP:      2255 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 20 IN core-utilities.z80
                    > USED AT LINE 44
VAR_STATE:          2257 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 272 IN core-primitives.z80
                    > USED AT LINE 277 IN core-primitives.z80
                    > USED AT LINE 23 IN core-utilities.z80
                    > USED AT LINE 44
VAR_NESTING:        2259 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 22 IN core-utilities.z80
                    > USED AT LINE 63 IN headless-words.z80
                    > USED AT LINE 65 IN headless-words.z80
                    > USED AT LINE 69 IN headless-words.z80
                    > USED AT LINE 71 IN headless-words.z80
                    > USED AT LINE 44
VAR_SP0:            225B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 15 IN core-utilities.z80
                    > USED AT LINE 44
VAR_BASE:           225D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 26 IN core-utilities.z80
                    > USED AT LINE 64 IN core-utilities.z80
                    > USED AT LINE 245 IN core-utilities.z80
                    > USED AT LINE 263 IN core-utilities.z80
                    > USED AT LINE 275 IN core-utilities.z80
                    > USED AT LINE 44
VAR_LATEST_STR:     225F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 33 IN core-utilities.z80
                    > USED AT LINE 44
VAR_LATEST:         2261 DEFINED AT LINE 35 IN variables.z80
                    > USED AT LINE 32 IN core-utilities.z80
                    > USED AT LINE 359 IN core-utilities.z80
                    > USED AT LINE 410 IN core-utilities.z80
                    > USED AT LINE 44
START_USER:         2263 DEFINED AT LINE 87
                    > USED AT LINE 28 IN core-utilities.z80
